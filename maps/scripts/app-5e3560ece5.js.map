{"version":3,"sources":["scripts/app.js"],"names":["angular","module","cardsBox","CardsBoxController","utils","$q","matches","$scope","teams","vm","this","cardTypes","disqualificationDays","scores","setLoading","res","loading","resolve","unsetLoading","createCard","form","then","form2Card","cardData","matchId","cardsKey","resetForm","destroyCard","card","destroyMatchCard","cardId","resetFormModel","teamId","goals","playId","resetFormFields","$setPristine","$setUntouched","typeaheadName","val","arguments","length","isString","name","isObject","populateForm","typeaheadSurname","surname","obj","isNumber","listPlayers","autocomplete","isArray","forEach","el","push","playFirstname","playSurname","playTeamId","$inject","directive","restrict","templateUrl","controller","controllerAs","bindToController","replace","scope","cards","teamName","scorersBox","ScorersBoxController","splice","createScorer","form2Scorer","scorerData","scorersKey","destroyScorer","scorer","scorers","scorerShow","ScorerShowController","$uibModal","models","ScorerShowLink","attrs","hover","$apply","showControls","link","scorerEdit","ScorerEditController","events","createNewScorerMatch","open","windowClass","result","isDefined","form2ScorerMatch","createScorerMatch","ScorerEditLink","cancel","find","collapse","teamShow","TeamShowController","destroy","team","TeamShowLink","teamEdit","TeamEditController","submit","form2Team","teamData","update","TeamEditLink","TeamDestroyController","$uibModalInstance","ok","close","dismiss","TeamCreateController","roundNames","alphabetChars","scorerMatchShow","ScorerMatchShowController","submitGoal","updateScorerMatch","currentEvent","evenId","scorerMatch","matcId","scor_play_id","scorerMatchPlayerId","scor_goal","goal","showScorers","destroyScorerMatch","ScorerMatchShowLink","ScorerMatchDestroyController","pressShow","PressShowController","press","PressShowLink","PressDestroyController","PressCreateController","copy","multiSelectTranslation","istevenMultiSelectTranslation","selectFields","key","options","id","playerShow","PlayerShowController","destroyPlayer","player","PlayerShowLink","playerEdit","PlayerEditController","form2Player","playerData","updatePlayer","PlayerEditLink","MatchDestroyController","PlayerCreateController","managerMatchShow","ManagerMatchShowController","ManagerMatchShowLink","match","managerMatchEdit","ManagerMatchEditController","form2Match","matchData","matcDayId","ManagerMatchEditLink","eventShow","EventShowController","event","EventShowLink","hideControls","EventRecreateCalendarController","eventEdit","EventEditController","pointsOptions","form2Event","eventData","publish","even_stato_evento","unpublish","recreateCalendar","createCalendar","show","EventEditLink","on","listRegions","$watch","newVal","oldVal","currentDay","evenCurrentDay","EventDestroyController","invitationShow","InvitationShowController","invitations","invitation","listSent","InvitationShowLink","InvitationDestroyController","InvitationCreateController","cardShow","CardShowController","CardShowLink","config","cardEdit","CardEditController","CardEditLink","cardMatchShow","form2CardMatch","updateEventCard","cardMatch","cardMatchPlayerId","cardMatchKey","destroyEventCard","CardMatchDestroyController","matchShow","MatchShowController","advancedEdit","size","MatchShowLink","matchEdit","MatchEditController","scoreA","scoreB","MatchEditLink","DayCreateController","MatchCreateController","MatchAdvancedEditController","teamA","matcTeamIdA","teamB","matcTeamIdB","played","value","matcFlgPlay","createAutocompleteObj","players","autocompleteA","autocompleteB","wizardStepBox","WizardStepBoxController","WizardStepBoxLink","step","wizard","currentStep","active","first","addClass","hide","element","AdminLTE","boxWidget","title","transclude","wizardProgress","WizardProgressController","range","n","Array","ScorersController","updateCurrentEvent","i","list","TeamsController","createNewTeam","create","RegisterController","users","$state","onLoggedOut","user","register","onLoggedIn","go","ScoreboardController","showScoreboard","ProfileController","userTypes","num","userSubscriptions","updateForm","type","currentUser","subscription","info","PressController","createNewPress","form2Press","PlayersController","updateTeam","currentTeam","createNewPlayer","createPlayer","ManagerMatchesController","managedEvents","updateMatchDay","matchDays","listManaged","ManagerEventsController","LoginController","ezfb","login","loginFacebook","configureFacebookCallbacks","EventsController","tableFilters","eventFilter","evenStatoEvento","boxClass","acceptInvitation","accept","listReceived","declineInvitation","decline","InvitationsController","createNewInvitation","form2Invitation","DisciplinaryController","eventId","all","listYellows","listDiffides","listSqualifications","cardConfigs","header","emptyMessage","fields","controls","edit","delete","editDetail","deleteDetail","detailFields","daySqualifications","squalificationStatus","note","CreateEventController","Wizard","resPipe","toastr","$log","totalSteps","startFromStep","forceManualRounds","initDefaultTeams","step2","addTeam","roundType","round","removeTeam","index","error","step1Done","step1","next","submitStep1","step2Done","submitStep2","form2Teams","addGroup","step3Done","submitWizard","submitStep3","manualSubmit","CalendarController","createNewMatch","createNewDay","form2Day","createDay","AccessController","userToken","wizardTextProgressFilter","filter","factory","defaults","merge","prev","str2Date","str","split","date","trim","date2Str","dateStart","dateEnd","str2Time","selectAll","selectNone","reset","search","nothingSelected","uiState","timepicker","timepickerLink","clockpicker","autoclose","showOnHover","linkFunc","visible","target","removeClass","showAnimate","updateVisibility","$filter","longTermMemory","parseResponse","status_code","data","reject","unwrapArray","camelize","newRes","v","k","injectUserDefaults","displayName","email","updateCurrentUser","updateSentInvitations","sentInvitations","updateReceivedInvitations","receivedInvitations","updateMergeCurrentUser","permissions","updatePreferences","preferences","mockAnonymousUser","accessToken","uuid","memorizeCurrentUser","memorize","injectEventsDefaults","evenFormula","evenFormulaPretty","evenType","evenTypePretty","dates","evenDateStart","evenDateEnd","isUndefined","evenDayActive","evenName","regions","regiName","evenCode","evenSeason","join","sort","a","b","matcProg","injectInvitationsDefaults","status","statusPretty","dateInvitationPretty","dateInvitation","updateEvents","updateManagedEvents","removeEvent","memorizeEvents","updateRegions","memorizeRegions","currentEventMerged","memorizeCurrentEvent","updateMatches","updateMatch","updateMatchScorers","injectMatchDefaults","matcDateMatch","matcDateMatchPretty","matchCardsTeamA","injectCardsDefaults","injectPressDefaults","pressStato","pressStatoPretty","pressDate","pressDatePretty","injectEventCardsDefaults","matcRedCards","matcYellowCards","flgCards","flgCardsPretty","typeSqualifications","typeSqualificationsPretty","insertMatchDay","updateTeams","updateScoreboard","scoreboard","updateScorers","updateYellows","yellows","updateDiffides","diffides","updateSqualifications","squalifications","updatePress","pressId","updatePlayers","insertPlayer","insertScorer","curMatch","insertCard","removeScorer","playerId","j","removeEventCard","curPlayer","removePress","presId","removeScorerMatch","curScorer","scorPlayId","matcScorers","removeMatchCard","removeMatch","log","debugger","allowedKeys","indexOf","localStorage","toJson","remember","fromJson","e","forget","oblivion","clear","frispoSidebar","$timeout","SidebarController","state","manageMenuEntries","SidebarLink","window","trigger","frispoHeader","HeaderController","HeaderLink","frispoFooter","FooterController","FooterLink","$http","provisioningApiUrl","eventsApiUrl","teamsApiUrl","pressApiUrl","matchesApiUrl","cardsApiUrl","scorersApiUrl","rankingApiUrl","authorization","anonymousToken","userApiUrl","cache","helpers","cacheOrHttp","method","fullUrl","headers","keep","toUpperCase","url","promise","err","response","provisioningApiCall","Authorization","eventsApiCall","teamsApiCall","pressApiCall","matchesApiCall","cardsApiCall","scorersApiCall","rankingApiCall","userApiCall","expect200","notification","msg","success","unwrapData","frispoApi","userData","password","facebookData","facebook_token","authResponse","logout","listSentInvitations","listReceivedInvitations","createInvitation","invitationData","updateInvitation","listEvents","listManagedEvents","createEvent","updateEvent","destroyEvent","showEvent","showEventScoreboard","showTournamentScoreboard","scorerMatchData","listPress","pressData","createPress","destroyPress","showPress","listTeams","createTeam","destroyTeam","showTeam","addGroupTeams","teamsData","showPreferences","showUser","updateUser","createMatchesCalendar","listMatches","day","showMatch","listMatchScorers","listYellowCards","updateCard","createMatch","matchDayId","dayData","destroyMatch","errorManager","getErrorString","full_messages","error_description","errors","myErr","compareTo","compareToLink","ngModel","$validators","modelvalue","otherModelValue","$validate","require","datepicker","datepickerLink","watchInput","drp","elementChanged","daterangepicker","autoUpdateInput","locale","format","separator","ev","picker","model","startDate","endDate","singleDatePicker","bootstrapMultiselect","bootstrapMultiselectLink","multiselect","terminal","canDirective","watcher","shown","negative","permission","toShow","permName","can","slice","substr","$on","infoCalls","current","loggedIn","setAnonymousUser","bkp","unsetAnonymousUser","checkFacebookLogin","getLoginStatus","Event","subscribe","formData","extra","teamTime","time","captain","team_captain","team_time","team_name","phone","team_mobile_phone","place","team_place","team_groups","desc","team_description","player_name","player_surname","press_name","ranking","press_ranking","press_matches","press_scorers","yellowcards","press_yellowcards","diffide","press_diffide","press_squalifications","amends","press_amends","press_events","pres_even_id","undefined","listScorers","matchTime","matchDate","matc_id","matc_team_id_a","matc_team_id_b","matc_goal_team_a","matc_goal_team_b","dateExpected","matc_date_expected","matc_date_match","matc_time","address","matc_address","matc_name_groups","matc_flg_play","shootoutA","matc_shootout_team_a","shootoutB","matc_shootout_team_b","matc_place","team_id","play_id","play_name","play_surname","flg_cards","day_squalification","squalification_status","cardType","mada_name","mada_description","invModel","invitation_id","invitationId","mail_guest","mailGuest","even_id","guestEmail","mail_invitingmember","apiCall","matcScorerGoal","dateRange","even_name","even_description","even_email","even_address","even_type","organizer","even_organize_by","formula","even_formula","telephone","even_mobile_phone","yellowPoints","even_yellow_points","redPoints","even_red_points","yellowDiffide","even_yellow_diffide","yellowDiffide2","even_yellow_diffide2","even_date_start","even_date_end","region","regiId","regi_id","even_day_active","runBlock","$rootScope","defaultBodyClasses","stateChangeSuccess","toState","pms","params","bodyClasses","run","routerConfig","$stateProvider","$urlRouterProvider","requireLoggedIn","abstract","onEnter","otherwise","constant","malarkey","moment","$logProvider","toastrConfig","$animateProvider","$locationProvider","ezfbProvider","debugEnabled","classNameFilter","allowHtml","timeOut","positionClass","preventDuplicates","progressBar","html5Mode","hashPrefix","setLocale","setInitParams","appId","$templateCache","put"],"mappings":"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","file":"scripts/app-5e3560ece5.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular\n    .module('frispo', [\n      'ngAnimate',\n      'ngCookies',\n      'ngSanitize',\n      'ngMessages',\n      'ui.router',\n      'puigcerber.camelize',\n      'toastr',\n      'ezfb',\n      'ui.bootstrap',\n      'isteven-multi-select'\n    ]);\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('cardsBox', cardsBox);\n\n  /** @ngInject */\n  function cardsBox() {\n    var directive = {\n      restrict: 'EA',\n      templateUrl: 'app/pages/calendar/advancedEdit/cardsBox/cardsBox.html',\n      controller: CardsBoxController,\n      controllerAs: 'cardsBox',\n      bindToController: true,\n      replace: true,\n      scope: {\n        cards: '=',\n        teamName: '=',\n        teamId: '=',\n        matchId: '=',\n        cardsKey: '@',\n        autocomplete: '='\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function CardsBoxController(utils, $q, matches, $scope, teams) {\n      var vm = this;\n\n      vm.cardTypes = utils.cardTypes();\n      vm.disqualificationDays = utils.scores();\n\n      vm.setLoading = function (res) {\n        vm.loading = true;\n        return $q.resolve(res);\n      }\n\n      vm.unsetLoading = function (res) {\n        vm.loading = false;\n        return $q.resolve(res);\n      }\n\n      vm.createCard = function () {\n        vm.setLoading(vm.form)\n          .then(matches.form2Card)\n          .then(function (cardData) {\n            return matches.createCard(vm.matchId, cardData, vm.cardsKey);\n          })\n          .then(vm.resetForm)\n          .finally(vm.unsetLoading);\n      }\n\n      vm.destroyCard = function (card) {\n        vm.setLoading()\n          .then(function () {\n            return matches.destroyMatchCard(vm.matchId, card.cardId, vm.cardsKey)\n          })\n          .finally(vm.unsetLoading);\n      }\n\n      vm.resetFormModel = function () {\n        vm.form = { teamId: vm.teamId, goals: 1, playId: 0 }\n      }\n\n      vm.resetFormFields = function () {\n        $scope['createCardForm' + vm.teamId].$setPristine();\n        $scope['createCardForm' + vm.teamId].$setUntouched();\n      }\n\n      vm.resetForm = function (res) {\n        vm.resetFormModel();\n        vm.resetFormFields();\n        return res;\n      }\n\n      // GetterSetter function - see angular docs for ng-model-options\n      vm.typeaheadName = function (val) {\n        if(arguments.length){\n          if(angular.isString(val)){\n            vm.form.name = val;\n            vm.form.playId = 0;\n          }\n          else if(angular.isObject(val)){\n            vm.populateForm(val);\n          }\n        }\n        else{\n          return vm.form.name;\n        }\n      }\n\n      // GetterSetter function - see angular docs for ng-model-options\n      vm.typeaheadSurname = function (val) {\n        if(arguments.length){\n          if(angular.isString(val)){\n            vm.form.surname = val;\n            vm.form.playId = 0;\n          }\n          else if(angular.isObject(val)){\n            vm.populateForm(val);\n          }\n        }\n        else{\n          return vm.form.surname;\n        }\n      }\n\n      vm.populateForm = function (obj) {\n        if(angular.isString(obj.name)) vm.form.name = obj.name;\n        if(angular.isString(obj.surname)) vm.form.surname = obj.surname;\n        if(angular.isNumber(obj.teamId)) vm.form.teamId = obj.teamId;\n        if(angular.isNumber(obj.playId)) vm.form.playId = obj.playId;\n      }\n\n      teams.listPlayers(vm.teamId)\n        .then(function (res) {\n          vm.autocomplete = [];\n          if(angular.isArray(res)){\n            angular.forEach(res, function (el) {\n              vm.autocomplete.push({\n                playId: el.playId,\n                name: el.playFirstname,\n                surname: el.playSurname,\n                teamId: el.playTeamId\n              });\n            });\n          }\n        });\n\n      vm.resetFormModel();\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('scorersBox', scorersBox);\n\n  /** @ngInject */\n  function scorersBox() {\n    var directive = {\n      restrict: 'EA',\n      templateUrl: 'app/pages/calendar/advancedEdit/scorersBox/scorersBox.html',\n      controller: ScorersBoxController,\n      controllerAs: 'scorersBox',\n      bindToController: true,\n      replace: true,\n      scope: {\n        scorers: '=',\n        teamName: '=',\n        teamId: '=',\n        matchId: '=',\n        autocomplete: '=',\n        scorersKey: '@'\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function ScorersBoxController(utils, $q, matches, teams, $scope) {\n      var vm = this;\n      vm.scores = utils.scores();\n      vm.scores.splice(0,1);\n\n      vm.setLoading = function (res) {\n        vm.loading = true;\n        return $q.resolve(res);\n      }\n\n      vm.unsetLoading = function (res) {\n        vm.loading = false;\n        return $q.resolve(res);\n      }\n\n      vm.createScorer = function () {\n        vm.setLoading(vm.form)\n          .then(matches.form2Scorer)\n          .then(function (scorerData) {\n            return matches.createScorer(vm.matchId, scorerData, vm.scorersKey);\n          })\n          .then(vm.resetForm)\n          .finally(vm.unsetLoading);\n      }\n\n      vm.destroyScorer = function (scorer) {\n        vm.setLoading()\n          .then(function () {\n            return matches.destroyScorer(vm.matchId, scorer.playId, vm.scorersKey)\n          })\n          .finally(vm.unsetLoading);\n      }\n\n      vm.resetFormModel = function () {\n        vm.form = { teamId: vm.teamId, goals: 1, playId: 0 }\n      }\n\n      vm.resetFormFields = function () {\n        $scope['createScorerForm' + vm.teamId].$setPristine();\n        $scope['createScorerForm' + vm.teamId].$setUntouched();\n      }\n\n      vm.resetForm = function (res) {\n        vm.resetFormModel();\n        vm.resetFormFields();\n        return res;\n      }\n\n      // GetterSetter function - see angular docs for ng-model-options\n      vm.typeaheadName = function (val) {\n        if(arguments.length){\n          if(angular.isString(val)){\n            vm.form.name = val;\n            vm.form.playId = 0;\n          }\n          else if(angular.isObject(val)){\n            vm.populateForm(val);\n          }\n        }\n        else{\n          return vm.form.name;\n        }\n      }\n\n      // GetterSetter function - see angular docs for ng-model-options\n      vm.typeaheadSurname = function (val) {\n        if(arguments.length){\n          if(angular.isString(val)){\n            vm.form.surname = val;\n            vm.form.playId = 0;\n          }\n          else if(angular.isObject(val)){\n            vm.populateForm(val);\n          }\n        }\n        else{\n          return vm.form.surname;\n        }\n      }\n\n      vm.populateForm = function (obj) {\n        if(angular.isString(obj.name)) vm.form.name = obj.name;\n        if(angular.isString(obj.surname)) vm.form.surname = obj.surname;\n        if(angular.isNumber(obj.teamId)) vm.form.teamId = obj.teamId;\n        if(angular.isNumber(obj.playId)) vm.form.playId = obj.playId;\n      }\n\n      vm.resetFormModel();\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('scorerShow', scorerShow);\n\n  /** @ngInject */\n  function scorerShow() {\n    var directive = {\n      restrict: 'EA',\n      templateUrl: 'app/pages/scorers/show/show.html',\n      controller: ScorerShowController,\n      controllerAs: 'scorerShow',\n      bindToController: true,\n      replace: true,\n      link: ScorerShowLink,\n      scope: {\n        scorer: '=scorerShow'\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function ScorerShowController($uibModal, models) {\n      var vm = this;\n      vm.models = models;\n    }\n\n    /** @ngInject */\n    function ScorerShowLink(scope, el, attrs, vm){\n      el.hover(\n        function () {\n          scope.$apply(function () {\n            vm.showControls = true;\n          })\n        },\n        function () {\n          scope.$apply(function () {\n            vm.showControls = false;\n          })\n        }\n      );\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('scorerEdit', scorerEdit);\n\n  /** @ngInject */\n  function scorerEdit() {\n    var directive = {\n      restrict: 'EA',\n      templateUrl: 'app/pages/scorers/edit/edit.html',\n      controller: ScorerEditController,\n      controllerAs: 'scorerEdit',\n      link: ScorerEditLink,\n      bindToController: true,\n      replace: true,\n      scope: {\n        scorer: '=scorerEdit'\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function ScorerEditController(models, $q, $uibModal, events) {\n      var vm = this;\n\n      vm.models = models;\n\n      vm.setLoading = function (res) {\n        vm.loading = true;\n        return $q.resolve(res);\n      }\n\n      vm.unsetLoading = function (res) {\n        vm.loading = false;\n        return $q.resolve(res);\n      }\n\n      vm.createNewScorerMatch = function () {\n        $uibModal.open({\n            templateUrl: 'app/pages/scorerMatch/create/create.html',\n            controller: 'ScorerMatchCreateController',\n            controllerAs: 'scorerMatchCreate',\n            windowClass: 'modal-success'\n          }).result\n          .then(function (res) {\n            if(angular.isDefined(res)){\n              vm.setLoading(res)\n                .then(events.form2ScorerMatch)\n                .then(events.createScorerMatch)\n                .finally(vm.unsetLoading);\n            }\n          })\n      }\n    }\n\n    function ScorerEditLink(scope, el, attrs, vm) {\n      vm.cancel = function () {\n        el.find('.accordion-body').collapse('hide');\n      }\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('teamShow', teamShow);\n\n  /** @ngInject */\n  function teamShow() {\n    var directive = {\n      restrict: 'EA',\n      templateUrl: 'app/pages/teams/show/show.html',\n      controller: TeamShowController,\n      controllerAs: 'teamShow',\n      bindToController: true,\n      replace: true,\n      link: TeamShowLink,\n      scope: {\n        team: '=teamShow'\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function TeamShowController($uibModal, teams, models) {\n      var vm = this;\n\n      vm.destroy = function() {\n\n        $uibModal.open({\n            templateUrl: 'app/pages/teams/destroy/destroy.html',\n            controller: 'TeamDestroyController',\n            controllerAs: 'teamDestroy',\n            windowClass: 'modal-danger'\n          }).result\n          .then(function (res) {\n            if(res === true){\n              teams.destroy(vm.team);\n            }\n          })\n      }\n\n      vm.models = models;\n    }\n\n    /** @ngInject */\n    function TeamShowLink(scope, el, attrs, vm){\n      el.hover(\n        function () {\n          scope.$apply(function () {\n            vm.showControls = true;\n          })\n        },\n        function () {\n          scope.$apply(function () {\n            vm.showControls = false;\n          })\n        }\n      );\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('teamEdit', teamEdit);\n\n  /** @ngInject */\n  function teamEdit() {\n    var directive = {\n      restrict: 'EA',\n      templateUrl: 'app/pages/teams/edit/edit.html',\n      controller: TeamEditController,\n      controllerAs: 'teamEdit',\n      link: TeamEditLink,\n      bindToController: true,\n      replace: true,\n      scope: {\n        team: '=teamEdit'\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function TeamEditController(models, $q, teams) {\n      var vm = this;\n\n      vm.models = models;\n\n      vm.setLoading = function (res) {\n        vm.loading = true;\n        return $q.resolve(res);\n      }\n\n      vm.unsetLoading = function (res) {\n        vm.loading = false;\n        return $q.resolve(res);\n      }\n\n      vm.submit = function () {\n        return vm.setLoading(vm.form)\n          .then(teams.form2Team)\n          .then(function (teamData) {\n            return teams.update(vm.team.teamId, teamData);\n          })\n          .finally(vm.unsetLoading);\n      }\n    }\n\n    function TeamEditLink(scope, el, attrs, vm) {\n      vm.cancel = function () {\n        el.find('.accordion-body').collapse('hide');\n      }\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('TeamDestroyController', TeamDestroyController);\n\n  /** @ngInject */\n  function TeamDestroyController($uibModalInstance) {\n    var vm = this;\n\n    vm.ok = function () {\n      $uibModalInstance.close(true);\n    }\n\n    vm.cancel = function () {\n      $uibModalInstance.dismiss();\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('TeamCreateController', TeamCreateController);\n\n  /** @ngInject */\n  function TeamCreateController($uibModalInstance, models, utils) {\n    var vm = this;\n\n    vm.roundNames = utils.alphabetChars();\n    vm.models = models;\n\n    vm.ok = function () {\n      vm.loading = true;\n      $uibModalInstance.close(vm.form);\n    }\n\n    vm.cancel = function () {\n      $uibModalInstance.dismiss();\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('scorerMatchShow', scorerMatchShow);\n\n  /** @ngInject */\n  function scorerMatchShow() {\n    var directive = {\n      restrict: 'EA',\n      templateUrl: 'app/pages/scorerMatch/show/show.html',\n      controller: ScorerMatchShowController,\n      controllerAs: 'scorerMatchShow',\n      bindToController: true,\n      replace: true,\n      link: ScorerMatchShowLink,\n      scope: {\n        scorerMatch: '=scorerMatchShow',\n        scorerMatchPlayerId: '=scorerMatchPlayerId'\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function ScorerMatchShowController($uibModal, models, utils, events) {\n      var vm = this;\n      vm.scores = utils.scores();\n\n      vm.submitGoal = function (){\n        return events\n          .updateScorerMatch(models.currentEvent.evenId, vm.scorerMatch.matcId, {\n            scor_play_id: vm.scorerMatchPlayerId,\n            scor_goal: vm.form.goal\n          })\n          .then(function () {\n            return vm.models.currentEvent.evenId;\n          })\n          .then(events.showScorers)\n          .finally(vm.unsetLoading);\n      }\n\n      vm.destroy = function() {\n\n        $uibModal.open({\n            templateUrl: 'app/pages/scorerMatch/destroy/destroy.html',\n            controller: 'ScorerMatchDestroyController',\n            controllerAs: 'scorerMatchDestroy',\n            windowClass: 'modal-danger'\n          }).result\n          .then(function (res) {\n            if(res === true){\n              events.destroyScorerMatch(models.currentEvent.evenId, vm.scorerMatchPlayerId, vm.scorerMatch);\n            }\n          })\n      }\n\n      vm.models = models;\n    }\n\n    /** @ngInject */\n    function ScorerMatchShowLink(scope, el, attrs, vm){\n      el.hover(\n        function () {\n          scope.$apply(function () {\n            vm.showControls = true;\n          })\n        },\n        function () {\n          scope.$apply(function () {\n            vm.showControls = false;\n          })\n        }\n      );\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('ScorerMatchDestroyController', ScorerMatchDestroyController);\n\n  /** @ngInject */\n  function ScorerMatchDestroyController($uibModalInstance) {\n    var vm = this;\n\n    vm.ok = function () {\n      $uibModalInstance.close(true);\n    }\n\n    vm.cancel = function () {\n      $uibModalInstance.dismiss();\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('pressShow', pressShow);\n\n  /** @ngInject */\n  function pressShow() {\n    var directive = {\n      restrict: 'EA',\n      templateUrl: 'app/pages/press/show/show.html',\n      controller: PressShowController,\n      controllerAs: 'pressShow',\n      bindToController: true,\n      replace: true,\n      link: PressShowLink,\n      scope: {\n        press: '=pressShow'\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function PressShowController($uibModal, press, models) {\n      var vm = this;\n\n      vm.destroy = function() {\n\n        $uibModal.open({\n            templateUrl: 'app/pages/press/destroy/destroy.html',\n            controller: 'PressDestroyController',\n            controllerAs: 'pressDestroy',\n            windowClass: 'modal-danger'\n          }).result\n          .then(function (res) {\n            if(res === true){\n              press.destroy(vm.press);\n            }\n          })\n      }\n\n      vm.models = models;\n    }\n\n    /** @ngInject */\n    function PressShowLink(scope, el, attrs, vm){\n      el.hover(\n        function () {\n          scope.$apply(function () {\n            vm.showControls = true;\n          })\n        },\n        function () {\n          scope.$apply(function () {\n            vm.showControls = false;\n          })\n        }\n      );\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('PressDestroyController', PressDestroyController);\n\n  /** @ngInject */\n  function PressDestroyController($uibModalInstance) {\n    var vm = this;\n\n    vm.ok = function () {\n      $uibModalInstance.close(true);\n    }\n\n    vm.cancel = function () {\n      $uibModalInstance.dismiss();\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('PressCreateController', PressCreateController);\n\n  /** @ngInject */\n  function PressCreateController($uibModalInstance, models, utils) {\n    var vm = this;\n    vm.models = models;\n\n    vm.events = angular.copy(models.events);\n    vm.multiSelectTranslation = utils.istevenMultiSelectTranslation();\n\n    vm.ok = function () {\n      vm.loading = true;\n      $uibModalInstance.close(vm.form);\n    }\n\n    vm.cancel = function () {\n      $uibModalInstance.dismiss();\n    }\n\n    vm.selectFields = [\n      {\n        key: 'ranking',\n        name: 'Mostra classifica',\n        options: [\n          {\n            id: 0,\n            name: 'No'\n          },\n          {\n            id: 1,\n            name: 'Sì'\n          }\n        ]\n      },\n      {\n        key: 'matches',\n        name: 'Mostra giornate',\n        options: [\n          {\n            id: 1,\n            name: 'Corrente + 2 successive'\n          },\n          {\n            id: 2,\n            name: 'Precedente + Corrente + Successiva'\n          },\n          {\n            id: 3,\n            name: 'Tutto il calendario'\n          }\n        ]\n      },\n      {\n        key: 'scorers',\n        name: 'Mostra marcatori',\n        options: [\n          {\n            id: 1,\n            name: 'Solo i primi 10'\n          },\n          {\n            id: 2,\n            name: 'Solo i primi 3'\n          },\n          {\n            id: 3,\n            name: 'Tutti i marcatori'\n          }\n        ]\n      },\n      {\n        key: 'yellowcards',\n        name: 'Mostra ammoniti',\n        options: [\n          {\n            id: 0,\n            name: 'No'\n          },\n          {\n            id: 1,\n            name: 'Sì'\n          }\n        ]\n      },\n      {\n        key: 'diffide',\n        name: 'Mostra diffide',\n        options: [\n          {\n            id: 0,\n            name: 'No'\n          },\n          {\n            id: 1,\n            name: 'Sì'\n          }\n        ]\n      },\n      {\n        key: 'squalifications',\n        name: 'Mostra squalifiche',\n        options: [\n          {\n            id: 0,\n            name: 'No'\n          },\n          {\n            id: 1,\n            name: 'Sì'\n          }\n        ]\n      },\n      {\n        key: 'amends',\n        name: 'Mostra ammende',\n        options: [\n          {\n            id: 0,\n            name: 'No'\n          },\n          {\n            id: 1,\n            name: 'Sì'\n          }\n        ]\n      }\n    ];\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('playerShow', playerShow);\n\n  /** @ngInject */\n  function playerShow() {\n    var directive = {\n      restrict: 'EA',\n      templateUrl: 'app/pages/players/show/show.html',\n      controller: PlayerShowController,\n      controllerAs: 'playerShow',\n      bindToController: true,\n      replace: true,\n      link: PlayerShowLink,\n      scope: {\n        player: '=playerShow'\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function PlayerShowController($uibModal, teams, models) {\n      var vm = this;\n\n      vm.destroy = function() {\n\n        $uibModal.open({\n            templateUrl: 'app/pages/players/destroy/destroy.html',\n            controller: 'PlayerDestroyController',\n            controllerAs: 'playerDestroy',\n            windowClass: 'modal-danger'\n          }).result\n          .then(function (res) {\n            if(res === true){\n              teams.destroyPlayer(vm.player);\n            }\n          });\n      }\n\n      vm.models = models;\n    }\n\n    /** @ngInject */\n    function PlayerShowLink(scope, el, attrs, vm){\n      el.hover(\n        function () {\n          scope.$apply(function () {\n            vm.showControls = true;\n          })\n        },\n        function () {\n          scope.$apply(function () {\n            vm.showControls = false;\n          })\n        }\n      );\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('playerEdit', playerEdit);\n\n  /** @ngInject */\n  function playerEdit() {\n    var directive = {\n      restrict: 'EA',\n      templateUrl: 'app/pages/players/edit/edit.html',\n      controller: PlayerEditController,\n      controllerAs: 'playerEdit',\n      link: PlayerEditLink,\n      bindToController: true,\n      replace: true,\n      scope: {\n        player: '=playerEdit'\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function PlayerEditController(models, $q, teams, utils) {\n      var vm = this;\n\n      vm.models = models;\n\n      vm.setLoading = function (res) {\n        vm.loading = true;\n        return $q.resolve(res);\n      }\n\n      vm.unsetLoading = function (res) {\n        vm.loading = false;\n        return $q.resolve(res);\n      }\n\n      vm.submit = function () {\n        return vm.setLoading(vm.form)\n          .then(teams.form2Player)\n          .then(function (playerData) {\n            return teams.updatePlayer(vm.player.playId, playerData);\n          })\n          .finally(vm.unsetLoading);\n      }\n\n      vm.scores = utils.scores();\n\n      vm.form = { };\n    }\n\n    function PlayerEditLink(scope, el, attrs, vm) {\n      vm.cancel = function () {\n        el.find('.accordion-body').collapse('hide');\n      }\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('MatchDestroyController', MatchDestroyController);\n\n  /** @ngInject */\n  function MatchDestroyController($uibModalInstance) {\n    var vm = this;\n\n    vm.ok = function () {\n      $uibModalInstance.close(true);\n    }\n\n    vm.cancel = function () {\n      $uibModalInstance.dismiss();\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('PlayerCreateController', PlayerCreateController);\n\n  /** @ngInject */\n  function PlayerCreateController($uibModalInstance, models, utils) {\n    var vm = this;\n\n    vm.scores = utils.scores();\n    vm.models = models;\n\n    vm.ok = function () {\n      vm.loading = true;\n      $uibModalInstance.close(vm.form);\n    }\n\n    vm.cancel = function () {\n      $uibModalInstance.dismiss();\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('managerMatchShow', managerMatchShow);\n\n  /** @ngInject */\n  function managerMatchShow() {\n    var directive = {\n      restrict: 'EA',\n      templateUrl: 'app/pages/managerMatches/show/show.html',\n      controller: ManagerMatchShowController,\n      controllerAs: 'managerMatchShow',\n      bindToController: true,\n      replace: true,\n      link: ManagerMatchShowLink,\n      scope: {\n        match: '=managerMatchShow'\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function ManagerMatchShowController($uibModal, matches, models) {\n      var vm = this;\n      vm.models = models;\n    }\n\n    /** @ngInject */\n    function ManagerMatchShowLink(scope, el, attrs, vm){\n      el.hover(\n        function () {\n          scope.$apply(function () {\n            vm.showControls = true;\n          })\n        },\n        function () {\n          scope.$apply(function () {\n            vm.showControls = false;\n          })\n        }\n      );\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('managerMatchEdit', managerMatchEdit);\n\n  /** @ngInject */\n  function managerMatchEdit() {\n    var directive = {\n      restrict: 'EA',\n      templateUrl: 'app/pages/managerMatches/edit/edit.html',\n      controller: ManagerMatchEditController,\n      controllerAs: 'managerMatchEdit',\n      link: ManagerMatchEditLink,\n      bindToController: true,\n      replace: true,\n      scope: {\n        match: '=managerMatchEdit'\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function ManagerMatchEditController(models, $q, matches, utils) {\n      var vm = this;\n\n      vm.models = models;\n\n      vm.setLoading = function (res) {\n        vm.loading = true;\n        return $q.resolve(res);\n      }\n\n      vm.unsetLoading = function (res) {\n        vm.loading = false;\n        return $q.resolve(res);\n      }\n\n      vm.submit = function () {\n        return vm.setLoading(vm.form)\n          .then(matches.form2Match)\n          .then(function (matchData) {\n            return matches.update(vm.match.matcDayId, matchData);\n          })\n          .finally(vm.unsetLoading);\n      }\n\n      vm.scores = utils.scores();\n\n      vm.form = { matchId: vm.match.matcId };\n    }\n\n    function ManagerMatchEditLink(scope, el, attrs, vm) {\n      vm.cancel = function () {\n        el.find('.accordion-body').collapse('hide');\n      }\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('eventShow', eventShow);\n\n  /** @ngInject */\n  function eventShow(events) {\n    var directive = {\n      restrict: 'EA',\n      templateUrl: 'app/pages/events/show/show.html',\n      controller: EventShowController,\n      controllerAs: 'eventShow',\n      bindToController: true,\n      replace: true,\n      link: EventShowLink,\n      scope: {\n        event: '=eventShow',\n        hideControls: '='\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function EventShowController(models, $uibModal) {\n      var vm = this;\n\n      vm.destroy = function() {\n\n        $uibModal.open({\n            templateUrl: 'app/pages/events/destroy/destroy.html',\n            controller: 'EventDestroyController',\n            controllerAs: 'eventDestroy',\n            windowClass: 'modal-danger'\n          }).result\n          .then(function (res) {\n            if(res === true){\n              events.destroy(vm.event);\n            }\n          })\n      }\n\n      vm.models = models;\n    }\n\n    /** @ngInject */\n    function EventShowLink(scope, el, attrs, vm){\n      el.hover(\n        function () {\n          scope.$apply(function () {\n            vm.showControls = true;\n          })\n        },\n        function () {\n          scope.$apply(function () {\n            vm.showControls = false;\n          })\n        }\n      );\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('EventRecreateCalendarController', EventRecreateCalendarController);\n\n  /** @ngInject */\n  function EventRecreateCalendarController($uibModalInstance) {\n    var vm = this;\n\n    vm.ok = function () {\n      $uibModalInstance.close(true);\n    }\n\n    vm.cancel = function () {\n      $uibModalInstance.dismiss();\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('eventEdit', eventEdit);\n\n  /** @ngInject */\n  function eventEdit(events) {\n    var directive = {\n      restrict: 'EA',\n      templateUrl: 'app/pages/events/edit/edit.html',\n      controller: EventEditController,\n      controllerAs: 'eventEdit',\n      link: EventEditLink,\n      bindToController: true,\n      replace: true,\n      scope: {\n        event: '=eventEdit'\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function EventEditController(models, matches, $uibModal, $q, utils) {\n      var vm = this;\n\n      vm.models = models;\n      vm.pointsOptions = utils.scores();\n\n      vm.setLoading = function (res) {\n        vm.loading = true;\n        return $q.resolve(res);\n      }\n\n      vm.unsetLoading = function (res) {\n        vm.loading = false;\n        return $q.resolve(res);\n      }\n\n      vm.submit = function () {\n        return vm.setLoading(vm.form)\n          .then(events.form2Event)\n          .then(function (eventData) {\n            return events.update(vm.event.evenId, eventData);\n          })\n          .finally(vm.unsetLoading);\n      }\n\n      vm.publish = function () {\n        return vm.setLoading()\n          .then(function () {\n            return events.update(vm.event.evenId, {even_stato_evento: 1});\n          })\n          .finally(vm.unsetLoading);\n      }\n\n      vm.unpublish = function () {\n        return vm.setLoading()\n          .then(function () {\n            return events.update(vm.event.evenId, {even_stato_evento: 0});\n          })\n          .finally(vm.unsetLoading);\n      }\n\n      vm.recreateCalendar = function () {\n        $uibModal.open({\n          templateUrl: 'app/pages/events/edit/recreateCalendar.html',\n          controller: 'EventRecreateCalendarController',\n          controllerAs: 'eventRecreateCalendar',\n          windowClass: 'modal-warning'\n        }).result\n        .then(function (res) {\n          if(res === true){\n            return vm.setLoading(vm.event.evenId)\n              .then(matches.createCalendar)\n              .then(function () {\n                return events.show(vm.event.evenId);\n              })\n              .finally(vm.unsetLoading);\n          }\n        })\n\n      }\n    }\n\n    function EventEditLink(scope, el, attrs, vm) {\n\n      el.find('.accordion-body').on('show.bs.collapse', function () {\n        events.show(vm.event.evenId);\n        events.listRegions();\n      });\n\n      vm.cancel = function () {\n        el.find('.accordion-body').collapse('hide');\n      }\n\n      scope.$watch('eventEdit.event.evenCurrentDay', function (newVal, oldVal) {\n        if(angular.isDefined(newVal) && newVal !== oldVal){\n          vm.form.currentDay = vm.event.evenCurrentDay;\n        }\n      });\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('EventDestroyController', EventDestroyController);\n\n  /** @ngInject */\n  function EventDestroyController($uibModalInstance) {\n    var vm = this;\n\n    vm.ok = function () {\n      $uibModalInstance.close(true);\n    }\n\n    vm.cancel = function () {\n      $uibModalInstance.dismiss();\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('invitationShow', invitationShow);\n\n  /** @ngInject */\n  function invitationShow() {\n    var directive = {\n      restrict: 'EA',\n      templateUrl: 'app/pages/invitations/show/show.html',\n      controller: InvitationShowController,\n      controllerAs: 'invitationShow',\n      bindToController: true,\n      replace: true,\n      link: InvitationShowLink,\n      scope: {\n        invitation: '=invitationShow'\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function InvitationShowController($uibModal, invitations, models) {\n      var vm = this;\n\n      vm.destroy = function() {\n\n        $uibModal.open({\n            templateUrl: 'app/pages/invitations/destroy/destroy.html',\n            controller: 'InvitationDestroyController',\n            controllerAs: 'invitationDestroy',\n            windowClass: 'modal-danger'\n          }).result\n          .then(function (res) {\n            if(res === true){\n              invitations\n                .destroy(vm.invitation)\n                .then(invitations.listSent);\n            }\n          })\n      }\n\n      vm.models = models;\n    }\n\n    /** @ngInject */\n    function InvitationShowLink(scope, el, attrs, vm){\n      el.hover(\n        function () {\n          scope.$apply(function () {\n            vm.showControls = true;\n          })\n        },\n        function () {\n          scope.$apply(function () {\n            vm.showControls = false;\n          })\n        }\n      );\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('InvitationDestroyController', InvitationDestroyController);\n\n  /** @ngInject */\n  function InvitationDestroyController($uibModalInstance) {\n    var vm = this;\n\n    vm.ok = function () {\n      $uibModalInstance.close(true);\n    }\n\n    vm.cancel = function () {\n      $uibModalInstance.dismiss();\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('InvitationCreateController', InvitationCreateController);\n\n  /** @ngInject */\n  function InvitationCreateController($uibModalInstance, models, utils) {\n    var vm = this;\n    vm.events = angular.copy(models.events);\n    vm.multiSelectTranslation = utils.istevenMultiSelectTranslation();\n\n    vm.ok = function () {\n      vm.loading = true;\n      $uibModalInstance.close(vm.form);\n    }\n\n    vm.cancel = function () {\n      $uibModalInstance.dismiss();\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('cardShow', cardShow);\n\n  /** @ngInject */\n  function cardShow() {\n    var directive = {\n      restrict: 'EA',\n      templateUrl: 'app/pages/disciplinary/show/show.html',\n      controller: CardShowController,\n      controllerAs: 'cardShow',\n      bindToController: true,\n      replace: true,\n      link: CardShowLink,\n      scope: {\n        card: '=cardShow',\n        config: '='\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function CardShowController($uibModal, matches, models) {\n      var vm = this;\n\n      vm.destroy = function() {\n\n        $uibModal.open({\n            templateUrl: 'app/pages/disciplinary/destroy/destroy.html',\n            controller: 'CardDestroyController',\n            controllerAs: 'cardDestroy',\n            windowClass: 'modal-danger'\n          }).result\n          .then(function (res) {\n            if(res === true){\n              matches.destroy(vm.card);\n            }\n          })\n      }\n\n      vm.models = models;\n    }\n\n    /** @ngInject */\n    function CardShowLink(scope, el, attrs, vm){\n      el.hover(\n        function () {\n          scope.$apply(function () {\n            vm.showControls = true;\n          })\n        },\n        function () {\n          scope.$apply(function () {\n            vm.showControls = false;\n          })\n        }\n      );\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('cardEdit', cardEdit);\n\n  /** @ngInject */\n  function cardEdit() {\n    var directive = {\n      restrict: 'EA',\n      templateUrl: 'app/pages/disciplinary/edit/edit.html',\n      controller: CardEditController,\n      controllerAs: 'cardEdit',\n      link: CardEditLink,\n      bindToController: true,\n      replace: true,\n      scope: {\n        card: '=cardEdit',\n        config: '='\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function CardEditController(models, $q) {\n      var vm = this;\n\n      vm.models = models;\n\n      vm.setLoading = function (res) {\n        vm.loading = true;\n        return $q.resolve(res);\n      }\n\n      vm.unsetLoading = function (res) {\n        vm.loading = false;\n        return $q.resolve(res);\n      }\n    }\n\n    function CardEditLink(scope, el, attrs, vm) {\n      vm.cancel = function () {\n        el.find('.accordion-body').collapse('hide');\n      }\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('cardMatchShow', cardMatchShow);\n\n  /** @ngInject */\n  function cardMatchShow() {\n    var directive = {\n      restrict: 'EA',\n      templateUrl: 'app/pages/cardMatch/show/show.html',\n      controller: ScorerMatchShowController,\n      controllerAs: 'cardMatchShow',\n      bindToController: true,\n      replace: true,\n      link: ScorerMatchShowLink,\n      scope: {\n        cardMatch: '=cardMatchShow',\n        config: '=',\n        cardMatchPlayerId: '=cardMatchPlayerId'\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function ScorerMatchShowController($uibModal, models, utils, matches) {\n      var vm = this;\n      vm.scores = utils.scores();\n\n      vm.submit = function (){\n        return matches\n          .form2CardMatch(vm.form)\n          .then(function (cardData) {\n            return matches.updateEventCard(\n              vm.cardMatch.matcId,\n              vm.cardMatchPlayerId,\n              vm.cardMatch.cardId,\n              vm.cardsKey,\n              vm.cardMatchKey,\n              cardData\n            );\n          })\n      }\n\n      vm.destroy = function() {\n\n        $uibModal.open({\n            templateUrl: 'app/pages/cardMatch/destroy/destroy.html',\n            controller: 'CardMatchDestroyController',\n            controllerAs: 'cardMatchDestroy',\n            windowClass: 'modal-danger'\n          }).result\n          .then(function (res) {\n            if(res === true){\n              matches.destroyEventCard(vm.cardMatch.matcId, vm.cardMatchPlayerId, vm.cardMatch.cardId, vm.config.cardsKey, vm.config.cardMatchKey);\n            }\n          })\n      }\n\n      vm.models = models;\n    }\n\n    /** @ngInject */\n    function ScorerMatchShowLink(scope, el, attrs, vm){\n      el.hover(\n        function () {\n          scope.$apply(function () {\n            vm.showControls = true;\n          })\n        },\n        function () {\n          scope.$apply(function () {\n            vm.showControls = false;\n          })\n        }\n      );\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('CardMatchDestroyController', CardMatchDestroyController);\n\n  /** @ngInject */\n  function CardMatchDestroyController($uibModalInstance) {\n    var vm = this;\n\n    vm.ok = function () {\n      $uibModalInstance.close(true);\n    }\n\n    vm.cancel = function () {\n      $uibModalInstance.dismiss();\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('matchShow', matchShow);\n\n  /** @ngInject */\n  function matchShow() {\n    var directive = {\n      restrict: 'EA',\n      templateUrl: 'app/pages/calendar/show/show.html',\n      controller: MatchShowController,\n      controllerAs: 'matchShow',\n      bindToController: true,\n      replace: true,\n      link: MatchShowLink,\n      scope: {\n        match: '=matchShow'\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function MatchShowController($uibModal, matches, models) {\n      var vm = this;\n\n      vm.destroy = function() {\n\n        $uibModal.open({\n            templateUrl: 'app/pages/calendar/destroy/destroy.html',\n            controller: 'MatchDestroyController',\n            controllerAs: 'matchDestroy',\n            windowClass: 'modal-danger'\n          }).result\n          .then(function (res) {\n            if(res === true){\n              matches.destroy(vm.match);\n            }\n          });\n      }\n\n      vm.advancedEdit = function () {\n        $uibModal.open({\n              templateUrl: 'app/pages/calendar/advancedEdit/advancedEdit.html',\n              controller: 'MatchAdvancedEditController',\n              controllerAs: 'matchAdvEdit',\n              windowClass: 'modal-default',\n              size: 'lg',\n              resolve: {match: vm.match}\n          }).result\n          .then();\n      }\n\n      vm.models = models;\n    }\n\n    /** @ngInject */\n    function MatchShowLink(scope, el, attrs, vm){\n      el.hover(\n        function () {\n          scope.$apply(function () {\n            vm.showControls = true;\n          })\n        },\n        function () {\n          scope.$apply(function () {\n            vm.showControls = false;\n          })\n        }\n      );\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('matchEdit', matchEdit);\n\n  /** @ngInject */\n  function matchEdit() {\n    var directive = {\n      restrict: 'EA',\n      templateUrl: 'app/pages/calendar/edit/edit.html',\n      controller: MatchEditController,\n      controllerAs: 'matchEdit',\n      link: MatchEditLink,\n      bindToController: true,\n      replace: true,\n      scope: {\n        match: '=matchEdit'\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function MatchEditController(models, $q, matches, utils, $scope) {\n      var vm = this;\n\n      vm.models = models;\n\n      vm.setLoading = function (res) {\n        vm.loading = true;\n        return $q.resolve(res);\n      }\n\n      vm.unsetLoading = function (res) {\n        vm.loading = false;\n        return $q.resolve(res);\n      }\n\n      vm.submit = function () {\n        return vm.setLoading(vm.form)\n          .then(matches.form2Match)\n          .then(function (matchData) {\n            return matches.update(vm.match.matcDayId, matchData);\n          })\n          .finally(vm.unsetLoading);\n      }\n\n      vm.scores = utils.scores();\n\n      vm.form = { matchId: vm.match.matcId };\n\n      $scope.$watch('matchEdit.match.matcScoreTeamA', function (newVal, oldVal) {\n        if(newVal !== oldVal) {\n          vm.form.scoreA = newVal;\n        }\n      });\n      $scope.$watch('matchEdit.match.matcScoreTeamB', function (newVal, oldVal) {\n        if(newVal !== oldVal) {\n          vm.form.scoreB = newVal;\n        }\n      });\n    }\n\n    function MatchEditLink(scope, el, attrs, vm) {\n      vm.cancel = function () {\n        el.find('.accordion-body').collapse('hide');\n      }\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('MatchDestroyController', MatchDestroyController);\n\n  /** @ngInject */\n  function MatchDestroyController($uibModalInstance) {\n    var vm = this;\n\n    vm.ok = function () {\n      $uibModalInstance.close(true);\n    }\n\n    vm.cancel = function () {\n      $uibModalInstance.dismiss();\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('DayCreateController', DayCreateController);\n\n  /** @ngInject */\n  function DayCreateController($uibModalInstance, models) {\n    var vm = this;\n\n    vm.models = models;\n\n    vm.ok = function () {\n      vm.loading = true;\n      $uibModalInstance.close(vm.form);\n    }\n\n    vm.cancel = function () {\n      $uibModalInstance.dismiss();\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('MatchCreateController', MatchCreateController);\n\n  /** @ngInject */\n  function MatchCreateController($uibModalInstance, models, utils) {\n    var vm = this;\n\n    vm.scores = utils.scores();\n    vm.models = models;\n\n    vm.ok = function () {\n      vm.loading = true;\n      $uibModalInstance.close(vm.form);\n    }\n\n    vm.cancel = function () {\n      $uibModalInstance.dismiss();\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('MatchAdvancedEditController', MatchAdvancedEditController);\n\n  /** @ngInject */\n  function MatchAdvancedEditController($q, $uibModalInstance, match, utils, matches, teams) {\n    var vm = this;\n    vm.match = match;\n    vm.scores = utils.scores();\n\n    vm.ok = function () {\n      $uibModalInstance.close(true);\n    }\n\n    vm.cancel = function () {\n      $uibModalInstance.dismiss();\n    }\n\n    vm.submit = function () {\n      return vm.setLoading(vm.form)\n        .then(matches.form2Match)\n        .then(function (matchData) {\n          return matches.update(vm.match.matcDayId, matchData);\n        })\n    }\n\n    vm.setLoading = function (res) {\n      vm.loading = true;\n      return $q.resolve(res);\n    }\n\n    vm.unsetLoading = function (res) {\n      vm.loading = false;\n      return $q.resolve(res);\n    }\n\n    vm.form = {\n      matchId: vm.match.matcId,\n      teamA: { teamId: vm.match.matcTeamIdA },\n      teamB: { teamId: vm.match.matcTeamIdB },\n      played: { value: vm.match.matcFlgPlay }\n    }\n\n    vm.createAutocompleteObj = function (players) {\n      var autocomplete = [];\n      if(angular.isArray(players)){\n        angular.forEach(players, function (player) {\n          autocomplete.push({\n            playId: player.playId,\n            name: player.playFirstname,\n            surname: player.playSurname,\n            teamId: player.playTeamId\n          });\n        });\n      }\n      return autocomplete;\n    }\n\n    vm.autocompleteA = [];\n    vm.autocompleteB = [];\n\n    matches.show(vm.match.matcId)\n      .then(function () { // Retrieve players for autocomplete\n        teams\n          .listPlayers(vm.match.matcTeamIdA)\n          .then(vm.createAutocompleteObj)\n          .then(function (res) {\n            vm.autocompleteA = res;\n          })\n        teams\n          .listPlayers(vm.match.matcTeamIdB)\n          .then(vm.createAutocompleteObj)\n          .then(function (res) {\n            vm.autocompleteB = res;\n          })\n      });\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('wizardStepBox', wizardStepBox);\n\n  /** @ngInject */\n  function wizardStepBox() {\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/components/wizard/wizardStepBox/wizardStepBox.html',\n      controller: WizardStepBoxController,\n      controllerAs: 'wizardStepBox',\n      bindToController: true,\n      scope: {\n        wizard: '=',\n        step: '=',\n        title: '@'\n      },\n      link: WizardStepBoxLink,\n      transclude: true\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function WizardStepBoxController() {\n    }\n\n    function WizardStepBoxLink(scope, el, attrs, vm) {\n      if(vm.step === vm.wizard.currentStep){\n        vm.active = true;\n      }\n      else{\n        el.find('.wizard-step-box').first().addClass('collapsed-box');\n        el.find('.box-body').first().hide();\n      }\n\n      scope.$watch('wizardStepBox.wizard.currentStep', function (newVal, oldVal) {\n        if(newVal === oldVal) return;\n        // Activate the box\n        if(newVal === vm.step && !vm.active){\n          vm.active = true;\n          angular.element.AdminLTE.boxWidget.collapse(el.find('[data-widget]'));\n        }\n        // Deactivate the box\n        else if(newVal !== vm.step && vm.active){\n          vm.active = false;\n          angular.element.AdminLTE.boxWidget.collapse(el.find('[data-widget]'));\n        }\n      })\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('wizardProgress', wizardProgress);\n\n  /** @ngInject */\n  function wizardProgress() {\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/components/wizard/wizardProgress/wizardProgress.html',\n      controller: WizardProgressController,\n      controllerAs: 'wizardProgress',\n      bindToController: true,\n      scope: {\n        wizard: '='\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function WizardProgressController() {\n      var vm = this;\n\n      vm.range = function (n) {\n        return new Array(n);\n      }\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('ScorersController', ScorersController);\n\n  /** @ngInject */\n  function ScorersController(models, events, $q) {\n    var vm = this;\n    vm.models = models;\n\n    // Update the current event (it's been selected now)\n    vm.updateCurrentEvent = function () {\n      // No current event selected -> noop\n      if(!models.currentEvent) return;\n\n      // Current event selected -> manually find and copy the real event from models (ng-options creates a new object)\n      for (var i = 0; i < models.events.length; i++) {\n        if(models.events[i].evenId === models.currentEvent.evenId){\n          models.events[i] = models.currentEvent;\n          break;\n        }\n      }\n\n      return vm\n        .setLoading(models.currentEvent.evenId) // Set a spinning loader on the page\n        .then(events.showScorers)               // List the scorers of the event\n        .finally(vm.unsetLoading)               // Remove the loader from the page\n    }\n\n    vm.setLoading = function (res) {\n      vm.loading = true;\n      return $q.resolve(res);\n    }\n\n    vm.unsetLoading = function (res) {\n      vm.loading = false;\n      return $q.resolve(res);\n    }\n\n    // API call to retrieve all the events\n    events\n      .list()\n      .then(vm.updateCurrentEvent);\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('TeamsController', TeamsController);\n\n  /** @ngInject */\n  function TeamsController(models, events, teams, $q, $uibModal) {\n    var vm = this;\n    vm.models = models;\n\n    // Update the current event (it's been selected now)\n    vm.updateCurrentEvent = function () {\n      // No current event selected -> noop\n      if(!models.currentEvent) return;\n\n      // Current event selected -> manually find and copy the real event from models (ng-options creates a new object)\n      for (var i = 0; i < models.events.length; i++) {\n        if(models.events[i].evenId === models.currentEvent.evenId){\n          models.events[i] = models.currentEvent;\n          break;\n        }\n      }\n\n      return vm\n        .setLoading(models.currentEvent.evenId) // Set a spinning loader on the page\n        .then(teams.list)                       // List the teams of the event\n        .finally(vm.unsetLoading)               // Remove the loader from the page\n    }\n\n    vm.setLoading = function (res) {\n      vm.loading = true;\n      return $q.resolve(res);\n    }\n\n    vm.unsetLoading = function (res) {\n      vm.loading = false;\n      return $q.resolve(res);\n    }\n\n    vm.createNewTeam = function () {\n      $uibModal.open({\n          templateUrl: 'app/pages/teams/create/create.html',\n          controller: 'TeamCreateController',\n          controllerAs: 'teamCreate',\n          windowClass: 'modal-success'\n        }).result\n        .then(function (res) {\n          if(angular.isDefined(res)){\n            vm.setLoading(res)\n              .then(teams.form2Team)\n              .then(teams.create)\n              .then(teams.list)\n              .finally(vm.unsetLoading);\n          }\n        })\n    }\n    // API call to retrieve all the events\n    events\n      .list()\n      .then(vm.updateCurrentEvent);\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('RegisterController', RegisterController);\n\n  /** @ngInject */\n  function RegisterController(users, $state) {\n    var vm = this;\n\n    users.onLoggedOut(); // ensure the user is logged out\n\n    vm.user = vm.user || {};\n\n    vm.register = function () {\n      users\n        .register(vm.user)\n        .then(users.onLoggedIn)\n        .then(function () {\n          $state.go('main.access');\n        });\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('ScoreboardController', ScoreboardController);\n\n  /** @ngInject */\n  function ScoreboardController(models, events, $q) {\n    var vm = this;\n    vm.models = models;\n\n    // Update the current event (it's been selected now)\n    vm.updateCurrentEvent = function () {\n      // No current event selected -> noop\n      if(!models.currentEvent) return;\n\n      // Current event selected -> manually find and copy the real event from models (ng-options creates a new object)\n      for (var i = 0; i < models.events.length; i++) {\n        if(models.events[i].evenId === models.currentEvent.evenId){\n          models.events[i] = models.currentEvent;\n          break;\n        }\n      }\n\n      return vm\n        .setLoading(models.currentEvent)        // Set a spinning loader on the page\n        .then(events.showScoreboard)            // Get the scoreboard for given event\n        .finally(vm.unsetLoading);              // Remove the loader from the page\n    }\n\n    vm.setLoading = function (res) {\n      vm.loading = true;\n      return $q.resolve(res);\n    }\n\n    vm.unsetLoading = function (res) {\n      vm.loading = false;\n      return $q.resolve(res);\n    }\n\n    // API call to retrieve all the events\n    events\n      .list()\n      .then(vm.updateCurrentEvent);\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('ProfileController', ProfileController);\n\n  /** @ngInject */\n  function ProfileController(models, users, $q) {\n    var vm = this;\n    vm.models = models;\n\n    vm.userTypes = [\n      { num: 0, name: 'Giocatore'},\n      { num: 1, name: 'Organizzatore'}\n    ];\n\n    vm.userSubscriptions = [\n      { num: 0, name: 'Gratuito' },\n      { num: 1, name: 'Standard'},\n      { num: 2, name: 'Premium'}\n    ];\n\n    vm.submit = function () {\n      vm.setLoading(vm.form)\n        .then(users.update)\n        .then(vm.updateForm)\n        .finally(vm.unsetLoading)\n    }\n\n    vm.setLoading = function (res) {\n      vm.loading = true;\n      return $q.resolve(res);\n    }\n\n    vm.unsetLoading = function (res) {\n      vm.loading = false;\n      return $q.resolve(res);\n    }\n\n    vm.updateForm = function (res) {\n      vm.form = {\n        type: models.currentUser.type,\n        subscription: models.currentUser.subscription\n      }\n      return $q.resolve(res);\n    }\n\n    vm.setLoading()\n      .then(users.info)\n      .then(vm.updateForm)\n      .then(vm.unsetLoading);\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('PressController', PressController);\n\n  /** @ngInject */\n  function PressController(models, events, press, $q, $uibModal) {\n    var vm = this;\n    vm.models = models;\n\n    // Update the current event (it's been selected now)\n    vm.updateCurrentEvent = function () {\n      // No current event selected -> noop\n      if(!models.currentEvent) return;\n\n      // Current event selected -> manually find and copy the real event from models (ng-options creates a new object)\n      for (var i = 0; i < models.events.length; i++) {\n        if(models.events[i].evenId === models.currentEvent.evenId){\n          models.events[i] = models.currentEvent;\n          break;\n        }\n      }\n\n      return vm\n        .setLoading(models.currentEvent.evenId) // Set a spinning loader on the page\n        .then(press.list)                       // List the press of the event\n        .finally(vm.unsetLoading)               // Remove the loader from the page\n    }\n\n    vm.setLoading = function (res) {\n      vm.loading = true;\n      return $q.resolve(res);\n    }\n\n    vm.unsetLoading = function (res) {\n      vm.loading = false;\n      return $q.resolve(res);\n    }\n\n    vm.createNewPress = function () {\n      $uibModal.open({\n          templateUrl: 'app/pages/press/create/create.html',\n          controller: 'PressCreateController',\n          controllerAs: 'pressCreate',\n          windowClass: 'modal-success'\n        }).result\n        .then(function (res) {\n          if(angular.isDefined(res)){\n            vm.setLoading(res)\n              .then(press.form2Press)\n              .then(press.create)\n              .then(press.list)\n              .finally(vm.unsetLoading);\n          }\n        })\n    }\n    // API call to retrieve all the events\n    events\n      .list()\n      .then(vm.updateCurrentEvent);\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('PlayersController', PlayersController);\n\n  /** @ngInject */\n  function PlayersController(models, events, $q, $uibModal, teams) {\n    var vm = this;\n    vm.models = models;\n\n    // Update the current event (it's been selected now)\n    vm.updateCurrentEvent = function () {\n      // No current event selected -> noop\n      if(!models.currentEvent) return;\n\n      // Current event selected -> manually find and copy the real event from models (ng-options creates a new object)\n      for (var i = 0; i < models.events.length; i++) {\n        if(models.events[i].evenId === models.currentEvent.evenId){\n          models.events[i] = models.currentEvent;\n          break;\n        }\n      }\n\n      return vm\n        .setLoading(models.currentEvent.evenId) // Set a spinning loader on the page\n        .then(events.show)                      // Get the event info (API call)\n        .then(teams.list)                       // Get the event teams (API call), needed for filling up the select options\n        .then(vm.updateTeam)                    // Update the match day\n        .finally(vm.unsetLoading);              // Remove the loader from the page\n    }\n\n    // Update the team (it's been selected now)\n    vm.updateTeam = function () {\n      // No current event selected, or no teams yet -> noop\n      if(!models.currentEvent || !models.currentEvent.teams || models.currentEvent.teams.length === 0){\n        return;\n      }\n\n      // No day selected - check if the event has just changed\n      if(!models.currentEvent.currentTeam){\n        // An event has been selected -> use it's first available team\n        models.currentEvent.currentTeam = models.currentEvent.teams[0];\n      }\n      // Current day selected -> manually find and copy the real team from models (ng-options creates a new object)\n      else{\n        for (var i = 0; i < models.currentEvent.teams.length; i++) {\n          if(models.currentEvent.teams[i].teamId === vm.models.currentEvent.currentTeam.teamId){\n            vm.models.currentEvent.currentTeam = models.currentEvent.teams[i];\n            break;\n          }\n        }\n      }\n\n      return vm\n        .setLoading()\n        .then(teams.listPlayers)\n        .finally(vm.unsetLoading);\n    }\n\n    vm.setLoading = function (res) {\n      vm.loading = true;\n      return $q.resolve(res);\n    }\n\n    vm.unsetLoading = function (res) {\n      vm.loading = false;\n      return $q.resolve(res);\n    }\n\n    vm.createNewPlayer = function () {\n      $uibModal.open({\n          templateUrl: 'app/pages/players/create/create.html',\n          controller: 'PlayerCreateController',\n          controllerAs: 'playerCreate',\n          windowClass: 'modal-success'\n        }).result\n        .then(function (res) {\n          if(angular.isDefined(res)){\n            vm.setLoading(res)\n              .then(teams.form2Player)\n              .then(teams.createPlayer)\n              .finally(vm.unsetLoading);\n          }\n        })\n    }\n\n    // API call to retrieve all the events\n    events\n      .list()\n      .then(vm.updateCurrentEvent);\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('ManagerMatchesController', ManagerMatchesController);\n\n  /** @ngInject */\n  function ManagerMatchesController(models, events, matches, $q, $uibModal, teams) {\n    var vm = this;\n    vm.models = models;\n\n    // Update the current event (it's been selected now)\n    vm.updateCurrentEvent = function () {\n      // No current event selected -> noop\n      if(!models.currentEvent) return;\n\n      // Current event selected -> manually find and copy the real event from models (ng-options creates a new object)\n      for (var i = 0; i < models.currentUser.managedEvents.length; i++) {\n        if(models.currentUser.managedEvents[i].evenId === models.currentEvent.evenId){\n          models.currentEvent = models.currentUser.managedEvents[i];\n          break;\n        }\n      }\n\n      return vm\n        .setLoading(models.currentEvent.evenId) // Set a spinning loader on the page\n        .then(events.show)                      // Get the event info (API call)\n        .then(teams.list)                       // Get the event teams (API call), needed for filling up the select options\n        .then(vm.updateMatchDay)                // Update the match day\n        .finally(vm.unsetLoading);              // Remove the loader from the page\n    }\n\n    // Update the match day (it's been selected now)\n    vm.updateMatchDay = function () {\n      // No current event selected, or no match days yet -> noop\n      if(!models.currentEvent || !models.currentEvent.matchDays || models.currentEvent.matchDays.length === 0){\n        return;\n      }\n\n      // No day selected - check if the event has just changed\n      if(!models.currentEvent.currentDay){\n        // An event has been selected -> use it's first available day\n        models.currentEvent.currentDay = models.currentEvent.matchDays[0];\n      }\n      // Current day selected -> manually find and copy the real day from models (ng-options creates a new object)\n      else{\n        for (var i = 0; i < models.currentEvent.matchDays.length; i++) {\n          if(models.currentEvent.matchDays[i].matcDayId === vm.models.currentEvent.currentDay.matcDayId){\n            vm.models.currentEvent.currentDay = models.currentEvent.matchDays[i];\n            break;\n          }\n        }\n      }\n\n      return vm\n        .setLoading()\n        .then(matches.list)\n        .finally(vm.unsetLoading);\n    }\n\n    vm.setLoading = function (res) {\n      vm.loading = true;\n      return $q.resolve(res);\n    }\n\n    vm.unsetLoading = function (res) {\n      vm.loading = false;\n      return $q.resolve(res);\n    }\n\n    // API call to retrieve all the events\n    events\n      .listManaged()\n      .then(vm.updateCurrentEvent);\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('ManagerEventsController', ManagerEventsController);\n\n  /** @ngInject */\n  function ManagerEventsController(models, events) {\n    var vm = this;\n\n    // Bind models to controller\n    vm.models = models;\n\n    // API call\n    events.listManaged();\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('LoginController', LoginController);\n\n  /** @ngInject */\n  function LoginController(users, $state, ezfb) {\n    var vm = this;\n\n    users.onLoggedOut(); // ensure the user is logged out\n\n    vm.user = vm.user || {};\n\n    // Login with username and password\n    vm.login = function () {\n      users\n        .login(vm.user)\n        .then(function () {\n          $state.go('main.access');\n        });\n    }\n\n    // Login with facebook\n    vm.loginFacebook = function () {\n      users.configureFacebookCallbacks();\n      ezfb.login(null,{scope: 'email,public_profile'});\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('EventsController', EventsController);\n\n  /** @ngInject */\n  function EventsController(models, events, invitations, users) {\n    var vm = this;\n\n    // Bind models to controller\n    vm.models = models;\n\n    // Create filter objects to split events into published and not published\n    vm.tableFilters = [\n      // published events\n      {\n        eventFilter: { evenStatoEvento: '0' },\n        title: 'Eventi non pubblicati',\n        boxClass: 'box-warning'\n      },\n      {\n        eventFilter: { evenStatoEvento: '1' },\n        title: 'Eventi pubblicati',\n        boxClass: 'box-success'\n      }\n    ];\n\n    vm.acceptInvitation = function (invitation) {\n      invitations\n        .accept(invitation)\n        .then(invitations.listReceived)\n        .then(users.show); // Update user data because permissions may change\n    }\n\n    vm.declineInvitation = function (invitation) {\n      invitations\n        .decline(invitation)\n        .then(invitations.listReceived);\n    }\n\n    // API call\n    events.list();\n    invitations.listReceived();\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('InvitationsController', InvitationsController);\n\n  /** @ngInject */\n  function InvitationsController(models, events, invitations, $q, $uibModal) {\n    var vm = this;\n    vm.models = models;\n\n    vm.createNewInvitation = function () {\n      $uibModal.open({\n          templateUrl: 'app/pages/invitations/create/create.html',\n          controller: 'InvitationCreateController',\n          controllerAs: 'invitationCreate',\n          windowClass: 'modal-success'\n        }).result\n        .then(function (res) {\n          if(angular.isDefined(res)){\n            vm.setLoading(res)\n              .then(invitations.form2Invitation)\n              .then(invitations.create)\n              .then(invitations.listSent)\n              .finally(vm.unsetLoading);\n          }\n        })\n    }\n\n    vm.setLoading = function (res) {\n      vm.loading = true;\n      return $q.resolve(res);\n    }\n\n    vm.unsetLoading = function (res) {\n      vm.loading = false;\n      return $q.resolve(res);\n    }\n\n    events.list();\n    invitations.listSent();\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('DisciplinaryController', DisciplinaryController);\n\n  /** @ngInject */\n  function DisciplinaryController(models, events, $q) {\n    var vm = this;\n    vm.models = models;\n\n    // Update the current event (it's been selected now)\n    vm.updateCurrentEvent = function () {\n      // No current event selected -> noop\n      if(!models.currentEvent) return;\n\n      // Current event selected -> manually find and copy the real event from models (ng-options creates a new object)\n      for (var i = 0; i < models.events.length; i++) {\n        if(models.events[i].evenId === models.currentEvent.evenId){\n          models.events[i] = models.currentEvent;\n          break;\n        }\n      }\n\n      return vm\n        .setLoading(models.currentEvent.evenId) // Set a spinning loader on the page\n        .then(function (eventId) { // List disciplinary stuff\n          return $q.all([\n            events.listYellows(eventId),\n            events.listDiffides(eventId),\n            events.listSqualifications(eventId)\n          ]);\n        })\n        .finally(vm.unsetLoading)               // Remove the loader from the page\n    }\n\n    vm.setLoading = function (res) {\n      vm.loading = true;\n      return $q.resolve(res);\n    }\n\n    vm.unsetLoading = function (res) {\n      vm.loading = false;\n      return $q.resolve(res);\n    }\n\n\n    vm.cardConfigs = [\n      {\n        header: 'Ammonizioni',\n        boxClass: 'box-success',\n        emptyMessage: 'Non ci sono ammonizioni in questo evento',\n        cardsKey: 'yellows',\n        cardMatchKey: 'matcYellowCards',\n        fields: [\n          {\n            name: 'Nome giocatore',\n            key: 'playName'\n          },\n          {\n            name: 'Cognome giocatore',\n            key: 'playSurname'\n          },\n          {\n            name: 'Squadra',\n            key: 'teamName'\n          },\n          {\n            name: 'Numero ammonizioni',\n            key: 'nroYellowCards'\n          }\n        ],\n        controls: {\n          show: true,\n          edit: true,\n          delete: false,\n          editDetail: false,\n          deleteDetail: true\n        }\n      },\n      {\n        header: 'Diffide',\n        boxClass: 'box-warning',\n        emptyMessage: 'Non ci sono diffide in questo evento',\n        cardsKey: 'diffides',\n        cardMatchKey: 'matcYellowCards',\n        fields: [\n          {\n            name: 'Nome giocatore',\n            key: 'playName'\n          },\n          {\n            name: 'Cognome giocatore',\n            key: 'playSurname'\n          },\n          {\n            name: 'Squadra',\n            key: 'teamName'\n          },\n          {\n            name: 'Numero ammonizioni',\n            key: 'nroYellowCards'\n          }\n        ],\n        controls: {\n          show: true,\n          edit: false,\n          delete: false,\n          editDetail: false,\n          deleteDetail: false\n        }\n      },\n      {\n        header: 'Squalifiche',\n        boxClass: 'box-danger',\n        emptyMessage: 'Non ci sono squalifiche in questo evento',\n        cardsKey: 'squalifications',\n        cardMatchKey: 'matcRedCards',\n        fields: [\n          {\n            name: 'Nome giocatore',\n            key: 'playName'\n          },\n          {\n            name: 'Cognome giocatore',\n            key: 'playSurname'\n          },\n          {\n            name: 'Squadra',\n            key: 'teamName'\n          },\n          {\n            name: 'Numero squalifiche',\n            key: 'nroRedCards'\n          }\n        ],\n        detailFields: [\n          {\n            name: 'Tipo di squalifica',\n            key: 'typeSqualificationsPretty'\n          },\n          {\n            name: 'Giornate di squalifica',\n            key: 'daySqualifications'\n          },\n          {\n            name: 'Stato',\n            key: 'squalificationStatus'\n          },\n          {\n            name: 'Note',\n            key: 'note'\n          }\n        ],\n        controls: {\n          show: true,\n          edit: true,\n          delete: false,\n          editDetail: {\n            daySqualifications: {\n              type: 'select',\n              options: [{name:'1',value:1},{name:'2',value:2},{name:'3',value:3},{name:'4',value:4},{name:'5',value:5},{name:'6',value:6},{name:'7',value:7},{name:'8',value:8},{name:'9',value:9},{name:'10',value:10},{name:'11',value:11},{name:'12',value:12},{name:'13',value:13},{name:'14',value:14},{name:'15',value:15},{name:'16',value:16},{name:'17',value:17},{name:'18',value:18},{name:'19',value:19},{name:'20',value:20}]\n            },\n            squalificationStatus: {\n              type: 'select',\n              options: [{name:'Non scontata',value:0},{name:'Scontata',value:1}]\n            },\n            note: {\n              type: 'text'\n            }\n          },\n          deleteDetail: true\n        }\n      }\n    ];\n\n    // API call to retrieve all the events\n    events\n      .list()\n      .then(vm.updateCurrentEvent);\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('CreateEventController', CreateEventController);\n\n  /** @ngInject */\n  function CreateEventController(Wizard, events, resPipe, toastr, teams, matches, $log, $state, models, utils) {\n    var vm = this;\n\n    vm.models = models;\n    // Initialize the wizard object\n    vm.wizard = new Wizard({totalSteps: 3, startFromStep: 1});\n\n    // If true, the user have to manually insert the rounds.\n    // If false, the user can choose between \"Inserimento gironi manuale\" and \"Inserimento gironi automatico\".\n    vm.forceManualRounds = true;\n\n    vm.roundNames = utils.alphabetChars();\n\n    vm.initDefaultTeams = function () {\n      if(!vm.step2.teams){\n        vm.step2.teams = [];\n        vm.addTeam();\n        vm.addTeam();\n      }\n    }\n\n    vm.addTeam = function () {\n      if(vm.step2 && vm.step2.roundType === 1){\n        vm.step2.teams.push({name: ''});\n      }\n      else{\n        vm.step2.teams.push({name: '', round: ''});\n      }\n    };\n\n    vm.removeTeam = function (index) {\n      if(vm.step2.teams.length <= 2){\n        toastr.error('E\\' obbligatorio inserire almeno 2 squadre', 'Impossibile rimuovere la squadra');\n      }\n      else{\n        vm.step2.teams.splice(index,1);\n      }\n    }\n\n    vm.step1Done = function () {\n      if(!vm.step2) vm.step2 = {}; // Initialize step2 if needed\n\n      // If not \"Torneo a gironi\"\n      if(vm.step1.type != 1){\n        vm.step2.roundType = '1';\n        vm.initDefaultTeams();\n      }\n\n      // If \"torneo a gironi\" and user can't choose manual or automatic round type\n      else if(vm.forceManualRounds){\n        vm.step2.roundType = '0'; // Manual rounds\n        vm.initDefaultTeams();\n      }\n\n      vm.wizard.next();\n    }\n\n    vm.submitStep1 = function () {\n      $log.info('creando l\\'evento..');\n      return events\n        .form2Event(vm.step1)\n        .then(events.create);\n    }\n\n    vm.step2Done = function () {\n      vm.wizard.next();\n    }\n\n    vm.submitStep2 = function () {\n      $log.info('creando le squadre..');\n      return teams\n        .form2Teams(vm.step2)\n        .then(teams.addGroup);\n    }\n\n    vm.step3Done = function () {\n      vm.submitWizard();\n    }\n\n    vm.submitStep3 = function () {\n      $log.info('creando il calendario..');\n      return matches.createCalendar(models.currentEvent.evenId);\n    }\n\n    vm.submitWizard = function () {\n      vm.wizard.loading = true;\n      vm.submitStep1()\n        .then(vm.submitStep2)\n        .then(vm.submitStep3)\n        .then(function () {\n          $state.go('main.admin.events');\n        })\n        .finally(function () {\n          vm.wizard.loading = false;\n        });\n    }\n\n    vm.manualSubmit = function () {\n      vm.wizard.loading = true;\n      vm.submitStep1()\n        .then(vm.submitStep2)\n        .then(function () {\n          $state.go('main.admin.events');\n        })\n        .finally(function () {\n          vm.wizard.loading = false;\n        })\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('CalendarController', CalendarController);\n\n  /** @ngInject */\n  function CalendarController(models, events, matches, $q, $uibModal, teams) {\n    var vm = this;\n    vm.models = models;\n\n    // Update the current event (it's been selected now)\n    vm.updateCurrentEvent = function () {\n      // No current event selected -> noop\n      if(!models.currentEvent) return;\n\n      // Current event selected -> manually find and copy the real event from models (ng-options creates a new object)\n      for (var i = 0; i < models.events.length; i++) {\n        if(models.events[i].evenId === models.currentEvent.evenId){\n          models.events[i] = models.currentEvent;\n          break;\n        }\n      }\n\n      return vm\n        .setLoading(models.currentEvent.evenId) // Set a spinning loader on the page\n        .then(events.show)                      // Get the event info (API call)\n        .then(teams.list)                       // Get the event teams (API call), needed for filling up the select options\n        .then(vm.updateMatchDay)                // Update the match day\n        .finally(vm.unsetLoading);              // Remove the loader from the page\n    }\n\n    // Update the match day (it's been selected now)\n    vm.updateMatchDay = function () {\n      // No current event selected, or no match days yet -> noop\n      if(!models.currentEvent || !models.currentEvent.matchDays || models.currentEvent.matchDays.length === 0){\n        return;\n      }\n\n      // No day selected - check if the event has just changed\n      if(!models.currentEvent.currentDay){\n        // An event has been selected -> use it's first available day\n        models.currentEvent.currentDay = models.currentEvent.matchDays[0];\n      }\n      // Current day selected -> manually find and copy the real day from models (ng-options creates a new object)\n      else{\n        for (var i = 0; i < models.currentEvent.matchDays.length; i++) {\n          if(models.currentEvent.matchDays[i].matcDayId === vm.models.currentEvent.currentDay.matcDayId){\n            vm.models.currentEvent.currentDay = models.currentEvent.matchDays[i];\n            break;\n          }\n        }\n      }\n\n      return vm\n        .setLoading()\n        .then(matches.list)\n        .finally(vm.unsetLoading);\n    }\n\n    vm.setLoading = function (res) {\n      vm.loading = true;\n      return $q.resolve(res);\n    }\n\n    vm.unsetLoading = function (res) {\n      vm.loading = false;\n      return $q.resolve(res);\n    }\n\n    vm.createNewMatch = function () {\n      $uibModal.open({\n          templateUrl: 'app/pages/calendar/create/create.html',\n          controller: 'MatchCreateController',\n          controllerAs: 'matchCreate',\n          windowClass: 'modal-success'\n        }).result\n        .then(function (res) {\n          if(angular.isDefined(res)){\n            vm.setLoading(res)\n              .then(matches.form2Match)\n              .then(matches.create)\n              .then(matches.list)\n              .finally(vm.unsetLoading);\n          }\n        })\n    }\n\n    vm.createNewDay = function () {\n      $uibModal.open({\n          templateUrl: 'app/pages/calendar/createDay/create.html',\n          controller: 'DayCreateController',\n          controllerAs: 'dayCreate',\n          windowClass: 'modal-success'\n        }).result\n        .then(function (res) {\n          if(angular.isDefined(res)){\n            vm.setLoading(res)\n              .then(matches.form2Day)\n              .then(matches.createDay)\n              .then(function (res) {\n                models.currentEvent.currentDay = res;\n                return res;\n              })\n              .then(vm.updateMatchDay)\n              .finally(vm.unsetLoading);\n          }\n        })\n    }\n\n    // API call to retrieve all the events\n    events\n      .list()\n      .then(vm.updateCurrentEvent);\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('AccessController', AccessController);\n\n  /** @ngInject */\n  function AccessController(models, users) {\n    // User cached\n    if(models.currentUser && models.currentUser.userToken) {\n      users\n        .onLoggedIn(models.currentUser) // Treat the user as logged in\n        .catch(users.onLoggedOut);      // In case of error -> logout\n    }\n\n    // User not logged in and not cached\n    else {\n      users.onLoggedOut();\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .filter('wizardTextProgress', wizardTextProgressFilter);\n\n  /** @ngInject */\n  function wizardTextProgressFilter() {\n    return function(wizard) {\n      return 'Step ' + wizard.currentStep + ' di ' + wizard.totalSteps;\n    };\n  }\n\n})();\n\n'use strict';\n\nangular.module('frispo')\n  /**\n   * A wizard\n   */\n  .factory('Wizard', function () {\n    var defaults = {\n      totalSteps: 1,\n      startFromStep: 1\n    }\n\n    return function Wizard (options) {\n      this.options = angular.merge(defaults, options);\n\n      this.totalSteps = this.options.totalSteps;\n      this.currentStep = this.options.startFromStep;\n\n      this.next = function () {\n        if(this.currentStep < this.totalSteps){\n          this.currentStep++;\n        }\n      }\n\n      this.prev = function () {\n        if(this.currentStep > 1){\n          this.currentStep--;\n        }\n      }\n    };\n  });\n\n'use strict';\n\nangular.module('frispo')\n  /**\n   * Utilities functions.\n   */\n  .factory('utils', function () {\n    var utils = {\n      str2Date: function (str) {\n        if(!str) return;\n\n        var res = [];\n        var range = str.split('->');\n        angular.forEach(range, function (date) {\n          var split = date.split('/');\n          if(split.length !== 3) return;\n          res.push(split[2].trim() + '-' + split[1].trim() + '-' + split[0].trim())\n        })\n        if(res.length === 1){\n          return res[0];\n        }\n        else{\n          return res;\n        }\n      },\n      date2Str: function (dateStart, dateEnd) {\n        if(!dateStart) return;\n\n        var split = dateStart.split('-');\n        if(split.length !== 3) return;\n        var res = split[2].trim() + '/' + split[1].trim() + '/' + split[0].trim();\n\n        if(dateEnd){\n          res +=  ' -> ' + utils.date2Str(dateEnd);\n        }\n        return res;\n      },\n      str2Time: function (str) {\n        return str;\n        // if(!str) return;\n        //\n        // var res = null;\n        // var splitted = str.trim().split(' ');\n        // if(splitted.length == 2){\n        //   var hm = splitted[0].trim().split(':');\n        //   var pmAdd = (splitted[1] == 'PM' ? 12 : 0);\n        //   if(hm.length == 2){\n        //     res = (+hm[0] + pmAdd) + ':' + hm[1];\n        //   }\n        // }\n        // return res;\n      },\n      alphabetChars: function () {\n        return ['A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z'];\n      },\n      scores: function () {\n        return [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20];\n      },\n      istevenMultiSelectTranslation: function () {\n        return {\n            selectAll       : \"Seleziona tutti\",\n            selectNone      : \"Deseleziona tutti\",\n            reset           : \"Reset\",\n            search          : \"Cerca...\",\n            nothingSelected : \"Nessuno selezionato\"\n        };\n      },\n      cardTypes: function () {\n        return [\n          {\n            id: 0,\n            name: 'Ammonizione'\n          },\n          {\n            id: 1,\n            name: 'Espulsione per somma ammonizioni'\n          },\n          {\n            id: 2,\n            name: 'Espulsione diretta'\n          }\n        ]\n      }\n    };\n\n    return utils;\n  });\n\n'use strict';\n\nangular.module('frispo')\n  /**\n   * UI state service.\n   * Keep application-wide shared variables\n   */\n  .factory('uiState', function () {\n    var uiState = {};\n\n    return uiState;\n  });\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('timepicker', timepicker);\n\n  /** @ngInject */\n  function timepicker() {\n    var directive = {\n      restrict: 'A',\n      link: timepickerLink\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function timepickerLink(scope, el) {\n      el.clockpicker({autoclose: true});\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('showOnHover', showOnHover);\n\n  /** @ngInject */\n  function showOnHover() {\n    var directive = {\n      restrict: 'A',\n      link: linkFunc,\n      scope: {\n        showOnHover: '@',\n        showAnimate: '='\n      }\n    };\n\n    return directive;\n\n    function linkFunc(scope, el) {\n      var visible = false;\n      var target = angular.element(scope.showOnHover);\n\n      scope.$watch('showOnHover', function () {\n        target.removeClass('show-on-hover-target').removeClass('not-visible').removeClass('show-animate');\n        target = angular.element(scope.showOnHover);\n        target.addClass('show-on-hover-target');\n        if(scope.showAnimate){\n          target.addClass('show-animate');\n        }\n        scope.updateVisibility();\n      })\n\n      scope.updateVisibility = function () {\n        if(visible){\n          target.removeClass('not-visible');\n        }\n        else{\n          target.addClass('not-visible');\n        }\n      }\n\n      el.hover(function() {\n          if(!visible){\n            visible = true;\n            scope.updateVisibility();\n          }\n        },\n        function() {\n          if(visible){\n            visible = false;\n            scope.updateVisibility();\n          }\n        }\n      );\n    }\n  }\n\n})();\n\n'use strict';\n\nangular.module('frispo')\n  /**\n   * Response management pipeline.\n   * Utilities to process a response from the moment it arrives to the models update.\n   * To use in a promise chain as a pipeline\n   */\n  .factory('resPipe', function ($q, $filter, models, longTermMemory, $log, utils) {\n    var resPipe = {\n\n      /**\n       * Parse the initial response from the Frispo API\n       */\n      parseResponse: function(res) {\n        // Look for the response status_code\n        switch (res.status_code) {\n          case 200:\n            return res.data;\n          default:\n            return $q.reject({error: res.error});\n        }\n      },\n\n      /**\n       * Unwrap the response from a single element array\n       */\n      unwrapArray: function (res) {\n        if(angular.isArray(res) && res.length === 1) return res[0];\n        return res;\n      },\n\n      /**\n       * Camelize the response\n       */\n      camelize: function (res) {\n        var newRes;\n        if(angular.isArray(res)){\n          newRes = [];\n          angular.forEach(res, function (el) {\n            newRes.push(resPipe.camelize(el));\n          })\n          return newRes;\n        }\n        else if(angular.isObject(res)){\n          newRes = {};\n          angular.forEach(res, function(v,k){\n            newRes[$filter('camelize')(k)] = resPipe.camelize(v);\n          });\n          return newRes;\n        }\n        else {\n          return res;\n        }\n      },\n\n      /**\n       * Inject default fields to User objects\n       */\n      injectUserDefaults: function (res) {\n        res.displayName = res.displayName || res.email || res.name || 'Profilo';\n        return res;\n      },\n\n      /**\n       * Update the current user\n       */\n      updateCurrentUser: function (res) {\n        models.currentUser = res;\n        return res;\n      },\n\n      updateSentInvitations: function (res) {\n        models.currentUser.sentInvitations = res;\n        return res;\n      },\n\n      updateReceivedInvitations: function (res) {\n        models.currentUser.receivedInvitations = res;\n        return res;\n      },\n\n      /**\n       * Update the current user, merging data instead of replacing\n       */\n      updateMergeCurrentUser: function (res) {\n        if(res.permissions){ models.currentUser.permissions = []; }\n        return angular.merge(models.currentUser, res);\n      },\n\n      /**\n       * Update the preferences current user\n       */\n      updatePreferences: function (res) {\n        models.currentUser.preferences = res;\n        return res;\n      },\n\n      /**\n       * Mock an anonymous user for testing APIs\n       */\n      mockAnonymousUser: function (res) {\n        res.accessToken = '4e66c966e021918f0b088ddc929847f7';\n        res.uuid = '';\n        return res;\n      },\n\n      /**\n      * Memorize the current user in long term memory\n      */\n      memorizeCurrentUser: function (res) {\n        longTermMemory.memorize('currentUser', models.currentUser);\n        return res;\n      },\n\n      /**\n       * Inject default fields to events\n       */\n      injectEventsDefaults: function (res) {\n        // If the resource is an array, recurse for each element\n        if(angular.isArray(res)){\n          var newRes = [];\n          angular.forEach(res, function (el) {\n            newRes.push(resPipe.injectEventsDefaults(el));\n          })\n          return newRes;\n        }\n\n        // Prettify evenFormula\n        if(res.evenFormula === 0)\n          res.evenFormulaPretty = 'Solo andata';\n        else if(res.evenFormula === 1)\n          res.evenFormulaPretty = 'Andata e ritorno';\n\n        // Prettify evenType\n        if(res.evenType === 0)\n          res.evenTypePretty = 'Campionato italiana';\n        else if(res.evenType === 1)\n          res.evenTypePretty = 'Torneo a giorni';\n\n        // Make a dateRangePicker compliant field\n        if(!res.dates && res.evenDateStart && res.evenDateEnd){\n          res.dates = utils.date2Str(res.evenDateStart, res.evenDateEnd);\n        }\n\n        // Initialize a default published status\n        if(angular.isUndefined(res.evenStatoEvento)){\n          res.evenStatoEvento = 0; // Set as unpublished\n        }\n\n        // Initialize the currentDay based on its ID\n        if(angular.isNumber(res.evenDayActive) && angular.isArray(res.matchDays)){\n          for (var i = 0; i < res.matchDays.length; i++) {\n            if(res.matchDays[i].matcDayId === res.evenDayActive){\n              res.evenCurrentDay = res.matchDays[i];\n              break;\n            }\n          }\n        }\n\n        // Make a search field\n        res.search = [\n          res.evenName,\n          res.evenTypePretty,\n          res.evenFormulaPretty,\n          res.regions && res.regions.regiName || '',\n          res.evenCode,\n          res.evenSeason\n        ].join(' ');\n\n        // Sort the match days by prog number\n        if(angular.isArray(res.matchDays)){\n          res.matchDays.sort(function (a,b) {\n            return a.matcProg - b.matcProg;\n          });\n        }\n\n        return res;\n      },\n\n      /**\n       * Inject default fields to invitations\n       */\n      injectInvitationsDefaults: function (res) {\n        // If the resource is an array, recurse for each element\n        if(angular.isArray(res)){\n          var newRes = [];\n          angular.forEach(res, function (el) {\n            newRes.push(resPipe.injectInvitationsDefaults(el));\n          })\n          return newRes;\n        }\n\n        // Prettify status\n        switch (res.status) {\n          case '0':\n            res.statusPretty = 'In attesa';\n            break;\n          case '1':\n            res.statusPretty = 'Accettato';\n            break;\n          case '2':\n            res.statusPretty = 'Rifiutato';\n            break;\n          case '3':\n            res.statusPretty = 'Cancellato';\n            break;\n          default:\n            break;\n        }\n\n        // Translate date format\n        if(!res.dateInvitationPretty && res.dateInvitation){\n          res.dateInvitationPretty = utils.date2Str(res.dateInvitation);\n        }\n\n        return res;\n      },\n\n      /**\n       * Update the events\n       */\n      updateEvents: function (res) {\n        models.events = res;\n        return res;\n      },\n\n      /**\n       * Update the managed events\n       */\n      updateManagedEvents: function (res) {\n        models.currentUser.managedEvents = res;\n        return res;\n      },\n\n      /**\n       * Remove an event from the cache\n       */\n      removeEvent: function (res) {\n        // Look for the event in cache\n        var i = -1;\n        for (i=0; i < models.events.length; i++) {\n          if(models.events[i].evenId === res.evenId){\n            break;\n          }\n        }\n        // The event was found -> remove it\n        if(i >= 0 && i < models.events.length){\n          models.events.splice(i,1);\n        }\n        return res;\n      },\n\n      /**\n       * Memorize the events user in long term memory\n       */\n      memorizeEvents: function (res) {\n        longTermMemory.memorize('events', models.events);\n        return res;\n      },\n\n      /**\n      * Update the regions\n      */\n      updateRegions: function (res) {\n        models.regions = res;\n        return res;\n      },\n\n      /**\n      * Memorize the regions user in long term memory\n      */\n      memorizeRegions: function (res) {\n        longTermMemory.memorize('regions', models.regions);\n        return res;\n      },\n\n      /**\n       * Update the current event\n       */\n      updateCurrentEvent: function (res) {\n        var currentEventMerged = false;\n        if(models.currentEvent && models.currentEvent.evenId === res.evenId){\n          angular.merge(models.currentEvent, res);\n          currentEventMerged = true;\n        }\n\n        var i = 0;\n        if(angular.isArray(models.events)){\n          for (; i < models.events.length; i++) {\n            if(models.events[i].evenId === res.evenId){\n              if(currentEventMerged){\n                models.events[i] = models.currentEvent;\n              }\n              else{\n                angular.merge(models.events[i], res);\n                models.currentEvent = models.events[i];\n              }\n              break;\n            }\n          }\n        }\n\n        if(i === models.events.length){\n          models.currentEvent = res;\n          if(!angular.isArray(models.events)){\n            models.events = [];\n          }\n          models.events.push(models.currentEvent);\n        }\n\n        return models.currentEvent;\n      },\n\n      /**\n      * Memorize the events user in long term memory\n      */\n      memorizeCurrentEvent: function (res) {\n        longTermMemory.memorize('currentEvent', models.currentEvent);\n        return res;\n      },\n\n\n      /**\n       * Update the matches\n       */\n      updateMatches: function (res) {\n        if(!models.currentEvent || !models.currentEvent.currentDay) return res;\n        models.currentEvent.currentDay.matches = res;\n        return res;\n      },\n\n      /**\n       * Update a match\n       */\n      updateMatch: function (res) {\n        if(!models.currentEvent || !models.currentEvent.currentDay || !angular.isArray(models.currentEvent.currentDay.matches)){\n          return res;\n        }\n\n        for (var i = 0; i < models.currentEvent.currentDay.matches.length; i++) {\n          if(models.currentEvent.currentDay.matches[i].matcId === res.matcId){\n            return angular.merge(models.currentEvent.currentDay.matches[i], res);\n          }\n        }\n      },\n\n      /**\n       * Update the scorers of a match\n       */\n      updateMatchScorers: function (matchId, res) {\n        if(!models.currentEvent || !models.currentEvent.currentDay || !angular.isArray(models.currentEvent.currentDay.matches)){\n          return res;\n        }\n\n        for (var i = 0; i < models.currentEvent.currentDay.matches.length; i++) {\n          if(models.currentEvent.currentDay.matches[i].matcId == matchId){\n            models.currentEvent.currentDay.matches[i].scorers = res;\n            return res;\n          }\n        }\n      },\n\n      injectMatchDefaults: function (res) {\n        if(angular.isArray(res)){\n          angular.forEach(res, resPipe.injectMatchDefaults);\n        }\n\n        else{\n          if(res.matcDateMatch){\n            res.matcDateMatchPretty = utils.date2Str(res.matcDateMatch);\n          }\n\n          if(angular.isArray(res.matchCardsTeamA)){\n            resPipe.injectCardsDefaults(res.matchCardsTeamA);\n          }\n        }\n\n        return res;\n      },\n\n      injectPressDefaults: function (res) {\n        if(angular.isArray(res)){\n          angular.forEach(res, resPipe.injectPressDefaults);\n        }\n\n        else{\n          switch (res.pressStato) {\n            case '0':\n              res.pressStatoPretty = 'Non pubblicato';\n              break;\n            case '1':\n              res.pressStatoPretty = 'Pubblicato';\n              break;\n            default:\n              break;\n          }\n\n          if(res.pressDate){\n            res.pressDatePretty = utils.date2Str(res.pressDate);\n          }\n        }\n\n        return res;\n      },\n\n      injectEventCardsDefaults: function (res) {\n        if(angular.isArray(res)){\n          angular.forEach(res, resPipe.injectEventCardsDefaults);\n        }\n\n        else{\n          if(res.matcRedCards) resPipe.injectCardsDefaults(res.matcRedCards);\n          if(res.matcYellowCards) resPipe.injectCardsDefaults(res.matcYellowCards);\n        }\n\n        return res;\n      },\n\n      injectCardsDefaults: function (res) {\n        if(angular.isArray(res)){\n          angular.forEach(res, resPipe.injectCardsDefaults);\n        }\n        else{\n          switch (res.flgCards) {\n            case 0:\n              res.flgCardsPretty = 'Ammonizione';\n              break;\n            case 1:\n              res.flgCardsPretty = 'Espulsione per somma ammonizioni';\n              break;\n            case 2:\n              res.flgCardsPretty = 'Espulsione diretta';\n              break;\n            case 3:\n              res.flgCardsPretty = 'Squalifica da diffida';\n              break;\n            default:\n              break;\n          }\n          switch (res.typeSqualifications) {\n            case 0:\n              res.typeSqualificationsPretty = 'Ammonizione';\n              break;\n            case 1:\n              res.typeSqualificationsPretty = 'Espulsione per somma ammonizioni';\n              break;\n            case 2:\n              res.typeSqualificationsPretty = 'Espulsione diretta';\n              break;\n            case 3:\n              res.typeSqualificationsPretty = 'Squalifica da diffida';\n              break;\n            default:\n              break;\n          }\n        }\n\n        return res;\n      },\n\n      /**\n       * Insert a match day into current event\n       */\n      insertMatchDay: function (res) {\n        if(models.currentEvent && angular.isArray(models.currentEvent.matchDays)) {\n          models.currentEvent.matchDays.push(res);\n        }\n        return res;\n      },\n\n      /**\n       * Update the teams of current event\n       */\n      updateTeams: function (res) {\n        if(models.currentEvent){\n          models.currentEvent.teams = res;\n        }\n        return res;\n      },\n\n      /**\n       * Update the scoreboard of current event\n       */\n      updateScoreboard: function (res) {\n        if(models.currentEvent){\n          models.currentEvent.scoreboard = res;\n        }\n        return res;\n      },\n\n      /**\n       * Update the scorers of current event\n       */\n      updateScorers: function (res) {\n        if(models.currentEvent){\n          models.currentEvent.scorers = res;\n        }\n        return res;\n      },\n\n      updateYellows: function (res) {\n        if(models.currentEvent){\n          models.currentEvent.yellows = res;\n        }\n        return res;\n      },\n\n      updateDiffides: function (res) {\n        if(models.currentEvent){\n          models.currentEvent.diffides = res;\n        }\n        return res;\n      },\n\n      updateSqualifications: function (res) {\n        if(models.currentEvent){\n          models.currentEvent.squalifications = res;\n        }\n        return res;\n      },\n\n      updatePress: function (res) {\n        if(models.currentEvent){\n          if(angular.isArray(res)){\n            models.currentEvent.press = res;\n          }\n          else if(angular.isDefined(res.pressId) && angular.isArray(models.currentEvent.press)){\n            for (var i = 0; i < models.currentEvent.press.length; i++) {\n              if(models.currentEvent.press[i].pressId === res.pressId){\n                return angular.merge(models.currentEvent.press[i], res);\n              }\n            }\n          }\n        }\n        return res;\n      },\n\n      updateTeam: function (res) {\n        if(models.currentEvent && res.teamId && angular.isArray(models.currentEvent.teams)){\n          for (var i = 0; i < models.currentEvent.teams.length; i++) {\n            if(models.currentEvent.teams[i].teamId === res.teamId){\n              return angular.merge(models.currentEvent.teams[i], res);\n            }\n          }\n        }\n        return res;\n      },\n\n      updatePlayers: function (res) {\n        if(models.currentEvent && models.currentEvent.currentTeam){\n          models.currentEvent.currentTeam.players = res;\n        }\n        return res;\n      },\n\n      updatePlayer: function (res) {\n        if(models.currentEvent && models.currentEvent.currentTeam && angular.isArray(models.currentEvent.currentTeam.players)){\n          for (var i = 0; i < models.currentEvent.currentTeam.players.length; i++) {\n            if(models.currentEvent.currentTeam.players[i].playId === res.playId){\n              return angular.merge(models.currentEvent.currentTeam.players[i], res);\n            }\n          }\n        }\n        return res;\n      },\n\n      insertPlayer: function (res) {\n        if(models.currentEvent && models.currentEvent.currentTeam){\n          if(!angular.isArray(models.currentEvent.currentTeam.players)){\n            models.currentEvent.currentTeam.players = [];\n          }\n          models.currentEvent.currentTeam.players.push(res);\n        }\n        return res;\n      },\n\n      insertScorer: function (matchId, res, scorersKey) {\n        if(!scorersKey) scorersKey = 'scorers';\n        if(models.currentEvent && angular.isArray(models.currentEvent.currentDay.matches)){\n          for (var i = 0; i < models.currentEvent.currentDay.matches.length; i++) {\n            var curMatch = models.currentEvent.currentDay.matches[i];\n            if(curMatch.matcId === matchId){\n              if(!angular.isArray(curMatch[scorersKey])){\n                curMatch[scorersKey] = [];\n              }\n              curMatch[scorersKey].push(res);\n              break;\n            }\n          }\n        }\n        return res;\n      },\n\n      insertCard: function (matchId, res, cardsKey) {\n        if(!cardsKey) cardsKey = 'cards';\n        if(models.currentEvent && angular.isArray(models.currentEvent.currentDay.matches)){\n          for (var i = 0; i < models.currentEvent.currentDay.matches.length; i++) {\n            var curMatch = models.currentEvent.currentDay.matches[i];\n            if(curMatch.matcId === matchId){\n              if(!angular.isArray(curMatch[cardsKey])){\n                curMatch[cardsKey] = [];\n              }\n              curMatch[cardsKey].push(res);\n              break;\n            }\n          }\n        }\n        return res;\n      },\n\n      removeScorer: function (matchId, playerId, scorersKey) {\n        if(!scorersKey) scorersKey = 'scorers';\n        if(models.currentEvent && angular.isArray(models.currentEvent.currentDay.matches)){\n          for (var i = 0; i < models.currentEvent.currentDay.matches.length; i++) {\n            var curMatch = models.currentEvent.currentDay.matches[i];\n            if(curMatch.matcId === matchId){\n              if(!angular.isArray(curMatch[scorersKey])) break;\n              var j = 0;\n              for (; j < curMatch[scorersKey].length; j++) {\n                if(curMatch[scorersKey][j].playId === playerId) break;\n              }\n              if(j < curMatch[scorersKey].length){\n                curMatch[scorersKey].splice(j,1);\n                break;\n              }\n            }\n          }\n        }\n      },\n\n      /**\n       * Remove a card from the cache\n       */\n      removeEventCard: function (matchId, playerId, cardId, cardsKey, cardMatchKey) {\n        if(!models.currentEvent || !angular.isArray(models.currentEvent[cardsKey])) return;\n\n        // Look for the right player\n        for (var i = 0; i < models.currentEvent[cardsKey].length; i++) {\n          var curPlayer = models.currentEvent[cardsKey][i]\n          if(curPlayer.playId === playerId && angular.isArray(curPlayer[cardMatchKey])){\n            var j = 0;\n            // Look for the right scorerMatch and remove it\n            for (; j < curPlayer[cardMatchKey].length; j++) {\n              if(curPlayer[cardMatchKey][j].matcId === matchId){\n                curPlayer[cardMatchKey].splice(j,1);\n                return;\n              }\n            }\n          }\n        }\n      },\n\n      /**\n       * Update a card in cache\n       */\n      updateEventCard: function (matchId, playerId, cardId, cardsKey, cardMatchKey, cardData) {\n        if(!models.currentEvent || !angular.isArray(models.currentEvent[cardsKey])) return;\n\n        // Look for the right player\n        for (var i = 0; i < models.currentEvent[cardsKey].length; i++) {\n          var curPlayer = models.currentEvent[cardsKey][i]\n          if(curPlayer.playId === playerId && angular.isArray(curPlayer[cardMatchKey])){\n            var j = 0;\n            // Look for the right scorerMatch and remove it\n            for (; j < curPlayer[cardMatchKey].length; j++) {\n              if(curPlayer[cardMatchKey][j].matcId === matchId){\n                return angular.merge(curPlayer[cardMatchKey][j], cardData);\n              }\n            }\n          }\n        }\n      },\n\n      /**\n       * Remove a team from the cache\n       */\n      removeTeam: function (res) {\n        if(!res.teamId || !models.currentEvent || !angular.isArray(models.currentEvent.teams)) return res;\n\n        // Look for the team in cache\n        var i = -1;\n        for (i=0; i < models.currentEvent.teams.length; i++) {\n          if(models.currentEvent.teams[i].teamId === res.teamId){\n            break;\n          }\n        }\n        // The team was found -> remove it\n        if(i >= 0 && i < models.currentEvent.teams.length){\n          models.currentEvent.teams.splice(i,1);\n        }\n        return res;\n      },\n\n      /**\n       * Remove a press from the cache\n       */\n      removePress: function (res) {\n        if(!res.presId || !models.currentEvent || !angular.isArray(models.currentEvent.press)) return res;\n\n        // Look for the press in cache\n        var i = -1;\n        for (i=0; i < models.currentEvent.press.length; i++) {\n          if(models.currentEvent.press[i].presId === res.presId){\n            break;\n          }\n        }\n        // The team was found -> remove it\n        if(i >= 0 && i < models.currentEvent.press.length){\n          models.currentEvent.press.splice(i,1);\n        }\n        return res;\n      },\n\n      /**\n       * Remove a ScorerMatch from the cache\n       */\n      removeScorerMatch: function (playerId, res) {\n        if(!res.matcId || !models.currentEvent || !angular.isArray(models.currentEvent.scorers)) return res;\n\n        // Look for the right scorer\n        for (var i = 0; i < models.currentEvent.scorers.length; i++) {\n          var curScorer = models.currentEvent.scorers[i]\n          if(curScorer.scorPlayId === playerId && angular.isArray(curScorer.matcScorers)){\n            var j = 0;\n            // Look for the right scorerMatch and remove it\n            for (; j < curScorer.matcScorers.length; j++) {\n              if(curScorer.matcScorers[j].matcId === res.matcId){\n                curScorer.matcScorers.splice(j,1);\n                return res;\n              }\n            }\n          }\n        }\n\n        return res;\n      },\n\n       /**\n        * Remove a card from a match\n        */\n      removeMatchCard: function (matchId, cardId, cardsKey) {\n        if(!cardsKey) cardsKey = 'scorers';\n        if(models.currentEvent && angular.isArray(models.currentEvent.currentDay.matches)){\n          for (var i = 0; i < models.currentEvent.currentDay.matches.length; i++) {\n            var curMatch = models.currentEvent.currentDay.matches[i];\n            if(curMatch.matcId === matchId){\n              if(!angular.isArray(curMatch[cardsKey])) break;\n              var j = 0;\n              for (; j < curMatch[cardsKey].length; j++) {\n                if(curMatch[cardsKey][j].cardId === cardId) break;\n              }\n              if(j < curMatch[cardsKey].length){\n                curMatch[cardsKey].splice(j,1);\n                break;\n              }\n            }\n          }\n        }\n      },\n\n      /**\n      * Update a ScorerMatch in cache\n      */\n      updateScorerMatch: function (playerId, res) {\n        if(!res.matcId || !models.currentEvent || !angular.isArray(models.currentEvent.scorers)) return res;\n\n        // Look for the right scorer\n        for (var i = 0; i < models.currentEvent.scorers.length; i++) {\n          var curScorer = models.currentEvent.scorers[i]\n          if(curScorer.scorPlayId === playerId && angular.isArray(curScorer.matcScorers)){\n            var j = 0;\n            // Look for the right scorerMatch and update it\n            for (; j < curScorer.matcScorers.length; j++) {\n              if(curScorer.matcScorers[j].matcId === res.matcId){\n                return angular.merge(curScorer.matcScorers[j], res);\n              }\n            }\n          }\n        }\n\n        return res;\n      },\n\n      /**\n       * Remove a match from the cache\n       */\n      removeMatch: function (res) {\n        if(!res.matcId || !models.currentEvent || !models.currentEvent.currentDay || !angular.isArray(models.currentEvent.currentDay.matches)) return res;\n\n        // Look for the match in cache\n        var i = -1;\n        for (i=0; i < models.currentEvent.currentDay.matches.length; i++) {\n          if(models.currentEvent.currentDay.matches[i].matcId === res.matcId){\n            break;\n          }\n        }\n        // The team was found -> remove it\n        if(i >= 0 && i < models.currentEvent.currentDay.matches.length){\n          models.currentEvent.currentDay.matches.splice(i,1);\n        }\n        return res;\n      },\n\n      log: function (res) {\n        $log.info(res);\n        return res;\n      },\n\n      debugger: function (res) {\n        debugger; // eslint-disable-line no-debugger\n        return res;\n      }\n    };\n\n    return resPipe;\n  });\n\n'use strict';\n\nangular.module('frispo')\n  /**\n   * Long Term Memory\n   * Persist data to make it available after the browser is closed\n   */\n  .factory('longTermMemory', function () {\n    var allowedKeys = [\n      'currentUser',\n      'events',\n      'regions',\n      'currentEvent'\n    ];\n\n    var longTermMemory = {\n      memorize: function(key, val) {\n        if(allowedKeys.indexOf(key) < 0){\n          return;\n        }\n\n        localStorage[key] = angular.toJson(val);\n      },\n\n      remember: function(key) {\n        if(allowedKeys.indexOf(key) < 0){\n          return null;\n        }\n\n        try {\n          return angular.fromJson(localStorage[key]);\n        }\n        catch(e){\n          delete localStorage[key];\n          return null;\n        }\n      },\n\n      forget: function(key) {\n        if(allowedKeys.indexOf(key) < 0){\n          return null;\n        }\n\n        delete localStorage[key];\n      },\n\n      oblivion: function() {\n        angular.forEach(allowedKeys, function(key) {\n          delete localStorage[key];\n        });\n        localStorage.clear();\n      }\n    };\n\n    return longTermMemory;\n  });\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('frispoSidebar', frispoSidebar);\n\n  /** @ngInject */\n  function frispoSidebar($timeout) {\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/components/frispoSidebar/frispoSidebar.html',\n      controller: SidebarController,\n      controllerAs: 'sidebar',\n      link: SidebarLink,\n      bindToController: true\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function SidebarController(models, $state) {\n      var vm = this;\n\n      vm.models = models;\n      vm.state = $state;\n\n      vm.manageMenuEntries = [\n        'main.admin.createEvent',\n        'main.admin.events',\n        'main.admin.teams',\n        'main.admin.calendar',\n        'main.admin.scoreboard'\n      ]\n    }\n\n    function SidebarLink(){\n      $timeout(function () {\n        angular.element(window).trigger('resize'); // Trigger a resize event to adjust AdminLTE height\n      });\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('frispoHeader', frispoHeader);\n\n  /** @ngInject */\n  function frispoHeader($timeout) {\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/components/frispoHeader/frispoHeader.html',\n      controller: HeaderController,\n      controllerAs: 'header',\n      link: HeaderLink,\n      bindToController: true\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function HeaderController(models) {\n      var vm = this;\n\n      vm.models = models;\n    }\n\n    function HeaderLink(){\n      $timeout(function () {\n        angular.element(window).trigger('resize'); // Trigger a resize event to adjust AdminLTE height\n      });\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('frispoFooter', frispoFooter);\n\n  /** @ngInject */\n  function frispoFooter($timeout) {\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/components/frispoFooter/frispoFooter.html',\n      controller: FooterController,\n      controllerAs: 'footer',\n      link: FooterLink,\n      bindToController: true\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function FooterController(models) {\n      var vm = this;\n\n      vm.models = models;\n    }\n\n    function FooterLink(){\n      $timeout(function () {\n        angular.element(window).trigger('resize'); // Trigger a resize event to adjust AdminLTE height\n      });\n    }\n  }\n\n})();\n\n'use strict';\n\nangular.module('frispo')\n  /**\n   * My Project Overview API service\n   */\n   .factory('frispoApi', function (\n      $q,\n      $http,\n      provisioningApiUrl,\n      eventsApiUrl,\n      teamsApiUrl,\n      pressApiUrl,\n      matchesApiUrl,\n      cardsApiUrl,\n      scorersApiUrl,\n      rankingApiUrl,\n      authorization,\n      anonymousToken,\n      toastr,\n      models,\n      userApiUrl\n    ) {\n      // Cache the promises (just to avoid to call the same API before the previous has finished)\n      var cache = {};\n\n      // Api Helpers (accessible only from this factory)\n      var helpers = {\n        /**\n         * Try to retrieve the result from cache, or make HTTP call\n         * @param  {String} method  The HTTP method\n         * @param  {String} fullUrl The API url\n         * @param  {Object} data    The body\n         * @param  {Object} headers The headers\n         * @param  {Boolean} keep   If true, the promise is cached even after it's been fulfilled\n         * @return {Promise}        A promise of the response\n         */\n        cacheOrHttp: function(method, fullUrl, data, headers, keep) {\n          var key = method + fullUrl + (data ? angular.toJson(data) : '');\n\n          var config = {};\n          if(method) config.method = method.toUpperCase();\n          if(fullUrl) config.url = fullUrl;\n          if(data) config.data = data;\n          if(headers) config.headers = headers;\n\n          if (!cache[key]) {\n            var promise;\n            var err = false;\n            switch(method){\n              case 'get':\n              case 'GET':\n              case 'post':\n              case 'POST':\n              case 'put':\n              case 'PUT':\n              case 'patch':\n              case 'PATCH':\n              case 'delete':\n              case 'DELETE':\n                promise = $http(config);\n                break;\n              default:\n                err = true;\n                promise = $q.reject();\n                break;\n            }\n            if(!err){\n              cache[key] = promise.finally(function(response,err) {\n                if(!keep){\n                  delete cache[key]; // delete the cache, so the next call will be fresh\n                }\n                if(err) { return $q.reject(err); }\n                if(response) { return response; }\n              });\n            }\n          }\n\n          return cache[key];\n        },\n\n        /**\n         * Perform an API call to the Users endpoint, using preset headers and required data\n         * @param  {String} method  The HTTP method\n         * @param  {String} url The API url\n         * @param  {Object} data    The body\n         * @param  {Object} headers The headers\n         * @return {Promise}        A promise of the response\n         */\n        provisioningApiCall: function (method, url, data, headers) {\n          url = url || '/';\n          return helpers.cacheOrHttp(\n            method,\n            provisioningApiUrl + url,\n            angular.merge({},\n              data\n            ),\n            angular.merge({\n                Authorization: authorization\n              },\n              headers\n            )\n          );\n        },\n\n        /**\n         * Perform an API call to the Events endpoint, using preset headers\n         * @param  {String} method  The HTTP method\n         * @param  {String} url     The API url\n         * @param  {Object} data    The body\n         * @param  {Object} headers The headers\n         * @return {Promise}        A promise of the response\n         */\n        eventsApiCall: function (method, url, data, headers, keep) {\n          url = url || '/';\n          return helpers.cacheOrHttp(\n            method,\n            eventsApiUrl + url,\n            data,\n            angular.merge({\n                Authorization: authorization\n              },\n              headers\n            ),\n            keep\n          );\n        },\n\n        /**\n         * Perform an API call to the Teams endpoint, using preset headers\n         * @param  {String} method  The HTTP method\n         * @param  {String} url     The API url\n         * @param  {Object} data    The body\n         * @param  {Object} headers The headers\n         * @return {Promise}        A promise of the response\n         */\n        teamsApiCall: function (method, url, data, headers) {\n          url = url || '/';\n          return helpers.cacheOrHttp(\n            method,\n            teamsApiUrl + url,\n            data,\n            angular.merge({\n                Authorization: authorization\n              },\n              headers\n            )\n          );\n        },\n\n        /**\n         * Perform an API call to the Press endpoint, using preset headers\n         * @param  {String} method  The HTTP method\n         * @param  {String} url     The API url\n         * @param  {Object} data    The body\n         * @param  {Object} headers The headers\n         * @return {Promise}        A promise of the response\n         */\n        pressApiCall: function (method, url, data, headers) {\n          url = url || '/';\n          return helpers.cacheOrHttp(\n            method,\n            pressApiUrl + url,\n            data,\n            angular.merge({\n                Authorization: authorization\n              },\n              headers\n            )\n          );\n        },\n\n        /**\n         * Perform an API call to the Match endpoint, using preset headers\n         * @param  {String} method  The HTTP method\n         * @param  {String} url     The API url\n         * @param  {Object} data    The body\n         * @param  {Object} headers The headers\n         * @return {Promise}        A promise of the response\n         */\n        matchesApiCall: function (eventId, method, url, data, headers) {\n          url = url || '/';\n          return helpers.cacheOrHttp(\n            method,\n            matchesApiUrl + '/event/' + eventId + url,\n            data,\n            angular.merge({\n                Authorization: authorization\n              },\n              headers\n            )\n          );\n        },\n\n        /**\n         * Perform an API call to the Cards endpoint, using preset headers\n         * @param  {String} method  The HTTP method\n         * @param  {String} url     The API url\n         * @param  {Object} data    The body\n         * @param  {Object} headers The headers\n         * @return {Promise}        A promise of the response\n         */\n        cardsApiCall: function (eventId, method, url, data, headers) {\n          url = url || '/';\n          return helpers.cacheOrHttp(\n            method,\n            cardsApiUrl + '/events/' + eventId + url,\n            data,\n            angular.merge({\n                Authorization: authorization\n              },\n              headers\n            )\n          );\n        },\n\n        /**\n         * Perform an API call to the Scorers endpoint, using preset headers\n         * @param  {String} method  The HTTP method\n         * @param  {String} url     The API url\n         * @param  {Object} data    The body\n         * @param  {Object} headers The headers\n         * @return {Promise}        A promise of the response\n         */\n        scorersApiCall: function (eventId, matchId, method, url, data, headers) {\n          url = url || '/';\n          return helpers.cacheOrHttp(\n            method,\n            scorersApiUrl + '/events/' + eventId + '/match/' + matchId + url,\n            data,\n            angular.merge({\n                Authorization: authorization\n              },\n              headers\n            )\n          );\n        },\n\n        /**\n         * Perform an API call to the Ranking endpoint, using preset headers\n         * @param  {String} method  The HTTP method\n         * @param  {String} url     The API url\n         * @param  {Object} data    The body\n         * @param  {Object} headers The headers\n         * @return {Promise}         A promise of the response\n         */\n        rankingApiCall: function (eventId, method, url, data, headers) {\n          url = url || '/';\n          return helpers.cacheOrHttp(\n            method,\n            rankingApiUrl + '/event/' + eventId + url,\n            data,\n            angular.merge({\n                Authorization: authorization\n              },\n              headers\n            )\n          );\n        },\n\n        /**\n         * Perform an API call to the Preferences endpoint, using preset headers\n         * @param  {String} method  The HTTP method\n         * @param  {String} url     The API url\n         * @param  {Object} data    The body\n         * @param  {Object} headers The headers\n         * @return {Promise}         A promise of the response\n         */\n        userApiCall: function (method, url, data, headers) {\n          url = url || '/';\n          return helpers.cacheOrHttp(\n            method,\n            userApiUrl + url,\n            data,\n            angular.merge({\n                Authorization: authorization\n              },\n              headers\n            )\n          );\n        },\n\n        /**\n         * Expect a 200 response and return data.\n         * Otherwise, return a rejected promise.\n         */\n        expect200: function (response) {\n          if(response.status === 200){\n            return response.data;\n          }\n          else{\n            return $q.reject(response);\n          }\n        },\n\n        notification: function (response) {\n          if(response.msg && response.status_code === 200){\n            toastr.success(response.msg);\n          }\n          return response;\n        },\n\n        unwrapData: function (response) {\n          return response.data;\n        }\n      };\n\n      var frispoApi = {\n        /** USER API **/\n\n        /**\n         * Register a new user\n         */\n        register: function(userData) {\n          return helpers\n            .provisioningApiCall('post', '/register?user_token=' + anonymousToken, {\n              email: userData.email,\n              password: userData.password\n            })\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * Authenticate the user\n         */\n        login: function(userData) {\n          return helpers\n            .provisioningApiCall('post', '/login?user_token=' + anonymousToken, {\n              email: userData.email,\n              password: userData.password\n            })\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * Authenticate the user using facebook\n         */\n        loginFacebook: function (facebookData) {\n          return helpers\n            .provisioningApiCall('post', '/login_facebook?user_token=' + anonymousToken, {\n              facebook_token: facebookData.authResponse.accessToken,\n              type: 0\n            })\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * Logout the user\n         * @return {Promise}          A promise with the response\n         */\n        logout: function () {\n          return helpers\n            .provisioningApiCall('post', '/logout?user_token=' + models.currentUser.userToken)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /* INVITATION API */\n\n        listSentInvitations: function () {\n          return helpers\n            .userApiCall('get', '/user/admininvitation/listinvitingmember?user_token=' + models.currentUser.userToken)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        listReceivedInvitations: function () {\n          return helpers\n            .userApiCall('get', '/user/admininvitation/listguest?user_token=' + models.currentUser.userToken)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        createInvitation: function (invitationData) {\n          return helpers\n            .userApiCall('post', '/user/admininvitation/send?user_token=' + models.currentUser.userToken, invitationData)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        updateInvitation: function (invitationData) {\n          return helpers\n            .userApiCall('post', '/user/admininvitation/edit?user_token=' + models.currentUser.userToken, invitationData)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /* EVENTS API */\n\n        /**\n         * List the events of the current user\n         * @return {Promise} A promise fulfilled with the event list\n         */\n        listEvents: function () {\n          return helpers\n            .eventsApiCall('get', '/events/origin?user_token=' + models.currentUser.userToken)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * List the events managed by current user\n         */\n        listManagedEvents: function () {\n          return helpers\n            .eventsApiCall('get', '/events/guest?user_token=' + models.currentUser.userToken)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * Create a new event\n         * @return {Promise} A promise fulfilled with the event created\n         */\n        createEvent: function (eventData) {\n          return helpers\n            .eventsApiCall('post', '/events/add?user_token=' + models.currentUser.userToken, eventData)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * Update an event\n         */\n        updateEvent: function (eventId, eventData) {\n          return helpers\n            .eventsApiCall('post', '/events/' + eventId + '/edit?user_token=' + models.currentUser.userToken, eventData)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * Destroy an event\n         */\n        destroyEvent: function (eventData) {\n          return helpers\n            .eventsApiCall('delete', '/events/' + eventData.evenId + '/remove?user_token=' + models.currentUser.userToken)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * Show an event\n         * @return {Promise} A promise fulfilled with the event requested\n         */\n        showEvent: function (eventId) {\n          return helpers\n            .eventsApiCall('get', '/event/' + eventId + '?user_token=' + models.currentUser.userToken)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * List the active regions\n         */\n        listRegions: function () {\n          return helpers\n            .eventsApiCall('get', '/regions?user_token=' + models.currentUser.userToken, null, null, true)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /** RANKING API **/\n\n        /**\n         * Show the scoreboard of an event\n         */\n        showEventScoreboard: function (eventId) {\n          return helpers\n            .rankingApiCall(eventId, 'get', '/ranking?user_token=' + models.currentUser.userToken)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * Show the scoreboard of a tournament event\n         */\n        showTournamentScoreboard: function (eventId) {\n          return helpers\n            .rankingApiCall(eventId, 'get', '/rankingtournament?user_token=' + models.currentUser.userToken)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * Show the players' scores of the event\n         */\n        showScorers: function (eventId) {\n          return helpers\n            .rankingApiCall(eventId, 'get', '/scorers_matches?user_token=' + models.currentUser.userToken)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * Create a new scorer\n         */\n        createScorer: function (eventId, matchId, scorerData) {\n          return helpers\n            .scorersApiCall(eventId, matchId, 'post', '/scorers/add?user_token=' + models.currentUser.userToken, scorerData)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * Destroy a ScorerMatch\n         */\n        destroyScorerMatch: function(eventId, playerId, matchId) {\n          return helpers\n            .scorersApiCall(eventId, matchId, 'delete', '/player/' + playerId + '/scorers/remove?user_token=' + models.currentUser.userToken)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * Destroy a card\n         */\n        destroyCard: function (eventId, matchId, cardId) {\n          return helpers\n            .cardsApiCall(eventId, 'delete', '/match/' + matchId + '/cards/' + cardId + '/remove?user_token=' + models.currentUser.userToken)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * Update a ScorerMatch\n         */\n        updateScorerMatch: function (eventId, matchId, scorerMatchData) {\n          return helpers\n            .scorersApiCall(eventId, matchId, 'post', '/scorers/edit?user_token=' + models.currentUser.userToken, scorerMatchData)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /* PRESS API */\n\n        /**\n         * List the press of an event\n         * @param  {Number} eventId The id of the event\n         */\n        listPress: function (eventId) {\n          return helpers\n            .pressApiCall('get', '/event/' + eventId + '/press?user_token=' + models.currentUser.userToken)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * update a press\n         */\n        updatePress: function (eventId, pressId, pressData) {\n          return helpers\n            .pressApiCall('post', '/event/' + eventId + '/press/' + pressId + '/edit?user_token=' + models.currentUser.userToken, pressData)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * update a press\n         */\n        createPress: function (pressData) {\n          return helpers\n            .pressApiCall('post', '/press/create?user_token=' + models.currentUser.userToken, pressData)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * destroy a press\n         */\n        destroyPress: function (eventId, pressId) {\n          return helpers\n            .pressApiCall('delete', '/event/' + eventId + '/press/' + pressId + '/remove?user_token=' + models.currentUser.userToken)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * show a press\n         */\n        showPress: function (eventId, pressId) {\n          return helpers\n            .pressApiCall('get', '/event/' + eventId + '/press/' + pressId + '?user_token=' + models.currentUser.userToken)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /* TEAMS API */\n\n        /**\n         * List the teams of an event\n         * @param  {Number} eventId The id of the event\n         */\n        listTeams: function (eventId) {\n          return helpers\n            .teamsApiCall('get', '/events/' + eventId + '/teams?user_token=' + models.currentUser.userToken)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * update a team\n         */\n        updateTeam: function (eventId, teamId, teamData) {\n          return helpers\n            .teamsApiCall('post', '/events/' + eventId + '/teams/' + teamId + '/edit?user_token=' + models.currentUser.userToken, teamData)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * update a team\n         */\n        createTeam: function (eventId, teamData) {\n          return helpers\n            .teamsApiCall('post', '/events/' + eventId + '/teams/add?user_token=' + models.currentUser.userToken, teamData)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * destroy a team\n         */\n        destroyTeam: function (eventId, teamId) {\n          return helpers\n            .teamsApiCall('post', '/events/' + eventId + '/teams/' + teamId + '/remove?user_token=' + models.currentUser.userToken)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * show a team\n         */\n        showTeam: function (eventId, teamId) {\n          return helpers\n            .teamsApiCall('get', '/events/' + eventId + '/teams/' + teamId + '?user_token=' + models.currentUser.userToken)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * Add a group of teams to an event\n         * @param {Number} eventId   The id of the event to add the teams to\n         * @param {Object} teamsData An object containing the informations about the teams we want to create\n         */\n        addGroupTeams: function (eventId, teamsData) {\n          return helpers\n            .teamsApiCall('post', '/events/' + eventId + '/teams/add_group_teams?user_token=' + models.currentUser.userToken, teamsData)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * List the players of a team\n         */\n        listPlayers: function (teamId) {\n          return helpers\n            .teamsApiCall('get', '/teams/' + teamId + '/players/list?user_token=' + models.currentUser.userToken)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        updatePlayer: function (teamId, playerId, playerData) {\n          return helpers\n            .teamsApiCall('post', '/teams/' + teamId + '/players/' + playerId + '/edit?user_token=' + models.currentUser.userToken, playerData)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        createPlayer: function (teamId, playerData) {\n          return helpers\n            // TODO: check this call\n            .teamsApiCall('post', '/teams/' + teamId + '/players/add?user_token=' + models.currentUser.userToken, playerData)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /* PREFERENCES API */\n\n\n        /**\n         * Get the preferences of the current user\n         */\n        showPreferences: function () {\n          return helpers\n            .userApiCall('get', '/preferences/list?user_token=' + models.currentUser.userToken)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * Get the basic info of the current user\n         */\n        showUser: function () {\n          return helpers\n            .userApiCall('get', '/user/find?user_token=' + models.currentUser.userToken)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * Update the basic info of the current user\n         */\n        updateUser: function (userData) {\n            return helpers\n              .userApiCall('post', '/user/edit?user_token=' + models.currentUser.userToken, userData)\n              .then(helpers.expect200)\n              .then(helpers.notification);\n        },\n\n\n        /* MATCHES API */\n\n\n        /**\n         * Create a new event\n         * @return {Promise} A promise fulfilled with the event created\n         */\n        createMatchesCalendar: function (eventId) {\n          return helpers\n            .matchesApiCall(eventId, 'post', '/match/create_calendar?user_token=' + models.currentUser.userToken)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * List the matches of an event for a given day\n         * @return {Promise} A promise fulfilled with the matches data\n         */\n        listMatches: function (eventId, day) {\n          return helpers\n            .matchesApiCall(eventId, 'get', '/day/' + day + '/matches?user_token=' + models.currentUser.userToken)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * Show a match\n         */\n        showMatch: function (eventId, matchId) {\n          return helpers\n            .matchesApiCall(eventId, 'get', '/match/' + matchId + '?user_token=' + models.currentUser.userToken)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * List the scorers of a match for a given event\n         * @return {Promise} A promise fulfilled with the matches data\n         */\n        listMatchScorers: function (eventId, matchId) {\n          return helpers\n            .matchesApiCall(eventId, 'get', '/match/' + matchId + '/scorers?user_token=' + models.currentUser.userToken)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * List the yellow cards of an event\n         */\n        listYellowCards: function (eventId) {\n          return helpers\n            .cardsApiCall(eventId, 'get', '/cards/listyellow?user_token=' + models.currentUser.userToken)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * List the diffides of an event\n         */\n        listDiffides: function (eventId) {\n          return helpers\n            .cardsApiCall(eventId, 'get', '/cards/listdiffide?user_token=' + models.currentUser.userToken)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * List the squalifications of an event\n         */\n        listSqualifications: function (eventId) {\n          return helpers\n            .cardsApiCall(eventId, 'get', '/cards/listsqualifications?user_token=' + models.currentUser.userToken)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * Create a new card\n         */\n        createCard: function (eventId, matchId, cardData) {\n          return helpers\n            .cardsApiCall(eventId, 'post', '/match/' + matchId + '/cards/add?user_token=' + models.currentUser.userToken, cardData)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * Update a card\n         */\n        updateCard: function (eventId, matchId, cardId, cardData) {\n          return helpers\n            .cardsApiCall(eventId, 'post', '/match/' + matchId + '/cards/' + cardId + '/edit?user_token=' + models.currentUser.userToken, cardData)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * Update a match\n         */\n        updateMatch: function (eventId, matchData) {\n          return helpers\n            .matchesApiCall(eventId, 'post', '/matches/update?user_token=' + models.currentUser.userToken, matchData)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * Create a match\n         */\n        createMatch: function (eventId, matchDayId, matchData) {\n          return helpers\n            .matchesApiCall(eventId, 'post', '/day/' + matchDayId + '/matches/add?user_token=' + models.currentUser.userToken, matchData)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * Create a match day\n         */\n        createDay: function (eventId, dayData) {\n          return helpers\n            .matchesApiCall(eventId, 'post', '/matches_day/add?user_token=' + models.currentUser.userToken, dayData)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * Destroy a match\n         */\n        destroyMatch: function (eventId, matchDayId, matchId) {\n          return helpers\n            .matchesApiCall(eventId, 'delete', '/match_day/' + matchDayId + '/matches/' + matchId + '/remove?user_token=' + models.currentUser.userToken)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        }\n      };\n\n      return frispoApi;\n   });\n\n'use strict';\n\nangular.module('frispo')\n  /**\n   * Error Manager.\n   * Handles common HTTP error messages\n   */\n  .factory('errorManager', function (toastr, $log, $state, $q, longTermMemory, models) {\n    var errorManager = function(err) {\n      // log every errors\n      $log.error(err);\n\n      // Unwrap HTTP errors and take actions if needed\n      if(angular.isObject(err) && err.status){\n        switch(err.status){\n          case 401:\n            $state.go('main.logout');\n            err = err.data;\n            break;\n          case 403:\n            $state.go('main.home');\n            err = err.data;\n            break;\n          case 422:\n            err = err.data;\n            break;\n          case 404:\n            err = err.data;\n            break;\n          case 413:\n            err = 'Il file che stai cercando di caricare è troppo grande';\n            break;\n          case -1:\n            err = 'Il server non è raggiungibile o non sei connesso ad Internet';\n            break;\n          default:\n            break;\n        }\n      }\n\n      var getErrorString = function (err) {\n        if(angular.isString(err)){\n          return err;\n        }\n        else if(angular.isObject(err) && (err.full_messages || err.error_description || err.errors || err.data || err.msg || err.error)){\n          return getErrorString(err.full_messages || err.error_description || err.errors || err.data || err.msg || err.error );\n        }\n        else if(angular.isArray(err)){\n          var myErr = [];\n          for (var i = 0; i < err.length; i++) {\n            myErr[i] = getErrorString(err[i]);\n          }\n          return getErrorString(myErr.join('<br>'));\n        }\n        // Don't manage different kinds of error\n        else{\n          longTermMemory.oblivion(); // Forget everything. We don't want the app to be broken forever!\n          models.reset(); // Reset all the models. We don't want the app to be broken forever!\n          return 'Si è verificato un errore imprevisto. Si prega di riprovare più tardi.';\n        }\n      }\n\n      toastr.error(getErrorString(err), 'Errore');\n\n      return $q.reject(err);\n    };\n\n    return errorManager;\n  });\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('compareTo', compareTo);\n\n  /** @ngInject */\n  function compareTo() {\n    var directive = {\n      restrict: 'A',\n      require: 'ngModel',\n      scope: {\n        otherModelValue: '=compareTo'\n      },\n      link: compareToLink\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function compareToLink(scope, element, attrs, ngModel) {\n      ngModel.$validators.compareTo = function (modelvalue) {\n        return modelvalue == scope.otherModelValue;\n      }\n      scope.$watch('otherModelValue', function () {\n        ngModel.$validate();\n      })\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('datepicker', datepicker);\n\n  /** @ngInject */\n  function datepicker() {\n    var directive = {\n      restrict: 'A',\n      link: datepickerLink,\n      scope: {\n        datepicker: '@',\n        model: '='\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function datepickerLink(scope, el) {\n      scope.watchInput = function () {\n        scope.$watch('model', function () {\n          scope.drp.elementChanged();\n        });\n      }\n\n      if(scope.datepicker === 'range'){\n        scope.drp = el.daterangepicker({\n          autoUpdateInput: false,\n          locale: {\n            format: 'DD/MM/YYYY',\n            separator: ' -> '\n          }\n        }).data('daterangepicker');\n        el.on('apply.daterangepicker', function (ev, picker) {\n          scope.$apply(function () {\n            scope.model = picker.startDate.format('DD/MM/YYYY') + ' -> ' + picker.endDate.format('DD/MM/YYYY');\n          })\n        })\n        el.on('cancel.daterangepicker', function () {\n          scope.$apply(function () {\n            scope.model = '';\n          })\n        })\n        scope.watchInput();\n      }\n      else{\n        scope.drp = el.daterangepicker({\n          autoUpdateInput: false,\n          singleDatePicker: true,\n          locale: {\n            format: 'DD/MM/YYYY',\n            separator: ' -> '\n          }\n        }).data('daterangepicker');\n        el.on('apply.daterangepicker', function (ev, picker) {\n          scope.$apply(function () {\n            scope.model = picker.startDate.format('DD/MM/YYYY');\n          })\n        })\n        el.on('cancel.daterangepicker', function () {\n          scope.$apply(function () {\n            scope.model = '';\n          })\n        })\n        scope.watchInput();\n      }\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('bootstrapMultiselect', bootstrapMultiselect);\n\n  /** @ngInject */\n  function bootstrapMultiselect() {\n    var directive = {\n      restrict: 'A',\n      link: bootstrapMultiselectLink,\n      terminal: true\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function bootstrapMultiselectLink(scope, el) {\n      el.multiselect();\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('can', canDirective);\n\n  /** @ngInject */\n  function canDirective($log, models) {\n    var directive = {\n      restrict: 'A',\n      link: linkFunc,\n      scope: {\n        can: '@'\n      }\n    };\n\n    return directive;\n\n    function linkFunc(scope, el) {\n      var watcher;\n      var shown;\n      var negative;\n      var permission;\n      scope.models = models;\n\n      // Update the visibility of the element\n      var updateVisibility = function() {\n        var toShow = false;\n        if(angular.isArray(models.currentUser.permissions)){ // look for permission\n            for (var i = 0; i < models.currentUser.permissions.length; i++) {\n              if(models.currentUser.permissions[i].permName === permission){\n                toShow = true;\n                break;\n              }\n            }\n        }\n        if(negative){ toShow = !toShow; } // invert the condition if needed\n\n        // Show the element if not shown\n        if(toShow && !shown){\n          el.removeClass('can-hide');\n          shown = true;\n        }\n\n        // Hide the element if shown\n        else if(!toShow && shown){\n          el.addClass('can-hide');\n          shown = false;\n        }\n      };\n\n      // If the action starts with \"!\", the action is negative\n      negative = scope.can.slice(0, 1) === '!';\n\n\n      // In that case, remove ! from the string\n      if(negative){\n        permission = scope.can.substr(1);\n      }\n      else{\n        permission = scope.can;\n      }\n\n      // Update the visibility for the first time\n      shown = true;\n      updateVisibility();\n\n      // Update the visibility as soon as the permissions change\n      watcher = scope.$watch('models.currentUser.permissions', function(newVal, oldVal) {\n        if(newVal && oldVal !== newVal){\n          updateVisibility();\n        }\n      });\n\n      scope.$on('$destroy', function () {\n        watcher();\n      });\n    }\n  }\n\n})();\n\n'use strict';\n\nangular.module('frispo')\n  /**\n   * User models manager\n   */\n   .factory('users', function (frispoApi, errorManager, models, longTermMemory, resPipe, $state, $q, ezfb, $log, uiState, $timeout) {\n\n      var users = {\n        /**\n         * Register a new user\n         * @param  {Object} userData an object containing 'email' and 'password'\n         * @return {Promise}         a promise with the authentication data for the user\n         */\n        register: function (userData) {\n          return frispoApi\n            .register(userData)\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(function (res) {\n              res.email = userData.email;\n              return res;\n            })\n            .then(resPipe.camelize)\n            .then(resPipe.injectUserDefaults)\n            .then(resPipe.updateCurrentUser)\n            .then(resPipe.memorizeCurrentUser)\n            .catch(errorManager);\n        },\n\n        /**\n         * Login a user\n         * @param  {Object} userData an object containing 'email' and 'password'\n         * @return {Promise}         a promise with the authentication data for the user\n         */\n        login: function (userData) {\n          return frispoApi\n            .login(userData)\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(function (res) {\n              res.email = userData.email; // Add the email from the input as it's missing from the response\n              return res;\n            })\n            .then(resPipe.camelize)\n            .then(resPipe.injectUserDefaults)\n            .then(resPipe.updateCurrentUser)\n            .then(resPipe.memorizeCurrentUser)\n            .then(users.onLoggedIn)\n            .catch(errorManager);\n        },\n\n        /**\n         * Logout a user\n         * @param  {Object} userData an object containing the user data\n         * @return {Promise}          a promise that will be fullfilled after the logout\n         */\n        logout: function () {\n          if(models.currentUser && models.currentUser.userToken){\n            return frispoApi\n              .logout()\n              .then(function (res) {\n                $log.info('Frispo logout');\n                return res;\n              })\n              .catch(errorManager)\n              .finally(users.onLoggedOut)\n              .then(function () {\n                ezfb.logout();\n              });\n          }\n          return $q.resolve();\n        },\n\n        /**\n         * Login a user to frispo's server using the facebook login() response data\n         * @param  {Object} facebookData The object returned by the Facebook SDK after a succesful login\n         * @return {Promise}             A promise fulfilled with the authentication data for the user,\n         */\n        loginFacebook: function (facebookData) {\n          return frispoApi\n            .loginFacebook(facebookData)\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(resPipe.camelize)\n            .then(resPipe.injectUserDefaults)\n            .then(resPipe.updateCurrentUser)\n            .then(resPipe.memorizeCurrentUser)\n            .then(users.onLoggedIn)\n            .catch(errorManager);\n        },\n\n        /**\n         * Fetch all user info\n         */\n        info: function () {\n          var infoCalls = [\n            users.showPreferences(),\n            users.show()\n          ];\n          return $q.all(infoCalls);\n        },\n\n        /**\n         * Show basic  user info\n         */\n        show: function () {\n          return frispoApi\n            .showUser()\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(resPipe.camelize)\n            .then(resPipe.updateMergeCurrentUser)\n            .then(resPipe.memorizeCurrentUser)\n            .catch(errorManager);\n        },\n\n        /**\n         * Edit basic user info\n         */\n        update: function (userData) {\n          return frispoApi\n            .updateUser(userData)\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(resPipe.camelize)\n            .then(resPipe.updateMergeCurrentUser)\n            .then(resPipe.memorizeCurrentUser)\n            .catch(errorManager);\n        },\n\n        /**\n         * Get the preferences of the user\n         */\n        showPreferences: function () {\n          return frispoApi\n            .showPreferences()\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(resPipe.camelize)\n            .then(resPipe.updatePreferences)\n            .then(resPipe.memorizeCurrentUser)\n            .catch(errorManager);\n        },\n\n        /**\n         * This function is used as a callback whenever a user has been succesfully logged in\n         * @param  {Object} userData The object containing the user data\n         * @return {Object}          The same userData, useful for promise chaining\n         */\n        onLoggedIn: function (userData) {\n          if($state.current.name === 'main.access'){\n            $state.go('main.admin.events');\n          }\n          $log.info('Frispo login');\n          users.info();\n          uiState.loggedIn = true;\n          return $q.resolve(userData);\n        },\n\n        /**\n         * This function is used as a callback whenever a user has been succesfully logged out\n         */\n        onLoggedOut: function() {\n          models.reset();\n          longTermMemory.oblivion();\n          uiState.loggedIn = false;\n          if($state.current.name !== 'main.login' && $state.current.name !== 'main.register'){\n            $timeout(function () {\n              $state.go('main.login');\n            })\n          }\n        },\n\n        /**\n         * Backup user data and setup the anonymous user for testing purposes\n         */\n        setAnonymousUser: function (res) {\n          models.bkp =  {\n            uuid: models.currentUser.uuid,\n            accessToken: models.currentUser.accessToken\n          }\n          models.currentUser.uuid = 'anonimo';\n          models.currentUser.accessToken = '4e66c966e021918f0b088ddc929847f7'\n          return $q.resolve(res);\n        },\n\n        /**\n         * Restore user backup\n         */\n        unsetAnonymousUser: function (res) {\n          models.currentUser.uuid = models.bkp.uuid;\n          models.currentUser.accessToken = models.bkp.accessToken;\n          delete models.bkp;\n          return $q.resolve(res);\n        },\n\n        checkFacebookLogin: function () {\n          return ezfb\n            .getLoginStatus()\n            .then(function (res) {\n              if(res.status === 'connected'){\n                return res;\n              }\n              else{\n                return $q.reject(res);\n              }\n            });\n        },\n\n        /**\n         * Configure the facebook login and events\n         */\n        configureFacebookCallbacks: function (res) {\n          // Subscribe to FB login\n          ezfb.Event.subscribe('auth.login', function (response) {\n            $log.info('Facebook login');\n            users\n              .loginFacebook(response)\n              .then(function () {\n                $state.go('main.access');\n              });\n          });\n\n          // Subscribe to FB logout\n          ezfb.Event.subscribe('auth.logout', function () {\n            $log.info('Facebook logout');\n            if(uiState.loggedIn){\n              users.logout();\n            }\n          });\n\n\n          return res;\n        },\n\n        form2Team: function (formData) {\n          var userData = {};\n          if(angular.isDefined(formData.type)) userData.type = formData.type;\n          if(angular.isDefined(formData.subscription)) userData.subscription = formData.subscription;\n          return $q.resolve(userData);\n        }\n      };\n\n      return users;\n   });\n\n'use strict';\n\nangular.module('frispo')\n  /**\n   * Event models manager\n   */\n   .factory('teams', function (frispoApi, errorManager, resPipe, $q, models, utils) {\n\n      var teams = {\n        /**\n         * List the teams of the current event\n         */\n        list: function () {\n          return frispoApi\n            .listTeams(models.currentEvent.evenId)\n            .then(resPipe.parseResponse)\n            .then(resPipe.camelize)\n            .then(resPipe.updateTeams)\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager)\n        },\n\n        show: function (teamId) {\n          return frispoApi\n            .showTeam(models.currentEvent.evenId, teamId)\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(resPipe.camelize)\n            .then(resPipe.updateTeam)\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        create: function (team) {\n          return frispoApi\n            .createTeam(models.currentEvent.evenId, team)\n            .then(resPipe.parseResponse)\n            .catch(errorManager);\n        },\n\n        update: function (teamId, team) {\n          return frispoApi\n            .updateTeam(models.currentEvent.evenId, teamId, team)\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(resPipe.camelize)\n            .then(resPipe.updateTeam)\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        destroy: function (team) {\n          return frispoApi\n            .destroyTeam(models.currentEvent.evenId, team.teamId)\n            .then(resPipe.parseResponse)\n            .then(function () {\n              return team;\n            })\n            .then(resPipe.removeTeam)\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        /**\n         * Create a group of teams and add it to an event\n         */\n        addGroup: function (teamsData) {\n          return frispoApi\n            .addGroupTeams(models.currentEvent.evenId, teamsData)\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(resPipe.camelize)\n            .catch(errorManager);\n        },\n\n        listPlayers: function (teamId) {\n          return frispoApi\n            .listPlayers(teamId || models.currentEvent.currentTeam.teamId)\n            .then(resPipe.parseResponse)\n            .then(resPipe.camelize)\n            .then(resPipe.updatePlayers)\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        updatePlayer: function (playerId, playerData) {\n          return frispoApi\n            .updatePlayer(models.currentEvent.currentTeam.teamId, playerId, playerData)\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(resPipe.camelize)\n            .then(resPipe.updatePlayer)\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        createPlayer: function (playerData) {\n          return frispoApi\n            .createPlayer(models.currentEvent.currentTeam.teamId, playerData)\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(resPipe.camelize)\n            .then(resPipe.insertPlayer)\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        /**\n         * Translate data from a team form into an teamsData object\n         * @param  {Object} formData The form input\n         * @return {Promise}         A promise fulfilled with the teamsData object\n         */\n        form2Teams: function (formData) {\n          var teamsData = { extra: [] };\n          angular.forEach(formData.teams, function (team) {\n            teamsData.extra.push(teams.form2Team(team));\n          });\n          return $q.resolve(teamsData);\n        },\n\n        form2Team: function (formData) {\n          var teamData = {};\n          var teamTime = utils.str2Time(formData.time);\n          if(angular.isDefined(formData.captain)) teamData.team_captain = formData.captain;\n          if(angular.isDefined(teamTime)) teamData.team_time = teamTime;\n          if(angular.isDefined(formData.name)) teamData.team_name = formData.name;\n          if(angular.isDefined(formData.phone)) teamData.team_mobile_phone = formData.phone;\n          if(angular.isDefined(formData.place)) teamData.team_place = formData.place;\n          if(angular.isDefined(formData.round)) teamData.team_groups = formData.round;\n          if(angular.isDefined(formData.desc)) teamData.team_description = formData.desc;\n          return teamData;\n        },\n\n        form2Player: function (formData) {\n          var playerData = {};\n          if(angular.isDefined(formData.name)) playerData.player_name = formData.name;\n          if(angular.isDefined(formData.surname)) playerData.player_surname = formData.surname;\n          return $q.resolve(playerData);\n        }\n      };\n\n      return teams;\n   });\n\n'use strict';\n\nangular.module('frispo')\n  /**\n   * Event models manager\n   */\n   .factory('press', function (frispoApi, errorManager, resPipe, $q, models) {\n\n      var press = {\n        /**\n         * List the press of the current event\n         */\n        list: function () {\n          return frispoApi\n            .listPress(models.currentEvent.evenId)\n            .then(resPipe.parseResponse)\n            .then(resPipe.camelize)\n            .then(resPipe.injectPressDefaults)\n            .then(resPipe.updatePress)\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager)\n        },\n\n        show: function (pressId) {\n          return frispoApi\n            .showPress(models.currentEvent.evenId, pressId)\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(resPipe.camelize)\n            .then(resPipe.injectPressDefaults)\n            .then(resPipe.updatePress)\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        create: function (press) {\n          return frispoApi\n            .createPress(press)\n            .then(resPipe.parseResponse)\n            .catch(errorManager);\n        },\n        //\n        // update: function (pressId, press) {\n        //   return frispoApi\n        //     .updatePress(models.currentEvent.evenId, pressId, press)\n        //     .then(resPipe.parseResponse)\n        //     .then(resPipe.unwrapArray)\n        //     .then(resPipe.camelize)\n        //     .then(resPipe.updatePress)\n        //     .then(resPipe.memorizeCurrentEvent)\n        //     .then(resPipe.memorizeEvents)\n        //     .catch(errorManager);\n        // },\n\n        destroy: function (press) {\n          return frispoApi\n            .destroyPress(models.currentEvent.evenId, press.presId)\n            .then(resPipe.parseResponse)\n            .then(function () {\n              return press;\n            })\n            .then(resPipe.removePress)\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        form2Press: function (formData) {\n          var pressData = {};\n          if(angular.isDefined(formData.name)) pressData.press_name = formData.name;\n          if(angular.isDefined(formData.ranking)) pressData.press_ranking = formData.ranking.id;\n          if(angular.isDefined(formData.matches)) pressData.press_matches = formData.matches.id;\n          if(angular.isDefined(formData.scorers)) pressData.press_scorers = formData.scorers.id;\n          if(angular.isDefined(formData.yellowcards)) pressData.press_yellowcards = formData.yellowcards.id;\n          if(angular.isDefined(formData.diffide)) pressData.press_diffide = formData.diffide.id;\n          if(angular.isDefined(formData.squalifications)) pressData.press_squalifications = formData.squalifications.id;\n          if(angular.isDefined(formData.amends)) pressData.press_amends = formData.amends.id;\n          if(angular.isArray(formData.events)){\n            pressData.press_events = [];\n            angular.forEach(formData.events, function (event) {\n              pressData.press_events.push({\n                pres_even_id: ''+event.evenId\n              });\n            });\n          }\n          return pressData;\n        }\n      };\n\n      return press;\n   });\n\n'use strict';\n\nangular.module('frispo')\n  /**\n  * Models cache\n  */\n  .factory('models', function (longTermMemory) {\n\n    var models = {\n       reset: function () {\n         models.events = longTermMemory.remember('events') || [];\n         models.regions = longTermMemory.remember('regions') || [];\n         models.currentUser = longTermMemory.remember('currentUser') || {};\n         models.currentEvent = models.events.length>0 && longTermMemory.remember('currentEvent') || undefined;\n       }\n    };\n\n    models.reset();\n\n    return models;\n  });\n\n'use strict';\n\nangular.module('frispo')\n  /**\n   * Matches models manager\n   */\n   .factory('matches', function (frispoApi, errorManager, resPipe, models, utils, $q) {\n\n      var matches = {\n\n        /**\n         * Create a matches calendar for an event\n         */\n        createCalendar: function (eventId) {\n          return frispoApi\n            .createMatchesCalendar(eventId)\n            .catch(errorManager);\n        },\n\n        /**\n         * List the matches for a day of an event\n         */\n        list: function () {\n          return frispoApi\n            .listMatches(models.currentEvent.evenId, models.currentEvent.currentDay.matcDayId)\n            .then(resPipe.parseResponse)\n            .then(resPipe.camelize)\n            .then(resPipe.injectMatchDefaults)\n            .then(resPipe.updateMatches)\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        /**\n         * List the scorers of a match\n         */\n        listScorers: function (matchId) {\n          return frispoApi\n            .listMatchScorers(models.currentEvent.evenId, matchId)\n            .then(resPipe.parseResponse)\n            .then(resPipe.camelize)\n            .then(function (res) {\n              return resPipe.updateMatchScorers(matchId, res);\n            })\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        /**\n         * Create a scorer\n         */\n        createScorer: function (matchId, scorerData, scorersKey) {\n          return frispoApi\n            .createScorer(models.currentEvent.evenId, matchId, scorerData)\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(resPipe.camelize)\n            .then(function (res) {\n              resPipe.insertScorer(matchId, res, scorersKey);\n              return res;\n            })\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        /**\n         * Create a card\n         */\n        createCard: function (matchId, cardData, cardsKey) {\n          return frispoApi\n            .createCard(models.currentEvent.evenId, matchId, cardData)\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(resPipe.camelize)\n            .then(resPipe.injectCardsDefaults)\n            .then(function (res) {\n              resPipe.insertCard(matchId, res, cardsKey);\n              return res;\n            })\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        /**\n         * Destroy a scorer\n         */\n        destroyScorer: function (matchId, playerId, scorersKey) {\n          return frispoApi.destroyScorerMatch(models.currentEvent.evenId, playerId, matchId)\n            .then(resPipe.parseResponse)\n            .then(function () {\n              return resPipe.removeScorer(matchId, playerId, scorersKey);\n            })\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        /**\n         * Destroy a card\n         */\n        destroyMatchCard: function (matchId, cardId, cardsKey) {\n          return frispoApi.destroyCard(models.currentEvent.evenId, matchId, cardId)\n            .then(resPipe.parseResponse)\n            .then(function () {\n              return resPipe.removeMatchCard(matchId, cardId, cardsKey);\n            })\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        /**\n         * Destroy a card\n         */\n        destroyEventCard: function (matchId, playerId, cardId, cardsKey, cardMatchKey) {\n          return frispoApi\n            .destroyCard(models.currentEvent.evenId, matchId, cardId)\n            .then(resPipe.parseResponse)\n            .then(function () {\n              return resPipe.removeEventCard(matchId, playerId, cardId, cardsKey, cardMatchKey);\n            })\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        /**\n         * Update a card\n         */\n        updateEventCard: function (matchId, playerId, cardId, cardsKey, cardMatchKey, cardData) {\n          return frispoApi\n            .updateCard(models.currentEvent.evenId, matchId, cardId, cardData)\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(resPipe.camelize)\n            .then(resPipe.injectCardsDefaults)\n            .then(function (res) {\n              return resPipe.updateEventCard(matchId, playerId, cardId, cardsKey, cardMatchKey, res);\n            })\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        /**\n         * Update a match\n         */\n        update: function (matchDayId, matchData) {\n          return frispoApi\n            .updateMatch(models.currentEvent.evenId, matchData)\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(resPipe.camelize)\n            .then(resPipe.injectMatchDefaults)\n            .then(function (res) {\n              res.matcDayId = matchDayId; // Inject the match day ID, as the server returns 0\n              return res;\n            })\n            .then(resPipe.updateMatch)\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        /**\n         * Create a match\n         */\n        create: function (matchData) {\n          return frispoApi\n            .createMatch(models.currentEvent.evenId, models.currentEvent.currentDay.matcDayId, matchData)\n            .then(resPipe.parseResponse)\n            .then(resPipe.log)\n            .catch(errorManager);\n        },\n\n        /**\n         * Create a match day\n         */\n        createDay: function (dayData) {\n          return frispoApi\n            .createDay(models.currentEvent.evenId, dayData)\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(resPipe.camelize)\n            .then(resPipe.insertMatchDay)\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        /**\n         * Destroy a match\n         */\n        destroy: function (matchData) {\n          return frispoApi\n            .destroyMatch(models.currentEvent.evenId, models.currentEvent.currentDay.matcDayId, matchData.matcId)\n            .then(resPipe.parseResponse)\n            .then(function () {\n              return matchData;\n            })\n            .then(resPipe.removeMatch)\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        /**\n         * Show a match\n         */\n         show: function (matchId) {\n           return frispoApi\n            .showMatch(models.currentEvent.evenId, matchId)\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(resPipe.camelize)\n            .then(resPipe.updateMatch)\n            .then(resPipe.injectMatchDefaults)\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n         },\n\n         /**\n          * Translate data from a match form into a matchData object\n          * @param  {Object} formData The form input\n          * @return {Promise}         A promise fulfilled with the matchData object\n          */\n         form2Match: function (formData) {\n           var matchData = {};\n           var matchTime = utils.str2Time(formData.time);\n           var matchDate = utils.str2Date(formData.date);\n           if(angular.isDefined(formData.matchId)) matchData.matc_id = formData.matchId;\n           if(formData.teamA && angular.isDefined(formData.teamA.teamId)) matchData.matc_team_id_a = formData.teamA.teamId;\n           if(formData.teamB && angular.isDefined(formData.teamB.teamId)) matchData.matc_team_id_b = formData.teamB.teamId;\n           if(angular.isDefined(formData.scoreA)) matchData.matc_goal_team_a = formData.scoreA;\n           if(angular.isDefined(formData.scoreB)) matchData.matc_goal_team_b = formData.scoreB;\n           if(angular.isString(formData.dateExpected)) matchData.matc_date_expected = formData.dateExpected;\n           if(angular.isString(matchDate)) matchData.matc_date_match = matchDate;\n           if(angular.isString(matchTime)) matchData.matc_time = matchTime;\n           if(angular.isString(formData.address)) matchData.matc_address = formData.address;\n           if(angular.isString(formData.round)) matchData.matc_name_groups = formData.round;\n           if(formData.played && angular.isDefined(formData.played.value)) matchData.matc_flg_play = formData.played.value;\n           if(angular.isDefined(formData.shootoutA)) matchData.matc_shootout_team_a = formData.shootoutA;\n           if(angular.isDefined(formData.shootoutB)) matchData.matc_shootout_team_b = formData.shootoutB;\n           if(angular.isString(formData.place)) matchData.matc_place = formData.place;\n           return $q.resolve(matchData);\n         },\n\n         /**\n          * Translate data from a scorer form into a scorerData object\n          * @param  {Object} formData The form input\n          * @return {Promise}         A promise fulfilled with the scorerData object\n          */\n         form2Scorer: function (formData) {\n           var scorerData = {};\n           if(angular.isDefined(formData.teamId)) scorerData.team_id = ''+formData.teamId;\n           if(angular.isDefined(formData.playId)) scorerData.play_id = ''+formData.playId;\n           else scorerData.play_id = '0';\n           if(angular.isDefined(formData.goals)) scorerData.goal = formData.goals;\n           if(angular.isDefined(formData.name)) scorerData.play_name = formData.name;\n           if(angular.isDefined(formData.surname)) scorerData.play_surname = formData.surname;\n           return $q.resolve(scorerData);\n         },\n\n         /**\n          * Translate data from a card form into a card object\n          * @param  {Object} formData The form input\n          * @return {Promise}         A promise fulfilled with the cardData object\n          */\n         form2CardMatch: function (formData) {\n           var cardData = {};\n           if(angular.isDefined(formData.playId)) cardData.play_id = formData.playId;\n           if(angular.isDefined(formData.typeSqualifications)) cardData.flg_cards = formData.typeSqualifications.value;\n           if(angular.isDefined(formData.daySqualifications)) cardData.day_squalification = formData.daySqualifications.value;\n           if(angular.isDefined(formData.note)) cardData.note = formData.note;\n           if(angular.isDefined(formData.squalificationStatus)) cardData.squalification_status = formData.squalificationStatus.value;\n           return $q.resolve(cardData);\n         },\n\n         /**\n          * Translate data from a card form into a cardData object\n          * @param  {Object} formData The form input\n          * @return {Promise}         A promise fulfilled with the cardData object\n          */\n         form2Card: function (formData) {\n           var cardData = {};\n           if(angular.isDefined(formData.teamId)) cardData.team_id = ''+formData.teamId;\n           if(angular.isDefined(formData.playId)) cardData.play_id = ''+formData.playId;\n           else cardData.play_id = '0';\n           if(angular.isDefined(formData.cardType) && angular.isDefined(formData.cardType.id)) cardData.flg_cards = ''+formData.cardType.id;\n           if(angular.isDefined(formData.disqualificationDays)) cardData.day_squalification = ''+formData.disqualificationDays;\n           if(angular.isDefined(formData.note)) cardData.note = ''+formData.note;\n           if(angular.isDefined(formData.name)) cardData.play_name = ''+formData.name;\n           if(angular.isDefined(formData.surname)) cardData.play_surname = ''+formData.surname;\n           return $q.resolve(cardData);\n         },\n\n         /**\n          * Translate data from a Day form into an dayData object\n          * @param  {Object} formData The form input\n          * @return {Promise}         A promise fulfilled with the dayData object\n          */\n          form2Day: function (formData) {\n           var dayData = {};\n           if(angular.isDefined(formData.name)) dayData.mada_name = formData.name;\n           if(angular.isDefined(formData.desc)) dayData.mada_description = formData.desc;\n           return $q.resolve(dayData);\n         }\n      };\n\n      return matches;\n   });\n\n'use strict';\n\nangular.module('frispo')\n  /**\n   * Event models manager\n   */\n   .factory('invitations', function (frispoApi, errorManager, resPipe, models) {\n\n      var invitations = {\n        /**\n         * List the invitations sent by current user\n         */\n        listSent: function () {\n          return frispoApi\n            .listSentInvitations()\n            .then(resPipe.parseResponse)\n            .then(resPipe.camelize)\n            .then(resPipe.injectInvitationsDefaults)\n            .then(resPipe.updateSentInvitations)\n            .then(resPipe.memorizeCurrentUser)\n            .catch(errorManager);\n        },\n\n        /**\n         * List the invitations sent by current user\n         */\n        listReceived: function () {\n          return frispoApi\n            .listReceivedInvitations()\n            .then(resPipe.parseResponse)\n            .then(resPipe.camelize)\n            .then(resPipe.injectInvitationsDefaults)\n            .then(resPipe.updateReceivedInvitations)\n            .then(resPipe.memorizeCurrentUser)\n            .catch(errorManager);\n        },\n\n        create: function (invitationData) {\n          return frispoApi\n            .createInvitation(invitationData)\n            .then(resPipe.parseResponse)\n            .catch(errorManager);\n        },\n\n        destroy: function (invitationData) {\n          var invModel = {\n            invitation_id: '' + invitationData.invitationId,\n            mail_guest: invitationData.mailGuest,\n            even_id: invitationData.evenId,\n            status: '3' // status: 3 -> cancellato\n          }\n          return frispoApi\n            .updateInvitation(invModel)\n            .then(resPipe.parseResponse)\n            .catch(errorManager);\n        },\n\n        accept: function (invitationData) {\n          var invModel = {\n            invitation_id: '' + invitationData.invitationId,\n            mail_guest: invitationData.mailGuest,\n            even_id: invitationData.evenId,\n            status: '1' // status: 1 -> accettato\n          }\n          return frispoApi\n            .updateInvitation(invModel)\n            .then(resPipe.parseResponse)\n            .catch(errorManager);\n        },\n\n        decline: function (invitationData) {\n          var invModel = {\n            invitation_id: '' + invitationData.invitationId,\n            mail_guest: invitationData.mailGuest,\n            even_id: invitationData.evenId,\n            status: '2' // status: 2 -> rifiutato\n          }\n          return frispoApi\n            .updateInvitation(invModel)\n            .then(resPipe.parseResponse)\n            .catch(errorManager);\n        },\n\n        form2Invitation: function (formData) {\n          var invitationData = {};\n          if(angular.isArray(formData.events) && angular.isDefined(formData.guestEmail)){\n            invitationData.extra = [];\n            angular.forEach(formData.events, function (event) {\n              invitationData.extra.push({\n                mail_invitingmember: models.currentUser.email,\n                mail_guest: formData.guestEmail,\n                even_id: event.evenId\n              })\n            });\n          }\n          return invitationData;\n        }\n\n        // show: function (invitationId) {\n        //   return frispoApi\n        //     .showTeam(models.currentEvent.evenId, invitationId)\n        //     .then(resPipe.parseResponse)\n        //     .then(resPipe.unwrapArray)\n        //     .then(resPipe.camelize)\n        //     .then(resPipe.updateTeam)\n        //     .then(resPipe.memorizeCurrentEvent)\n        //     .then(resPipe.memorizeEvents)\n        //     .catch(errorManager);\n        // },\n        //\n        // create: function (invitation) {\n        //   return frispoApi\n        //     .createTeam(models.currentEvent.evenId, invitation)\n        //     .then(resPipe.parseResponse)\n        //     .catch(errorManager);\n        // },\n        //\n        // update: function (invitationId, invitation) {\n        //   return frispoApi\n        //     .updateTeam(models.currentEvent.evenId, invitationId, invitation)\n        //     .then(resPipe.parseResponse)\n        //     .then(resPipe.unwrapArray)\n        //     .then(resPipe.camelize)\n        //     .then(resPipe.updateTeam)\n        //     .then(resPipe.memorizeCurrentEvent)\n        //     .then(resPipe.memorizeEvents)\n        //     .catch(errorManager);\n        // },\n        //\n        // destroy: function (invitation) {\n        //   return frispoApi\n        //     .destroyTeam(models.currentEvent.evenId, invitation.invitationId)\n        //     .then(resPipe.parseResponse)\n        //     .then(function () {\n        //       return invitation;\n        //     })\n        //     .then(resPipe.removeTeam)\n        //     .then(resPipe.memorizeCurrentEvent)\n        //     .then(resPipe.memorizeEvents)\n        //     .catch(errorManager);\n        // },\n        //\n        // /**\n        //  * Create a group of invitations and add it to an event\n        //  */\n        // addGroup: function (invitationsData) {\n        //   return frispoApi\n        //     .addGroupTeams(models.currentEvent.evenId, invitationsData)\n        //     .then(resPipe.parseResponse)\n        //     .then(resPipe.unwrapArray)\n        //     .then(resPipe.camelize)\n        //     .catch(errorManager);\n        // },\n        //\n        // listPlayers: function (invitationId) {\n        //   return frispoApi\n        //     .listPlayers(invitationId || models.currentEvent.currentTeam.invitationId)\n        //     .then(resPipe.parseResponse)\n        //     .then(resPipe.camelize)\n        //     .then(resPipe.updatePlayers)\n        //     .then(resPipe.memorizeCurrentEvent)\n        //     .then(resPipe.memorizeEvents)\n        //     .catch(errorManager);\n        // },\n        //\n        // updatePlayer: function (playerId, playerData) {\n        //   return frispoApi\n        //     .updatePlayer(models.currentEvent.currentTeam.invitationId, playerId, playerData)\n        //     .then(resPipe.parseResponse)\n        //     .then(resPipe.unwrapArray)\n        //     .then(resPipe.camelize)\n        //     .then(resPipe.updatePlayer)\n        //     .then(resPipe.memorizeCurrentEvent)\n        //     .then(resPipe.memorizeEvents)\n        //     .catch(errorManager);\n        // },\n        //\n        // createPlayer: function (playerData) {\n        //   return frispoApi\n        //     .createPlayer(models.currentEvent.currentTeam.invitationId, playerData)\n        //     .then(resPipe.parseResponse)\n        //     .then(resPipe.unwrapArray)\n        //     .then(resPipe.camelize)\n        //     .then(resPipe.insertPlayer)\n        //     .then(resPipe.memorizeCurrentEvent)\n        //     .then(resPipe.memorizeEvents)\n        //     .catch(errorManager);\n        // },\n        //\n        // /**\n        //  * Translate data from a invitation form into an invitationsData object\n        //  * @param  {Object} formData The form input\n        //  * @return {Promise}         A promise fulfilled with the invitationsData object\n        //  */\n        // form2Teams: function (formData) {\n        //   var invitationsData = { extra: [] };\n        //   angular.forEach(formData.invitations, function (invitation) {\n        //     invitationsData.extra.push(invitations.form2Team(invitation));\n        //   });\n        //   return $q.resolve(invitationsData);\n        // },\n        //\n        // form2Team: function (formData) {\n        //   var invitationData = {};\n        //   var invitationTime = utils.str2Time(formData.time);\n        //   if(angular.isDefined(formData.captain)) invitationData.invitation_captain = formData.captain;\n        //   if(angular.isDefined(invitationTime)) invitationData.invitation_time = invitationTime;\n        //   if(angular.isDefined(formData.name)) invitationData.invitation_name = formData.name;\n        //   if(angular.isDefined(formData.phone)) invitationData.invitation_mobile_phone = formData.phone;\n        //   if(angular.isDefined(formData.place)) invitationData.invitation_place = formData.place;\n        //   if(angular.isDefined(formData.round)) invitationData.invitation_groups = formData.round;\n        //   if(angular.isDefined(formData.desc)) invitationData.invitation_description = formData.desc;\n        //   return invitationData;\n        // },\n        //\n        // form2Player: function (formData) {\n        //   var playerData = {};\n        //   if(angular.isDefined(formData.name)) playerData.player_name = formData.name;\n        //   if(angular.isDefined(formData.surname)) playerData.player_surname = formData.surname;\n        //   return $q.resolve(playerData);\n        // }\n      };\n\n      return invitations;\n   });\n\n'use strict';\n\nangular.module('frispo')\n  /**\n   * Event models manager\n   */\n   .factory('events', function (frispoApi, errorManager, resPipe, $q, utils) {\n\n      var events = {\n        /**\n         * Show all events\n         */\n         list: function () {\n          return frispoApi\n            .listEvents()\n            .then(resPipe.parseResponse)\n            .then(resPipe.camelize)\n            .then(resPipe.injectEventsDefaults)\n            .then(resPipe.updateEvents)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        /**\n         * Show all events managed by a user\n         */\n        listManaged: function () {\n          return frispoApi\n            .listManagedEvents()\n            .then(resPipe.parseResponse)\n            .then(resPipe.camelize)\n            .then(resPipe.injectEventsDefaults)\n            .then(resPipe.updateManagedEvents)\n            .then(resPipe.memorizeCurrentUser)\n            .catch(errorManager);\n        },\n\n        /**\n         * Create a new event\n         */\n        create: function (eventData) {\n          return frispoApi\n            .createEvent(eventData)\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(resPipe.camelize)\n            .then(resPipe.injectEventsDefaults)\n            .then(resPipe.updateCurrentEvent)\n            .then(resPipe.memorizeCurrentEvent)\n            .catch(errorManager);\n        },\n\n        /**\n         * Show an event\n         */\n        show: function (eventId) {\n          return frispoApi\n            .showEvent(eventId)\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(resPipe.camelize)\n            .then(resPipe.injectEventsDefaults)\n            .then(resPipe.updateCurrentEvent)\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        /**\n         * Show the scoreboard of an event\n         */\n        showScoreboard: function (event) {\n          var apiCall;\n          // Torneo a gironi\n          if(event.evenType === 1){\n            apiCall = frispoApi.showTournamentScoreboard(event.evenId);\n          }\n          else{\n            apiCall = frispoApi.showEventScoreboard(event.evenId);\n          }\n          return apiCall\n            .then(resPipe.parseResponse)\n            .then(resPipe.camelize)\n            .then(resPipe.updateScoreboard)\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        /**\n         * Show the scorers of an event\n         */\n        showScorers: function (eventId) {\n          return frispoApi.showScorers(eventId)\n            .then(resPipe.parseResponse)\n            .then(resPipe.camelize)\n            .then(resPipe.updateScorers)\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        destroyScorerMatch: function (eventId, playerId, scorerMatch) {\n          return frispoApi.destroyScorerMatch(eventId, playerId, scorerMatch.matcId)\n            .then(resPipe.parseResponse)\n            .then(function () {\n              return resPipe.removeScorerMatch(playerId, scorerMatch);\n            })\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        updateScorerMatch: function (eventId, matchId, scorerMatchData) {\n          return frispoApi.updateScorerMatch(eventId, matchId, scorerMatchData)\n            .then(resPipe.parseResponse)\n            .then(function () { // Mock a response\n              return {\n                matcId: matchId,\n                matcScorerGoal: scorerMatchData.scor_goal\n              };\n            })\n            .then(function (res) {\n              return resPipe.updateScorerMatch(scorerMatchData.scor_play_id, res);\n            })\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        /**\n         * Destroy an event\n         */\n        destroy: function (event) {\n          return frispoApi\n            .destroyEvent(event)\n            .then(resPipe.parseResponse)\n            .then(function () {\n              return event;\n            })\n            .then(resPipe.removeEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager)\n        },\n\n        /**\n         * Update an event\n         */\n        update: function (eventId, eventData) {\n          return frispoApi\n            .updateEvent(eventId, eventData)\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(resPipe.camelize)\n            .then(resPipe.injectEventsDefaults)\n            .then(resPipe.updateCurrentEvent)\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        /**\n        * List the active regions\n        */\n        listRegions: function () {\n          return frispoApi\n            .listRegions()\n            .then(resPipe.parseResponse)\n            .then(resPipe.camelize)\n            .then(resPipe.updateRegions)\n            .then(resPipe.memorizeRegions)\n            .catch(errorManager);\n        },\n\n        /**\n         * List the yellow cards for the event\n         */\n        listYellows: function (eventId) {\n          return frispoApi\n            .listYellowCards(eventId)\n            .then(resPipe.parseResponse)\n            .then(resPipe.camelize)\n            .then(resPipe.injectEventCardsDefaults)\n            .then(resPipe.updateYellows)\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .then(resPipe.log)\n            .catch(errorManager)\n        },\n\n        /**\n         * List the diffides for the event\n         */\n        listDiffides: function (eventId) {\n          return frispoApi\n            .listDiffides(eventId)\n            .then(resPipe.parseResponse)\n            .then(resPipe.camelize)\n            .then(resPipe.injectEventCardsDefaults)\n            .then(resPipe.updateDiffides)\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .then(resPipe.log)\n            .catch(errorManager)\n        },\n\n        /**\n         * List the squalifications for the event\n         */\n        listSqualifications: function (eventId) {\n          return frispoApi\n            .listSqualifications(eventId)\n            .then(resPipe.parseResponse)\n            .then(resPipe.camelize)\n            .then(resPipe.injectEventCardsDefaults)\n            .then(resPipe.updateSqualifications)\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .then(resPipe.log)\n            .catch(errorManager)\n        },\n\n        /**\n         * Translate data from an event form into an eventData object\n         * @param  {Object} formData The form input\n         * @return {Promise}         A promise fulfilled with the eventData object\n         */\n        form2Event: function (formData) {\n          var eventData = {};\n          var dateRange = utils.str2Date(formData.dates);\n          if(angular.isDefined(formData.name)) eventData.even_name = formData.name;\n          if(angular.isDefined(formData.desc)) eventData.even_description = formData.desc;\n          if(angular.isDefined(formData.email)) eventData.even_email = formData.email;\n          if(angular.isDefined(formData.address)) eventData.even_address = formData.address;\n          if(angular.isDefined(formData.type)) eventData.even_type = '' + formData.type;\n          if(angular.isDefined(formData.organizer)) eventData.even_organize_by = formData.organizer;\n          if(angular.isDefined(formData.formula)) eventData.even_formula = '' + formData.formula;\n          if(angular.isDefined(formData.telephone)) eventData.even_mobile_phone = formData.telephone;\n          if(angular.isDefined(formData.yellowPoints)) eventData.even_yellow_points = formData.yellowPoints;\n          if(angular.isDefined(formData.redPoints)) eventData.even_red_points = formData.redPoints;\n          if(angular.isDefined(formData.yellowDiffide)) eventData.even_yellow_diffide = formData.yellowDiffide;\n          if(angular.isDefined(formData.yellowDiffide2)) eventData.even_yellow_diffide2 = formData.yellowDiffide2;\n          if(angular.isArray(dateRange) && dateRange.length > 0 && dateRange[0]) eventData.even_date_start = dateRange[0];\n          if(angular.isArray(dateRange) && dateRange.length > 1 && dateRange[1]) eventData.even_date_end = dateRange[1];\n          if(formData.region && formData.region.regiId) eventData.regi_id = formData.region.regiId;\n          // TODO: remove this line: it's a mock\n          else eventData.regi_id = 1;\n          if(formData.currentDay && formData.currentDay.matcDayId) eventData.even_day_active = formData.currentDay.matcDayId;\n          return $q.resolve(eventData);\n        }\n\n      };\n\n      return events;\n   });\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .run(runBlock);\n\n  /** @ngInject */\n  function runBlock(\n    $rootScope,\n    uiState,\n    defaultBodyClasses,\n    models,\n    users\n  ) {\n      // Bind the uiState to $rootScope as it's used in index.html\n      $rootScope.uiState = uiState;\n\n      // On state change\n      var stateChangeSuccess = $rootScope.$on('$stateChangeSuccess', function (event, toState) {\n        var pms = toState.params || {};\n        uiState.bodyClasses = pms.bodyClasses || defaultBodyClasses;\n      });\n\n      // Update user info (if logged in)\n      if(models.currentUser && models.currentUser.userToken){\n        users.info();\n      }\n\n      // Destroy watchers\n      $rootScope.$on('$destroy', function() {\n        stateChangeSuccess();\n      });\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .config(routerConfig);\n\n  /** @ngInject */\n  function routerConfig($stateProvider, $urlRouterProvider) {\n    var requireLoggedIn = function ($timeout, $state, models) {\n      if(!models.currentUser || !models.currentUser.userToken){\n        $timeout(function() {\n          $state.go('main.access');\n        });\n      }\n    };\n\n    $stateProvider\n      .state('main', {\n        abstract: true,\n        templateUrl: 'app/pages/main/main.html'\n      })\n      .state('main.admin', {\n        abstract: true,\n        templateUrl: 'app/pages/admin/admin.html',\n        onEnter: requireLoggedIn\n      })\n      .state('main.access', {\n        url: '/',\n        templateUrl: 'app/pages/access/access.html',\n        controller: 'AccessController',\n        controllerAs: 'vm'\n      })\n      .state('main.admin.profile', {\n        url: '/profile',\n        templateUrl: 'app/pages/profile/profile.html',\n        controller: 'ProfileController',\n        controllerAs: 'vm',\n        onEnter: requireLoggedIn\n      })\n      .state('main.admin.createEvent', {\n        url: '/create-event',\n        templateUrl: 'app/pages/createEvent/createEvent.html',\n        controller: 'CreateEventController',\n        controllerAs: 'vm',\n        onEnter: requireLoggedIn\n      })\n      .state('main.admin.events', {\n        url: '/events',\n        templateUrl: 'app/pages/events/events.html',\n        controller: 'EventsController',\n        controllerAs: 'vm',\n        onEnter: requireLoggedIn\n      })\n      .state('main.admin.teams', {\n        url: '/teams',\n        templateUrl: 'app/pages/teams/teams.html',\n        controller: 'TeamsController',\n        controllerAs: 'vm',\n        onEnter: requireLoggedIn\n      })\n      .state('main.admin.players', {\n        url: '/players',\n        templateUrl: 'app/pages/players/players.html',\n        controller: 'PlayersController',\n        controllerAs: 'vm',\n        onEnter: requireLoggedIn\n      })\n      .state('main.admin.calendar', {\n        url: '/calendar',\n        templateUrl: 'app/pages/calendar/calendar.html',\n        controller: 'CalendarController',\n        controllerAs: 'vm',\n        onEnter: requireLoggedIn\n      })\n      .state('main.admin.scoreboard', {\n        url: '/scoreboard',\n        templateUrl: 'app/pages/scoreboard/scoreboard.html',\n        controller: 'ScoreboardController',\n        controllerAs: 'vm',\n        onEnter: requireLoggedIn\n      })\n      .state('main.admin.scorers', {\n        url: '/scorers',\n        templateUrl: 'app/pages/scorers/scorers.html',\n        controller: 'ScorersController',\n        controllerAs: 'vm',\n        onEnter: requireLoggedIn\n      })\n      .state('main.admin.press', {\n        url: '/press',\n        templateUrl: 'app/pages/press/press.html',\n        controller: 'PressController',\n        controllerAs: 'vm',\n        onEnter: requireLoggedIn\n      })\n      .state('main.admin.invitations', {\n        url: '/invitations',\n        templateUrl: 'app/pages/invitations/invitations.html',\n        controller: 'InvitationsController',\n        controllerAs: 'vm',\n        onEnter: requireLoggedIn\n      })\n      .state('main.admin.disciplinary', {\n        url: '/disciplinary',\n        templateUrl: 'app/pages/disciplinary/disciplinary.html',\n        controller: 'DisciplinaryController',\n        controllerAs: 'vm',\n        onEnter: requireLoggedIn\n      })\n      .state('main.admin.managerEvents', {\n        url: '/manager-events',\n        templateUrl: 'app/pages/managerEvents/managerEvents.html',\n        controller: 'ManagerEventsController',\n        controllerAs: 'vm',\n        onEnter: requireLoggedIn\n      })\n      .state('main.admin.managerMatches', {\n        url: '/manager-matches',\n        templateUrl: 'app/pages/managerMatches/managerMatches.html',\n        controller: 'ManagerMatchesController',\n        controllerAs: 'vm',\n        onEnter: requireLoggedIn\n      })\n      .state('main.login', {\n        url: '/login',\n        templateUrl: 'app/pages/login/login.html',\n        controller: 'LoginController',\n        controllerAs: 'vm',\n        params: {\n          bodyClasses: 'hold-transition login-page'\n        },\n        onEnter: function ($timeout, $state, uiState) {\n          if(uiState.loggedIn){\n            $timeout(function () {\n              $state.go('main.access');\n            })\n          }\n        }\n      })\n      .state('main.register', {\n        url: '/register',\n        templateUrl: 'app/pages/register/register.html',\n        controller: 'RegisterController',\n        controllerAs: 'vm',\n        params: {\n          bodyClasses: 'hold-transition register-page'\n        },\n        onEnter: function ($timeout, $state, uiState) {\n          if(uiState.loggedIn){\n            $timeout(function () {\n              $state.go('main.access');\n            })\n          }\n        }\n      })\n      .state('main.logout', {\n        url: '/logout',\n        onEnter: function($timeout, users) {\n          $timeout(function () {\n            users.logout();\n          })\n        }\n      });\n    $urlRouterProvider.otherwise('/');\n  }\n\n})();\n\n/* global malarkey:false, moment:false */\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .constant('malarkey', malarkey)\n    .constant('moment', moment)\n    .constant('defaultBodyClasses', 'skin-green fixed sidebar-mini')\n    .constant('provisioningApiUrl', 'https://api.frispo.it/api/provisioning/1.0.0/frispo/base/0/users')\n    .constant('eventsApiUrl', 'https://api.frispo.it/api/events/1.0.0/frispo/base/0')\n    .constant('teamsApiUrl', 'https://api.frispo.it/api/teams/1.0.0/football/base/0')\n    .constant('pressApiUrl', 'https://api.frispo.it/api/press/1.0.0/frispo/base/0')\n    .constant('matchesApiUrl', 'https://api.frispo.it/api/matches/1.0.0/football/base/0')\n    .constant('cardsApiUrl', 'https://api.frispo.it/api/cards/1.0.0/football/base/0')\n    .constant('scorersApiUrl', 'https://api.frispo.it/api/scorers/1.0.0/football/base/0')\n    .constant('rankingApiUrl', 'https://api.frispo.it/api/ranking/1.0.0/football/base/0')\n    .constant('userApiUrl', 'https://api.frispo.it/api/users/1.0.0/frispo/base/0')\n    .constant('authorization', 'Bearer 384d9a07-2c10-3999-9053-74778a0102dd')\n    .constant('anonymousToken', 'CE6B7FD1B38E8395A382A715A6162web');\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .config(config);\n\n  /** @ngInject */\n  function config($logProvider, toastrConfig, $animateProvider, $locationProvider, ezfbProvider) {\n    // Enable log\n    $logProvider.debugEnabled(true);\n\n    // Animate only elements with class \"animate\"\n    $animateProvider.classNameFilter(/animate/);\n\n    // Set options for toastr\n    toastrConfig.allowHtml = true;\n    toastrConfig.timeOut = 10000;\n    toastrConfig.positionClass = 'toast-top-center';\n    toastrConfig.preventDuplicates = true;\n    toastrConfig.progressBar = false;\n\n    //Removes '#' from the URL\n    $locationProvider.html5Mode(true);\n    $locationProvider.hashPrefix('!');\n\n    // Configure facebook\n    ezfbProvider.setLocale('it_IT');\n    ezfbProvider.setInitParams({\n      appId: '1025958327498737'\n    });\n  }\n\n})();\n\nangular.module(\"frispo\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/components/frispoFooter/frispoFooter.html\",\"<footer class=main-footer><div class=\\\"pull-right hidden-xs\\\"><b>Version</b> 1.0.0</div><strong>Copyright © 2014-2016 <a href=http://andreaciaccia.it>Andrea Ciaccia</a>.</strong> All rights reserved.</footer>\");\n$templateCache.put(\"app/components/frispoHeader/frispoHeader.html\",\"<header class=\\\"main-header frispo-header\\\"><a ui-sref=main.admin.events class=logo><!-- mini logo for sidebar mini 50x50 pixels --> <span class=logo-mini><img src=/assets/images/logo-64.png></span><!-- logo for regular state and mobile devices --> <span class=logo-lg><img src=/assets/images/logo-title-64.png></span></a><nav class=\\\"navbar navbar-static-top\\\" role=navigation><!-- Sidebar toggle button--> <a href=# class=sidebar-toggle data-toggle=offcanvas role=button><span class=sr-only>Toggle navigation</span> </a><!-- Navbar Right Menu --><div class=navbar-custom-menu><ul class=\\\"nav navbar-nav\\\"><li class=\\\"dropdown user user-menu\\\"><a href=# class=dropdown-toggle data-toggle=dropdown aria-expanded=false><span class=hidden-xs>{{ header.models.currentUser.displayName }}</span></a><ul class=dropdown-menu><!-- User image --><li class=user-header><img src=\\\"{{ header.models.currentUser.image || \\'/assets/images/logo-64.png\\' }}\\\" ng-class=\\\"{\\'default-user-img\\': !header.models.currentUser.image}\\\" class=img-circle alt=\\\"User Image\\\"><p>{{ header.models.currentUser.displayName }}</p></li><!-- Menu Footer--><li class=user-footer><div class=pull-left><a ui-sref=main.admin.profile class=\\\"btn btn-default btn-flat\\\">Profile</a></div><div class=pull-right><a ui-sref=main.logout class=\\\"btn btn-default btn-flat\\\">Sign out</a></div></li></ul></li></ul></div></nav></header>\");\n$templateCache.put(\"app/components/frispoSidebar/frispoSidebar.html\",\"<div class=main-sidebar><!-- Inner sidebar --><div class=sidebar><!-- Sidebar Menu --><ul class=sidebar-menu><!-- SECTION Main Menu --><li class=header>Main Menu</li><!-- Eventi --><li class=treeview><a href=#><i class=\\\"fa fa-star\\\"></i> <span>Eventi</span> <i class=\\\"fa fa-angle-left pull-right\\\"></i></a><ul class=\\\"treeview-menu menu-open\\\" style=\\\"display: block\\\"><!-- Crea Evento --><li ng-class=\\\"{active: sidebar.state.current.name === \\'main.admin.createEvent\\'}\\\"><a ui-sref=main.admin.createEvent><i class=\\\"fa fa-circle-o\\\"></i> Crea evento</a></li><!-- Visualizza Eventi --><li ng-class=\\\"{active: sidebar.state.current.name === \\'main.admin.events\\'}\\\"><a ui-sref=main.admin.events><i class=\\\"fa fa-circle-o\\\"></i> Visualizza eventi</a></li></ul></li><!-- !Eventi --><!-- Squadre & Giocatori --><li class=treeview><a href=#><i class=\\\"fa fa-futbol-o\\\" aria-hidden=true></i> <span>Squadre &amp; Giocatori</span> <i class=\\\"fa fa-angle-left pull-right\\\"></i></a><ul class=\\\"treeview-menu menu-open\\\" style=\\\"display: block\\\"><!-- Squadre --><li ng-class=\\\"{active: sidebar.state.current.name === \\'main.admin.teams\\'}\\\"><a ui-sref=main.admin.teams><i class=\\\"fa fa-circle-o\\\"></i> Squadre</a></li><!-- Giocatori --><li ng-class=\\\"{active: sidebar.state.current.name === \\'main.admin.players\\'}\\\"><a ui-sref=main.admin.players><i class=\\\"fa fa-circle-o\\\"></i> Giocatori</a></li></ul></li><!-- !Squadre & Giocatori --><!-- Calendario & Partite --><li class=treeview ng-class=\\\"{active: sidebar.state.current.name === \\'main.admin.calendar\\'}\\\"><a ui-sref=main.admin.calendar><i class=\\\"fa fa-calendar\\\" aria-hidden=true></i> <span>Calendario &amp; Partite</span></a></li><!-- !Calendario & Partite --><!-- Classifica --><li class=treeview ng-class=\\\"{active: sidebar.state.current.name === \\'main.admin.scoreboard\\'}\\\"><a ui-sref=main.admin.scoreboard><i class=\\\"fa fa-trophy\\\" aria-hidden=true></i> <span>Classifica</span></a></li><!-- !Classifica --><!-- Marcatori --><li class=treeview ng-class=\\\"{active: sidebar.state.current.name === \\'main.admin.scorers\\'}\\\" can=scorers><a ui-sref=main.admin.scorers><i class=\\\"fa fa-trophy\\\" aria-hidden=true></i> <span>Marcatori</span></a></li><!-- !Marcatori --><!-- !SECTION Main Menu --><!-- SECTION Dirigente --><li class=header can=guest>Dirigente</li><!-- Eventi dirigente --><li class=treeview ng-class=\\\"{active: sidebar.state.current.name === \\'main.admin.manager_events\\'}\\\" can=guest><a ui-sref=main.admin.managerEvents><i class=\\\"fa fa-newspaper-o\\\"></i> <span>Eventi</span></a></li><!-- !Eventi dirigente --><!-- Partite --><li class=treeview ng-class=\\\"{active: sidebar.state.current.name === \\'main.admin.manager_matches\\'}\\\" can=guest><a ui-sref=main.admin.managerMatches><i class=\\\"fa fa-bolt\\\"></i> <span>Partite</span></a></li><!-- !Partite --><!-- SECTION Amministra --><li class=header can=useradmin>Amministra</li><!-- Dirigenti --><li class=treeview ng-class=\\\"{active: sidebar.state.current.name === \\'main.admin.invitations\\'}\\\" can=useradmin><a ui-sref=main.admin.invitations><i class=\\\"fa fa-newspaper-o\\\"></i> <span>Dirigenti</span></a></li><!-- !Dirigenti --><!-- !SECTION Amministra --><!-- SECTION Utili --><li class=header can=discipline>Utili</li><!-- Disciplinare --><li class=treeview ng-class=\\\"{active: sidebar.state.current.name === \\'main.admin.disciplinary\\'}\\\" can=discipline><a ui-sref=main.admin.disciplinary><i class=\\\"fa fa-bolt\\\"></i> <span>Disciplinare</span></a></li><!-- !Disciplinare --><!-- Comunicati --><li class=treeview ng-class=\\\"{active: sidebar.state.current.name === \\'main.admin.press\\'}\\\" can=press><a ui-sref=main.admin.press><i class=\\\"fa fa-newspaper-o\\\"></i> <span>Comunicati</span></a></li><!-- !Comunicati --><!-- !SECTION Utili --><!-- SECTION Support --><li class=header>Support</li><!-- Documentation --><li class=treeview ng-class=\\\"{active: sidebar.state.current.name === \\'main.admin.documentation\\'}\\\"><a href=http://frispo.it/documentation/documentation/index.html target=_blank><i class=\\\"fa fa-info\\\" aria-hidden=true></i> <span>Documentation</span></a></li><!-- !Documentation --><!-- Contact Us --><li class=treeview ng-class=\\\"{active: sidebar.state.current.name === \\'main.admin.contact\\'}\\\"><a href=mailto:info@frispo.it><i class=\\\"fa fa-envelope\\\" aria-hidden=true></i> <span>Contact Us</span></a></li><!-- !Contact Us --><!-- !SECTION Support --></ul><!-- /.sidebar-menu --></div><!-- /.sidebar --></div><!-- /.main-sidebar -->\");\n$templateCache.put(\"app/pages/access/access.html\",\"<div class=access><div class=spinner-wrapper><i class=\\\"spinner fa fa-sun-o fa-spin\\\"></i></div></div>\");\n$templateCache.put(\"app/pages/admin/admin.html\",\"<div class=wrapper><frispo-header></frispo-header><frispo-sidebar></frispo-sidebar><div class=content-wrapper><div ui-view></div></div><frispo-footer></frispo-footer></div>\");\n$templateCache.put(\"app/pages/calendar/calendar.html\",\"<div class=calendar><section class=content-header><h1>Calendario <small>incontri</small></h1></section><section class=content><div class=row><div class=col-xs-12><div class=\\\"box box-success\\\"><div class=box-header><div class=row><div class=\\\"col-sm-4 col-md-3 col-lg-2\\\"><div class=form-group><label for=selectEvent>Seleziona l\\'evento</label><select id=selectEvent ng-model=vm.models.currentEvent name=event class=form-control ng-options=\\\"event as event.evenName for event in vm.models.events track by event.evenId\\\" ng-change=vm.updateCurrentEvent()></select></div></div><div class=\\\"col-sm-4 col-md-3 col-lg-2\\\"><div class=form-group><label for=selectDay>Seleziona la giornata</label><select id=selectDay ng-model=vm.models.currentEvent.currentDay name=day class=form-control ng-options=\\\"day as (day.matcDayName) for day in (vm.models.currentEvent.matchDays) track by day.matcDayId\\\" ng-change=vm.updateMatchDay()></select></div></div><div class=\\\"col-sm-4 col-md-6 col-lg-8\\\"><div class=pull-right><a role=button class=\\\"btn btn-success form-control-button\\\" ng-click=vm.createNewDay()>Crea nuova giornata</a> <a role=button class=\\\"btn btn-success form-control-button\\\" ng-click=vm.createNewMatch()>Crea nuova partita</a></div></div></div></div><div class=\\\"box-body table-responsive relative\\\" ng-show=vm.models.currentEvent.currentDay.matches><table class=table><tr><th>Squadra Casa</th><th>Squadra Ospite</th><th>Goal Casa</th><th>Goal Ospiti</th><th>Data Partita</th><th>Ora</th><th>Indirizzo</th><th ng-if=\\\"vm.models.currentEvent.evenType == 1\\\">Girone</th><th>Giocata</th><th></th></tr><tr ng-repeat-start=\\\"match in vm.models.currentEvent.currentDay.matches\\\" match-show=match></tr><tr ng-repeat-end match-edit=match></tr></table><div ng-show=vm.loading class=\\\"overlay absolute fill\\\"><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></div></div></div></div></section></div>\");\n$templateCache.put(\"app/pages/createEvent/createEvent.html\",\"<section class=create-event><section class=content-header><h1>Crea un evento <small>&nbsp;{{ vm.wizard | wizardTextProgress }}</small></h1><wizard-progress wizard=vm.wizard></wizard-progress></section><section class=content><wizard-step-box step=1 wizard=vm.wizard title=\\\"Impostazioni evento\\\"><form id=formStep1 name=formStep1 ng-submit=vm.step1Done()><div class=row><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep1.name.$dirty && formStep1.name.$invalid}\\\"><label for=formStep1-name>Nome</label><input id=formStep1-name ng-model=vm.step1.name name=name type=text class=form-control placeholder=\\\"Inserisci il nome dell\\'evento\\\" required> <span ng-show=formStep1.name.$dirty ng-messages=formStep1.name.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep1.desc.$dirty && formStep1.desc.$invalid}\\\"><label for=formStep1-desc>Descrizione</label><textarea id=formStep1-desc rows=5 ng-model=vm.step1.desc name=desc class=form-control placeholder=\\\"Inserisci una descrizione dell\\'evento\\\"></textarea><span ng-show=formStep1.desc.$dirty ng-messages=formStep1.desc.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep1.address.$dirty && formStep1.address.$invalid}\\\"><label for=formStep1-address>Indirizzo</label><input id=formStep1-address ng-model=vm.step1.address name=address type=text class=form-control placeholder=\\\"Inserisci l\\'indirizzo principale dell\\'evento\\\" required> <span ng-show=formStep1.address.$dirty ng-messages=formStep1.address.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep1.type.$dirty && formStep1.type.$invalid}\\\"><label for=formStep1-type>Tipologia</label><select id=formStep1-type ng-init=\\\"vm.step1.type = 0\\\" ng-model=vm.step1.type name=type class=form-control><option ng-selected=\\\"vm.step1.type === 0\\\" value=0>Campionato italiana</option><option ng-selected=\\\"vm.step1.type === 1\\\" value=1>Torneo a gironi</option></select><span ng-show=formStep1.type.$dirty ng-messages=formStep1.type.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep1.organizer.$dirty && formStep1.organizer.$invalid}\\\"><label for=formStep1-organizer>Organizzatore</label><input id=formStep1-organizer ng-model=vm.step1.organizer name=organizer type=text class=form-control placeholder=\\\"Inserisci il nome dell\\'organizzatore\\\" required> <span ng-show=formStep1.organizer.$dirty ng-messages=formStep1.organizer.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep1.telephone.$dirty && formStep1.telephone.$invalid}\\\"><label for=formStep1-telephone>Telefono organizzatore</label><input id=formStep1-telephone ng-model=vm.step1.telephone name=telephone type=text class=form-control placeholder=\\\"Inserisci il numero di telefono dell\\'organizzatore\\\" required> <span ng-show=formStep1.telephone.$dirty ng-messages=formStep1.telephone.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep1.email.$dirty && formStep1.email.$invalid}\\\"><label for=formStep1-email>E-mail organizzatore</label><input id=formStep1-email ng-model=vm.step1.email name=email type=email class=form-control placeholder=\\\"Inserisci l\\'indirizzo e-mail dell\\'organizzatore\\\" required> <span ng-show=formStep1.email.$dirty ng-messages=formStep1.email.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span> <span ng-message=email>Inserire un indirizzo email valido</span></span></div><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep1.dates.$dirty && formStep1.dates.$invalid}\\\"><label for=formStep1-dates>Periodo</label><div class=input-group><div class=input-group-addon><i class=\\\"fa fa-calendar\\\"></i></div><input id=formStep1-dates ng-model=vm.step1.dates model=vm.step1.dates name=dates type=text class=form-control placeholder=\\\"Inserisci la data di inizio e la data di fine\\\" datepicker=range required></div><!-- /.input group --> <span ng-show=formStep1.dates.$dirty ng-messages=formStep1.dates.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep1.formula.$dirty && formStep1.formula.$invalid}\\\"><label for=formStep1-formula>Formula</label><select id=formStep1-formula ng-init=\\\"vm.step1.formula = 1\\\" ng-model=vm.step1.formula name=formula class=form-control placeholder=\\\"Inserisci la formula desiderata\\\"><option ng-selected=\\\"vm.step1.formula === 1\\\" value=1>Andata e ritorno</option><option ng-selected=\\\"vm.step1.formula === 0\\\" value=0>Solo andata</option></select><span ng-show=formStep1.formula.$dirty ng-messages=formStep1.formula.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><!-- /.col --></div><!-- /.row --><div class=pull-right><input type=submit class=\\\"btn btn-success\\\" value=Continua></div></form></wizard-step-box><wizard-step-box step=2 wizard=vm.wizard title=\\\"Aggiungi squadre\\\"><form id=formStep2 name=formStep2 ng-submit=vm.step2Done()><div class=row><div ng-if=\\\"vm.step1.type == \\'1\\' && !vm.forceManualRounds\\\"><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep2.roundType.$dirty && formStep2.roundType.$invalid}\\\"><label for=formStep2-roundType>Inserimento Gironi</label><select id=formStep2-roundType ng-init=\\\"vm.step2.roundType = 0\\\" ng-model=vm.step2.roundType name=roundType class=form-control ng-change=vm.initDefaultTeams()><option value=0>Manuale</option><option value=1>Automatico</option></select><span ng-show=formStep2.roundType.$dirty ng-messages=formStep2.roundType.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=col-sm-6 ng-if=\\\"vm.step2.roundType == 1\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep2.roundNumber.$dirty && formStep2.roundNumber.$invalid}\\\"><label for=formStep2-roundNumber>Numero di gironi</label><input id=formStep2-roundNumber ng-model=team.roundNumber name=roundNumber type=text class=form-control placeholder=\\\"Inserisci il numero di gironi dell\\'evento\\\" required> <span ng-show=formStep2.roundNumber.$dirty ng-messages=formStep2.roundNumber.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div></div><div class=clearfix></div><div class=col-sm-6 ng-repeat=\\\"team in vm.step2.teams\\\"><div class=\\\"panel panel-default\\\"><div class=panel-heading>Squadra {{ $index+1 }} <button tabindex=-1 type=button class=close ng-click=vm.removeTeam($index)><span>&times;</span></button></div><div class=panel-body><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep2[\\'name\\' + ($index+1)].$dirty && formStep2[\\'name\\' + ($index+1)].$invalid}\\\"><label for=formStep2-name{{$index+1}}>Nome</label><input id=formStep2-name{{$index+1}} ng-model=team.name name=name{{$index+1}} type=text class=form-control placeholder=\\\"Inserisci il nome della squadra\\\" required> <span ng-show=\\\"formStep2[\\'name\\' + ($index+1)].$dirty\\\" ng-messages=\\\"formStep2[\\'name\\' + ($index+1)].$error\\\" class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep2[\\'captain\\' + ($index+1)].$dirty && formStep2[\\'captain\\' + ($index+1)].$invalid}\\\"><label for=formStep2-captain{{$index+1}}>Capitano</label><input id=formStep2-captain{{$index+1}} ng-model=team.captain name=captain{{$index+1}} type=text class=form-control placeholder=\\\"Inserisci il nome del capitano della squadra\\\"> <span ng-show=\\\"formStep2[\\'captain\\' + ($index+1)].$dirty\\\" ng-messages=\\\"formStep2[\\'captain\\' + ($index+1)].$error\\\" class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep2[\\'phone\\' + ($index+1)].$dirty && formStep2[\\'phone\\' + ($index+1)].$invalid}\\\"><label for=formStep2-phone{{$index+1}}>Telefono</label><input id=formStep2-phone{{$index+1}} ng-model=team.phone name=phone{{$index+1}} type=text class=form-control placeholder=\\\"Inserisci il numero di telefono della squadra\\\"> <span ng-show=\\\"formStep2[\\'phone\\' + ($index+1)].$dirty\\\" ng-messages=\\\"formStep2[\\'phone\\' + ($index+1)].$error\\\" class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep2[\\'time\\' + ($index+1)].$dirty && formStep2[\\'time\\' + ($index+1)].$invalid}\\\"><label for=formStep2-time{{$index+1}}>Orario preferito</label><div class=input-group><div class=input-group-addon><i class=\\\"fa fa-clock-o\\\"></i></div><input id=formStep2-time{{$index+1}} ng-model=team.time name=time{{$index+1}} type=text class=form-control timepicker placeholder=\\\"Inserisci l\\'orario preferito della squadra per le partite\\\"></div><span ng-show=\\\"formStep2[\\'time\\' + ($index+1)].$dirty\\\" ng-messages=\\\"formStep2[\\'time\\' + ($index+1)].$error\\\" class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep2[\\'place\\' + ($index+1)].$dirty && formStep2[\\'place\\' + ($index+1)].$invalid}\\\"><label for=formStep2-place{{$index+1}}>Luogo preferito</label><input id=formStep2-place{{$index+1}} ng-model=team.place name=place{{$index+1}} type=text class=form-control placeholder=\\\"Inserisci il luogo preferito della squadra per le partite\\\"> <span ng-show=\\\"formStep2[\\'place\\' + ($index+1)].$dirty\\\" ng-messages=\\\"formStep2[\\'place\\' + ($index+1)].$error\\\" class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div><div ng-if=\\\"vm.step2.roundType == 0\\\" class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep2[\\'round\\' + ($index+1)].$dirty && formStep2[\\'round\\' + ($index+1)].$invalid}\\\"><label for=formStep2-round{{$index+1}}>Girone</label><select id=formStep2-round{{$index+1}} ng-init=\\\"team.round = \\'A\\'\\\" ng-model=team.round name=round{{$index+1}} class=form-control ng-options=\\\"roundName as roundName for roundName in vm.roundNames track by roundName\\\" required></select><span ng-show=\\\"formStep2[\\'round\\' + ($index+1)].$dirty\\\" ng-messages=\\\"formStep2[\\'round\\' + ($index+1)].$error\\\" class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div></div></div><div class=clearfix></div><div class=col-md-6><a role=button ng-click=vm.addTeam() class=\\\"btn btn-default btn-block\\\" ng-show=vm.step2.roundType>Aggiungi Squadra</a></div></div><div class=pull-right><a role=button class=\\\"btn btn-default\\\" ng-click=vm.wizard.prev()>Indietro</a> <input type=submit class=\\\"btn btn-success\\\" value=Continua></div></form></wizard-step-box><wizard-step-box step=3 wizard=vm.wizard title=Riepilogo><form id=formStep3 name=formStep3 ng-submit=vm.submitWizard()><div class=row><div class=col-md-6><div class=form-group><label>Nome</label><p class=form-control-static>{{ vm.step1.name }}</p></div><div class=form-group><label>Descrizione</label><p class=form-control-static>{{ vm.step1.desc }}</p></div><div class=form-group><label>Indirizzo</label><p class=form-control-static>{{ vm.step1.address }}</p></div><div class=form-group><label>Tipologia</label><p class=form-control-static>{{ vm.step1.type == \\'1\\' ? \\'Torneo a gironi\\' : \\'Campionato Italiana\\' }}</p></div><div class=form-group><label>Numero di squadre</label><p class=form-control-static>{{ vm.step2.teams.length }}</p></div></div><div class=col-md-6><div class=form-group><label>Organizzatore</label><p class=form-control-static>{{ vm.step1.organizer }}</p></div><div class=form-group><label>Telefono organizzatore</label><p class=form-control-static>{{ vm.step1.telephone }}</p></div><div class=form-group><label>E-mail organizzatore</label><p class=form-control-static>{{ vm.step1.email }}</p></div><div class=form-group><label>Perioto</label><p class=form-control-static>{{ vm.step1.dates }}</p></div><div class=form-group><label>Formula</label><p class=form-control-static>{{ vm.step1.formula == \\'0\\' ? \\'Solo andata\\' : \\'Andata e Ritorno\\' }}</p></div></div></div><div class=pull-right><a role=button class=\\\"btn btn-default\\\" ng-click=vm.wizard.prev()>Indietro</a> <input type=submit class=\\\"btn btn-success\\\" value=\\\"Crea partita automaticamente\\\"><a role=button class=\\\"btn btn-success\\\" ng-click=vm.manualSubmit()>Crea partita manualmente</a></div></form></wizard-step-box></section></section>\");\n$templateCache.put(\"app/pages/disciplinary/disciplinary.html\",\"<div class=disciplinary><section class=content-header><div class=row><div class=\\\"col-sm-4 col-md-3 col-lg-2 content-header\\\"><h1>Disciplinare</h1></div><div class=\\\"col-sm-4 col-md-6 col-lg-8\\\"></div><div class=\\\"col-sm-4 col-md-3 col-lg-2\\\"><div class=form-group><label for=selectEvent>Seleziona l\\'evento</label><select id=selectEvent ng-model=vm.models.currentEvent name=event class=form-control ng-options=\\\"event as event.evenName for event in vm.models.events track by event.evenId\\\" ng-change=vm.updateCurrentEvent()></select></div></div></div></section><section class=content><div class=row><div class=col-xs-12><div ng-repeat=\\\"cardConfig in vm.cardConfigs\\\" class=\\\"box {{ cardConfig.boxClass }}\\\"><div class=box-header><h4 class=box-title>{{ cardConfig.header }}</h4><div class=\\\"box-tools pull-right\\\"><button type=button class=\\\"btn btn-box-tool\\\" data-widget=collapse><i class=\\\"fa fa-minus\\\"></i></button></div></div><div class=\\\"box-body table-responsive relative\\\" ng-show=\\\"!vm.models.currentEvent[cardConfig.cardsKey] || vm.models.currentEvent[cardConfig.cardsKey].length === 0\\\"><strong>{{ cardConfig.emptyMessage }}</strong></div><div class=\\\"box-body table-responsive relative\\\" ng-show=\\\"vm.models.currentEvent[cardConfig.cardsKey].length > 0\\\"><table class=table><tr><th ng-repeat=\\\"field in cardConfig.fields\\\">{{ field.name }}</th><th></th></tr><tr ng-repeat-start=\\\"card in vm.models.currentEvent[cardConfig.cardsKey]\\\" card-show=card config=cardConfig></tr><tr ng-repeat-end card-edit=card config=cardConfig ng-if=cardConfig.controls.edit></tr></table><div ng-show=vm.loading class=\\\"overlay absolute fill\\\"><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></div></div></div></div></section></div>\");\n$templateCache.put(\"app/pages/events/events.html\",\"<div class=\\\"content events\\\"><div class=row><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\" ng-repeat=\\\"invitation in vm.models.currentUser.receivedInvitations\\\"><div class=\\\"box box-success box-solid\\\"><div class=box-header><div class=box-title>Invito ricevuto</div><div class=\\\"box-tools pull-right\\\"><button type=button class=\\\"btn btn-box-tool\\\" data-widget=remove><i class=\\\"fa fa-times\\\"></i></button></div></div><div class=box-body><p><strong>{{ invitation.mailInvitingmember }}</strong> ti ha invitato a gestire come <strong>Dirigente</strong> il suo evento &quot;<strong>{{ invitation.evenName }}</strong>&quot;</p><div class=pull-right><a role=button class=\\\"btn btn-danger\\\" ng-click=vm.declineInvitation(invitation)>Rifiuta</a> <a role=button class=\\\"btn btn-success\\\" ng-click=vm.acceptInvitation(invitation)>Accetta</a></div></div></div></div><div class=col-xs-12><div class=\\\"box box-default\\\" ng-show=\\\"vm.models.events.length === 0\\\"><div class=box-header><div class=box-title>Eventi</div></div><div class=box-body>Non sono stati trovati eventi. <a ui-sref=main.admin.createEvent>Creane uno ora</a>.</div></div><div class=\\\"box {{ tableFilter.boxClass }}\\\" ng-repeat=\\\"tableFilter in vm.tableFilters\\\" ng-show=\\\"(vm.models.events | filter:tableFilter.eventFilter).length > 0\\\"><div class=box-header><h3 class=box-title>{{ tableFilter.title }}</h3><div class=box-tools><div class=\\\"input-group input-group-sm\\\" style=\\\"width: 150px\\\"><input ng-model=tableFilter.searchFilter.search type=text name=table_search class=\\\"form-control pull-right\\\" placeholder=Search><div class=input-group-btn><button type=submit class=\\\"btn btn-default\\\"><i class=\\\"fa fa-search\\\"></i></button></div></div></div></div><!-- /.box-header --><div class=\\\"box-body table-responsive\\\"><table class=table ng-init=\\\"vm.formScopes = []\\\"><tbody><tr><th>Nome</th><th>Evento</th><th>Formula</th><th>Regione</th><th>Giornata corrente</th><th></th></tr><tr ng-repeat-start=\\\"event in vm.models.events | filter:tableFilter.eventFilter | filter:tableFilter.searchFilter\\\" event-show=event></tr><tr ng-repeat-end event-edit=event></tr></tbody></table></div><!-- /.box-body --></div><!-- /.box --></div></div></div>\");\n$templateCache.put(\"app/pages/invitations/invitations.html\",\"<div class=invitations><section class=content><div class=row><div class=col-xs-12><div class=\\\"box box-success\\\"><div class=box-header><div class=row><div class=\\\"col-sm-4 col-md-3 col-lg-2\\\"><h3>Dirigenti <small>invitati</small></h3></div><div class=\\\"col-sm-8 col-md-9 col-lg-10\\\"><a role=button class=\\\"btn btn-success form-control-button pull-right\\\" ng-click=vm.createNewInvitation()>Manda un nuovo invito</a></div></div></div><div class=\\\"box-body table-responsive relative\\\" ng-show=vm.models.currentUser.sentInvitations><table class=table><tr><th>E-mail dirigente</th><th>Evento</th><th>Data invito</th><th>Stato invito</th><th></th></tr><tr ng-repeat=\\\"invitation in vm.models.currentUser.sentInvitations\\\" invitation-show=invitation></tr></table><div ng-show=vm.loading class=\\\"overlay absolute fill\\\"><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></div></div></div></div></section></div>\");\n$templateCache.put(\"app/pages/login/login.html\",\"<div class=\\\"login login-box\\\"><div class=login-logo><img src=/assets/images/logo-title-64.png alt=Frispo></div><!-- /.login-logo --><div class=login-box-body><p class=login-box-msg>Sign in to start your session</p><form id=loginForm name=loginForm ng-submit=vm.login()><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': loginForm.email.$dirty && loginForm.email.$invalid}\\\"><input ng-model=vm.user.email name=email type=email class=form-control placeholder=Email required> <span class=\\\"glyphicon glyphicon-envelope form-control-feedback\\\"></span> <span ng-show=loginForm.email.$dirty ng-messages=loginForm.email.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span> <span ng-message=email>Inserire un indirizzo email valido</span></span></div><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': loginForm.password.$dirty && loginForm.password.$invalid}\\\"><input ng-model=vm.user.password name=password type=password class=form-control placeholder=Password required> <span class=\\\"glyphicon glyphicon-lock form-control-feedback\\\"></span> <span ng-show=loginForm.password.$dirty ng-messages=loginForm.password.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div><div class=row><!-- /.col --><div class=col-xs-12><button ng-disabled=loginForm.$invalid type=submit class=\\\"btn btn-primary btn-block btn-flat\\\">Sign In</button></div><!-- /.col --></div></form><div class=\\\"social-auth-links text-center\\\"><p>- OR -</p><a ng-click=vm.loginFacebook() class=\\\"btn btn-block btn-social btn-facebook btn-flat\\\"><i class=\\\"fa fa-facebook\\\"></i> Sign in using Facebook</a></div><!-- /.social-auth-links --> <a ui-sref=main.register class=text-center>Register a new membership</a></div><!-- /.login-box-body --></div>\");\n$templateCache.put(\"app/pages/main/main.html\",\"<div class=animate ui-view></div>\");\n$templateCache.put(\"app/pages/managerEvents/managerEvents.html\",\"<div class=\\\"content events\\\"><div class=row><div class=col-xs-12><div class=\\\"box box-default\\\" ng-show=\\\"vm.models.currentUser.managedEvents.length === 0\\\"><div class=box-header><div class=box-title>Eventi gestiti come dirigente</div></div><div class=box-body>Non gestisci alcun evento.</div></div><div class=\\\"box box-success\\\" ng-show=\\\"vm.models.currentUser.managedEvents.length > 0\\\"><div class=box-header><h3 class=box-title>Eventi gestiti come dirigente</h3><div class=box-tools><div class=\\\"input-group input-group-sm\\\" style=\\\"width: 150px\\\"><input ng-model=tableFilter.searchFilter.search type=text name=table_search class=\\\"form-control pull-right\\\" placeholder=Search><div class=input-group-btn><button type=submit class=\\\"btn btn-default\\\"><i class=\\\"fa fa-search\\\"></i></button></div></div></div></div><!-- /.box-header --><div class=\\\"box-body table-responsive\\\"><table class=table ng-init=\\\"vm.formScopes = []\\\"><tbody><tr><th>Nome</th><th>Evento</th><th>Formula</th><th>Regione</th><th>Giornata corrente</th><th></th></tr><tr ng-repeat=\\\"event in vm.models.currentUser.managedEvents\\\" event-show=event hide-controls=true></tr></tbody></table></div><!-- /.box-body --></div><!-- /.box --></div></div></div>\");\n$templateCache.put(\"app/pages/managerMatches/managerMatches.html\",\"<div class=calendar><section class=content-header><h1>Calendario <small>incontri</small></h1></section><section class=content><div class=row><div class=col-xs-12><div class=\\\"box box-success\\\"><div class=box-header><div class=row><div class=\\\"col-sm-4 col-md-3 col-lg-2\\\"><div class=form-group><label for=selectEvent>Seleziona l\\'evento</label><select id=selectEvent ng-model=vm.models.currentEvent name=event class=form-control ng-options=\\\"event as event.evenName for event in vm.models.currentUser.managedEvents track by event.evenId\\\" ng-change=vm.updateCurrentEvent()></select></div></div><div class=\\\"col-sm-4 col-md-3 col-lg-2\\\"><div class=form-group><label for=selectDay>Seleziona la giornata</label><select id=selectDay ng-model=vm.models.currentEvent.currentDay name=day class=form-control ng-options=\\\"day as (day.matcDayName) for day in (vm.models.currentEvent.matchDays) track by day.matcDayId\\\" ng-change=vm.updateMatchDay()></select></div></div></div></div><div class=\\\"box-body table-responsive relative\\\" ng-show=vm.models.currentEvent.currentDay.matches><table class=table><tr><th>Squadra Casa</th><th>Squadra Ospite</th><th>Goal Casa</th><th>Goal Ospiti</th><th>Data Partita</th><th>Ora</th><th>Indirizzo</th><th ng-if=\\\"vm.models.currentEvent.evenType == 1\\\">Girone</th><th>Giocata</th><th></th></tr><tr ng-repeat-start=\\\"match in vm.models.currentEvent.currentDay.matches\\\" manager-match-show=match></tr><tr ng-repeat-end manager-match-edit=match></tr></table><div ng-show=vm.loading class=\\\"overlay absolute fill\\\"><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></div></div></div></div></section></div>\");\n$templateCache.put(\"app/pages/players/players.html\",\"<div class=calendar><section class=content-header><h1>Giocatori</h1></section><section class=content><div class=row><div class=col-xs-12><div class=\\\"box box-success\\\"><div class=box-header><div class=row><div class=\\\"col-sm-4 col-md-3 col-lg-2\\\"><div class=form-group><label for=selectEvent>Seleziona l\\'evento</label><select id=selectEvent ng-model=vm.models.currentEvent name=event class=form-control ng-options=\\\"event as event.evenName for event in vm.models.events track by event.evenId\\\" ng-change=vm.updateCurrentEvent()></select></div></div><div class=\\\"col-sm-4 col-md-3 col-lg-2\\\"><div class=form-group><label for=selectDay>Seleziona la squadra</label><select id=selectDay ng-model=vm.models.currentEvent.currentTeam name=team class=form-control ng-options=\\\"team as (team.teamName) for team in (vm.models.currentEvent.teams) track by team.teamId\\\" ng-change=vm.updateTeam()></select></div></div><div class=\\\"col-sm-4 col-md-6 col-lg-8\\\"><div class=pull-right><a role=button class=\\\"btn btn-success form-control-button\\\" ng-click=vm.createNewPlayer()>Crea nuovo giocatore</a></div></div></div></div><div class=\\\"box-body table-responsive relative\\\" ng-show=vm.models.currentEvent.currentTeam.players><table class=table><tr><th>Nome</th><th>Cognome</th><th></th></tr><tr ng-repeat-start=\\\"player in vm.models.currentEvent.currentTeam.players\\\" player-show=player></tr><tr ng-repeat-end player-edit=player></tr></table><div ng-show=vm.loading class=\\\"overlay absolute fill\\\"><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></div></div></div></div></section></div>\");\n$templateCache.put(\"app/pages/press/press.html\",\"<div class=press><section class=content-header><h1>Comunicati</h1></section><section class=content><div class=row><div class=col-xs-12><div class=\\\"box box-success\\\"><div class=box-header><div class=row><div class=\\\"col-sm-4 col-md-3 col-lg-2\\\"><div class=form-group><label for=selectEvent>Seleziona l\\'evento</label><select id=selectEvent ng-model=vm.models.currentEvent name=event class=form-control ng-options=\\\"event as event.evenName for event in vm.models.events track by event.evenId\\\" ng-change=vm.updateCurrentEvent()></select></div></div><div class=\\\"col-sm-8 col-md-9 col-lg-10\\\"><a role=button class=\\\"btn btn-success form-control-button pull-right\\\" ng-click=vm.createNewPress()>Crea nuovo comunicato</a></div></div></div><div class=\\\"box-body table-responsive relative\\\" ng-show=vm.models.currentEvent.press><table class=table><tr><th>Nome</th><th>Stato</th><th>PDF</th><th>Data</th><th></th></tr><tr ng-repeat-start=\\\"press in vm.models.currentEvent.press\\\" press-show=press></tr><tr ng-repeat-end press-edit=press></tr></table><div ng-show=vm.loading class=\\\"overlay absolute fill\\\"><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></div></div></div></div></section></div>\");\n$templateCache.put(\"app/pages/profile/profile.html\",\"<div class=profile><section class=content-header><h1>Gestione Profilo</h1></section><section class=content><div class=row><div class=col-xs-12><div class=\\\"box box-success\\\"><div class=box-body><form name=user-edit ng-submit=vm.submit()><div class=row><div class=\\\"col-sm-5 col-md-4 col-lg-3\\\"><div class=form-group><label for=user-edit-type>Tipologia utente</label><select id=user-edit-type name=type ng-model=vm.form.type class=form-control ng-options=\\\"type.num as type.name for type in vm.userTypes\\\" required></select></div></div><div class=\\\"col-sm-5 col-md-4 col-lg-3\\\"><div class=form-group><label for=user-edit-subscription>Abbonamento</label><select id=user-edit-subscription name=subscription ng-model=vm.form.subscription class=form-control ng-options=\\\"subscription.num as subscription.name for subscription in vm.userSubscriptions\\\" required></select></div></div><div class=\\\"col-sm-2 col-md-2 col-lg-1\\\"><div class=form-group><label>&nbsp;</label><input type=submit value=Salva class=\\\"btn btn-success form-control\\\"></div></div></div></form><div ng-show=vm.loading class=\\\"overlay absolute fill\\\"><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></div></div></div></div><div class=row><!--<div class=\\\"col-xs-12\\\">--><div class=pricing-container><ul class=\\\"pricing-list bounce-invert\\\"><li><ul class=pricing-wrapper><li data-type=monthly class=is-visible><header class=pricing-header><h2>Basic</h2><div class=price><span class=currency>€</span> <span class=value>free</span></div></header><div class=pricing-body><ul class=pricing-features><li><em>-</em> Crea evento (1 attivo)</li><li><em>-</em> Gestisci Calendario e Risultati</li><li><em>-</em> Squadre e Giocatori</li><li><em>-</em> Inserisci risultati da App</li><li><em>-</em> Crea Evento da App</li><li><em>24/7</em> Support</li></ul></div><footer class=pricing-footer><a class=select href=#>1 mese Prova Gratuita</a></footer></li><li data-type=yearly class=is-hidden><header class=pricing-header><h2>Basic</h2><div class=price><span class=currency>€</span> <span class=value>free</span></div></header><div class=pricing-body><ul class=pricing-features><li><em>-</em> Crea evento (1 attivo)</li><li><em>-</em> Gestisci Calendario e Risultati</li><li><em>-</em> Squadre e Giocatori</li><li><em>-</em> Inserisci risultati da App</li><li><em>-</em> Crea Evento da App</li><li><em>24/7</em> Support</li></ul></div><footer class=pricing-footer><a class=select href=#>1 mese Prova Gratuita</a></footer></li></ul></li><li class=exclusive><ul class=pricing-wrapper><li data-type=monthly class=is-visible><header class=pricing-header><h2>Standard</h2><div class=price><span class=currency>€</span> <span class=value>9</span> <span class=duration>mo</span></div></header><div class=pricing-body><ul class=pricing-features><li><em>-</em> Crea evento</li><li><em>-</em> Gestisci Calendario e Risultati</li><li><em>-</em> Squadre e Giocatori</li><li><em>-</em> Inserisci risultati da App</li><li><em>-</em> Crea Evento da App</li><li><em>-</em> Gestisci marcatori</li><li><em>-</em> 3 Dirigenti Per Aiutarti A Inserire I Risultati</li><li><em>24/7</em> Support</li></ul></div><footer class=pricing-footer><a class=select href=#>1 mese Prova Gratuita</a></footer></li><li data-type=yearly class=is-hidden><header class=pricing-header><h2>Standard</h2><div class=price><span class=currency>€</span> <span class=value>9</span> <span class=duration>mo</span></div></header><div class=pricing-body><ul class=pricing-features><li><em>-</em> Crea evento</li><li><em>-</em> Gestisci Calendario e Risultati</li><li><em>-</em> Squadre e Giocatori</li><li><em>-</em> Inserisci risultati da App</li><li><em>-</em> Crea Evento da App</li><li><em>-</em> Gestisci marcatori</li><li><em>-</em> 3 Dirigenti Per Aiutarti A Inserire I Risultati</li></ul></div></li></ul></li><li><ul class=pricing-wrapper><li data-type=monthly class=is-visible><header class=pricing-header><h2>Premium</h2><div class=price><span class=currency>€</span> <span class=value>20</span> <span class=duration>mo</span></div></header><div class=pricing-body><ul class=pricing-features><li><em>-</em> Crea evento</li><li><em>-</em> Gestisci Calendario e Risultati</li><li><em>-</em> Squadre e Giocatori</li><li><em>-</em> Inserisci risultati da App</li><li><em>-</em> Crea Evento da App</li><li><em>-</em> Gestisci marcatori</li><li><em>-</em> 6 Dirigenti Per Aiutarti A Inserire I Risultati</li><li><em>-</em> Disciplinare</li><li><em>-</em> Comunicati Pdf</li></ul></div><footer class=pricing-footer><a class=select href=#>1 mese Prova Gratuita</a></footer></li><li data-type=yearly class=is-hidden><header class=pricing-header><h2>Premium</h2><div class=price><span class=currency>€</span> <span class=value>20</span> <span class=duration>mo</span></div></header><div class=pricing-body><ul class=pricing-features><li><em>-</em> Crea evento</li><li><em>-</em> Gestisci Calendario e Risultati</li><li><em>-</em> Squadre e Giocatori</li><li><em>-</em> Inserisci risultati da App</li><li><em>-</em> Crea Evento da App</li><li><em>-</em> Gestisci marcatori</li><li><em>-</em> 6 Dirigenti Per Aiutarti A Inserire I Risultati</li><li><em>-</em> Disciplinare</li><li><em>-</em> Comunicati Pdf</li></ul></div></li></ul></li></ul></div><!--</div>--></div></section></div>\");\n$templateCache.put(\"app/pages/register/register.html\",\"<div class=register-box><div class=register-logo><img src=/assets/images/logo-title-64.png alt=Frispo></div><div class=register-box-body><p class=login-box-msg>Register a new membership</p><form id=registerForm name=registerForm ng-submit=vm.register()><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': registerForm.email.$dirty && registerForm.email.$invalid}\\\"><input ng-model=vm.user.email name=email type=email class=form-control placeholder=Email required> <span class=\\\"glyphicon glyphicon-envelope form-control-feedback\\\"></span> <span ng-show=registerForm.email.$dirty ng-messages=registerForm.email.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span> <span ng-message=email>Inserire un indirizzo email valido</span></span></div><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': registerForm.password.$dirty && registerForm.password.$invalid}\\\"><input ng-model=vm.user.password name=password type=password class=form-control placeholder=Password required minlength=8> <span class=\\\"glyphicon glyphicon-lock form-control-feedback\\\"></span> <span ng-show=registerForm.password.$dirty ng-messages=registerForm.password.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span> <span ng-message=minlength>La password deve essere lunga almeno 8 caratteri</span></span></div><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': registerForm.retypePassword.$dirty && registerForm.retypePassword.$invalid}\\\"><input ng-model=vm.user.retypePassword name=retypePassword type=password class=form-control placeholder=\\\"Retype password\\\" required compare-to=vm.user.password> <span class=\\\"glyphicon glyphicon-log-in form-control-feedback\\\"></span> <span ng-show=registerForm.retypePassword.$dirty ng-messages=registerForm.retypePassword.$error class=help-block role=alert><span ng-message=compareTo>Le due password non coincidono</span></span></div><!-- <div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': registerForm.termsAgreement.$dirty && registerForm.termsAgreement.$invalid}\\\">\\n        <div class=\\\"checkbox icheck\\\">\\n          <label for=\\\"termsAgreement\\\">\\n            I agree to the <a href=\\\"#\\\">terms</a>\\n          </label>\\n          <div class=\\\"icheckbox_square-blue pull-right\\\" aria-checked=\\\"false\\\" aria-disabled=\\\"false\\\">\\n            <input id=\\\"termsAgreement\\\" ng-model=\\\"vm.user.termsAgreement\\\" name=\\\"termsAgreement\\\" type=\\\"checkbox\\\" required>\\n          </div>\\n        </div>\\n        <span ng-show=\\\"registerForm.termsAgreement.$dirty\\\" ng-messages=\\\"registerForm.termsAgreement.$error\\\" class=\\\"help-block\\\" role=\\\"alert\\\">\\n          <span ng-message=\\\"required\\\">E\\' obbligatorio accettare i termini</span>\\n        </span>\\n      </div> --><div class=row><!-- /.col --><div class=col-xs-12><button ng-disabled=registerForm.$invalid type=submit class=\\\"btn btn-primary btn-block btn-flat\\\">Register</button></div><!-- /.col --></div></form><div class=\\\"social-auth-links text-center\\\"><p>- OR -</p><a href=# class=\\\"btn btn-block btn-social btn-facebook btn-flat\\\"><i class=\\\"fa fa-facebook\\\"></i> Sign up using Facebook</a></div><a ui-sref=main.login class=text-center>I already have a membership</a></div><!-- /.form-box --></div><!-- /.register-box -->\");\n$templateCache.put(\"app/pages/scoreboard/scoreboard.html\",\"<div class=calendar><section class=content-header><h1>Classifica</h1></section><section class=content><div class=row><div class=col-xs-12><div class=\\\"box box-success\\\"><div class=box-header><div class=row><div class=\\\"col-sm-4 col-md-3 col-lg-2\\\"><div class=form-group><label for=selectEvent>Seleziona l\\'evento</label><select id=selectEvent ng-model=vm.models.currentEvent name=event class=form-control ng-options=\\\"event as event.evenName for event in vm.models.events track by event.evenId\\\" ng-change=vm.updateCurrentEvent()></select></div></div></div></div><div class=\\\"box-body table-responsive relative\\\" ng-if=\\\"vm.models.currentEvent.evenType === 0\\\"><table class=table><tr><th>Squadra</th><th>Punti</th><th>Partite giocate</th><th>Vittorie</th><th>Pareggi</th><th>Sconfitte</th><th>Goal fatti</th><th>Goal subiti</th><th>Disciplina</th></tr><tr ng-repeat=\\\"score in vm.models.currentEvent.scoreboard\\\"><td>{{ score.rankTeamName }}</td><td>{{ score.rankPoints }}</td><td>{{ score.rankNumberPlayed }}</td><td>{{ score.rankWon }}</td><td>{{ score.rankSame }}</td><td>{{ score.rankLose }}</td><td>{{ score.rankGoalScored }}</td><td>{{ score.rankGoalConceded}}</td><td>{{ score.rankFoul }}</td></tr></table><div ng-show=vm.loading class=\\\"overlay absolute fill\\\"><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></div><div class=\\\"box-body table-responsive relative\\\" ng-if=\\\"vm.models.currentEvent.evenType === 1\\\"><div ng-repeat=\\\"scoreboard in vm.models.currentEvent.scoreboard\\\"><h4>Girone {{ scoreboard.tournament[0].rankNameGroups }}</h4><table class=table><tr><th>Squadra</th><th>Punti</th><th>Partite giocate</th><th>Vittorie</th><th>Pareggi</th><th>Sconfitte</th><th>Goal fatti</th><th>Goal subiti</th><th>Disciplina</th></tr><tr ng-repeat=\\\"score in scoreboard.tournament\\\"><td>{{ score.rankTeamName }}</td><td>{{ score.rankNumberPlayed }}</td><td>{{ score.rankPoints }}</td><td>{{ score.rankWon }}</td><td>{{ score.rankSame }}</td><td>{{ score.rankLose }}</td><td>{{ score.rankGoalScored }}</td><td>{{ score.rankGoalConceded}}</td><td>{{ score.rankFoul }}</td></tr></table><div ng-show=vm.loading class=\\\"overlay absolute fill\\\"><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></div></div></div></div></div></section></div>\");\n$templateCache.put(\"app/pages/scorers/scorers.html\",\"<div class=scorers><section class=content-header><h1>Classifica marcatori</h1></section><section class=content><div class=row><div class=col-xs-12><div class=\\\"box box-success\\\"><div class=box-header><div class=row><div class=\\\"col-sm-4 col-md-3 col-lg-2\\\"><div class=form-group><label for=selectEvent>Seleziona l\\'evento</label><select id=selectEvent ng-model=vm.models.currentEvent name=event class=form-control ng-options=\\\"event as event.evenName for event in vm.models.events track by event.evenId\\\" ng-change=vm.updateCurrentEvent()></select></div></div></div></div><div class=\\\"box-body table-responsive relative\\\" ng-show=vm.models.currentEvent.scorers><table class=table><tr><th>Nome</th><th>Cognome</th><th>Squadra</th><th>Goal</th><th></th></tr><tr ng-repeat-start=\\\"scorer in vm.models.currentEvent.scorers\\\" scorer-show=scorer></tr><tr ng-repeat-end scorer-edit=scorer></tr></table><div ng-show=vm.loading class=\\\"overlay absolute fill\\\"><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></div></div></div></div></section></div>\");\n$templateCache.put(\"app/pages/teams/teams.html\",\"<div class=teams><section class=content-header><h1>Squadre <small>partecipanti</small></h1></section><section class=content><div class=row><div class=col-xs-12><div class=\\\"box box-success\\\"><div class=box-header><div class=row><div class=\\\"col-sm-4 col-md-3 col-lg-2\\\"><div class=form-group><label for=selectEvent>Seleziona l\\'evento</label><select id=selectEvent ng-model=vm.models.currentEvent name=event class=form-control ng-options=\\\"event as event.evenName for event in vm.models.events track by event.evenId\\\" ng-change=vm.updateCurrentEvent()></select></div></div><div class=\\\"col-sm-8 col-md-9 col-lg-10\\\"><a role=button class=\\\"btn btn-success form-control-button pull-right\\\" ng-click=vm.createNewTeam()>Crea nuova squadra</a></div></div></div><div class=\\\"box-body table-responsive relative\\\" ng-show=vm.models.currentEvent.teams><table class=table><tr><th>Nome</th><th>Capitano</th><th>Telefono</th><th>Orario Preferito</th><th>Luogo Preferito</th><th ng-if=\\\"vm.models.currentEvent.evenType == 1\\\">Girone</th><th></th></tr><tr ng-repeat-start=\\\"team in vm.models.currentEvent.teams\\\" team-show=team></tr><tr ng-repeat-end team-edit=team></tr></table><div ng-show=vm.loading class=\\\"overlay absolute fill\\\"><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></div></div></div></div></section></div>\");\n$templateCache.put(\"app/components/wizard/wizardStepBox/wizardStepBox.html\",\"<div class=\\\"wizard-step-box box\\\" ng-class=\\\"{\\'box-success\\': wizardStepBox.active, \\'box-default\\': !wizardStepBox.active}\\\"><div class=\\\"box-header with-border\\\"><h3 class=box-title>{{ wizardStepBox.title }}</h3><div class=\\\"box-tools pull-right hidden\\\"><button class=\\\"btn btn-box-tool\\\" data-widget=collapse><i class=\\\"fa fa-minus\\\"></i></button></div></div><!-- /.box-header --><div class=box-body><ng-transclude></ng-transclude></div><!-- /.box-body --><div ng-show=\\\"wizardStepBox.active && wizardStepBox.wizard.loading\\\" class=overlay><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></div><!-- /.box -->\");\n$templateCache.put(\"app/components/wizard/wizardProgress/wizardProgress.html\",\"<div class=wizard-progress><i ng-repeat=\\\"i in wizardProgress.range(wizardProgress.wizard.totalSteps) track by $index\\\" class=fa ng-class=\\\"{\\n      \\'fa-circle\\': $index+1 === wizardProgress.wizard.currentStep,\\n      \\'fa-circle-thin\\': $index+1 !== wizardProgress.wizard.currentStep\\n    }\\\">&nbsp;</i></div>\");\n$templateCache.put(\"app/pages/calendar/advancedEdit/advancedEdit.html\",\"<div class=modal-header><a role=button class=close ng-click=matchAdvEdit.cancel()><span aria-hidden=true>×</span></a><h3 class=text-center>{{matchAdvEdit.match.matcTeamA}} vs {{matchAdvEdit.match.matcTeamB}}</h3></div><div class=\\\"modal-body match-advanced-edit\\\"><form class=\\\"match-adv-edit-form relative\\\" name=matchAdvEditForm ng-submit=matchAdvEdit.submit()><div class=row><div class=\\\"col-xs-6 input-small-right\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchAdvEditForm.scoreA.$dirty && matchAdvEditForm.scoreA.$invalid}\\\"><label for=matchAdvEditForm-scoreA>Goal {{matchAdvEdit.match.matcTeamA}}</label><select id=matchAdvEditForm-scoreA ng-model=matchAdvEdit.form.scoreA ng-init=\\\"matchAdvEdit.form.scoreA = matchAdvEdit.match.matcScoreTeamA\\\" name=scoreA class=form-control ng-options=\\\"score as score for score in matchAdvEdit.scores track by score\\\" ng-change=matchAdvEdit.submit() required></select><span ng-show=matchAdvEditForm.scoreA.$dirty ng-messages=matchAdvEditForm.scoreA.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-xs-6 input-small-left\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchAdvEditForm.scoreB.$dirty && matchAdvEditForm.scoreB.$invalid}\\\"><label for=matchAdvEditForm-scoreB>Goal {{matchAdvEdit.match.matcTeamB}}</label><select id=matchAdvEditForm-scoreB ng-model=matchAdvEdit.form.scoreB ng-init=\\\"matchAdvEdit.form.scoreB = matchAdvEdit.match.matcScoreTeamB\\\" name=scoreB class=form-control ng-options=\\\"score as score for score in matchAdvEdit.scores track by score\\\" ng-change=matchAdvEdit.submit() required></select><span ng-show=matchAdvEditForm.scoreB.$dirty ng-messages=matchAdvEditForm.scoreB.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-xs-6 input-small-right\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchAdvEditForm.shootoutA.$dirty && matchAdvEditForm.shootoutA.$invalid}\\\"><label for=matchAdvEditForm-shootoutA>Rigori {{matchAdvEdit.match.matcTeamA}}</label><select id=matchAdvEditForm-shootoutA ng-model=matchAdvEdit.form.shootoutA ng-init=\\\"matchAdvEdit.form.shootoutA = matchAdvEdit.match.matcShootoutTeamA\\\" name=shootoutA class=form-control ng-options=\\\"score as score for score in matchAdvEdit.scores track by score\\\" ng-change=matchAdvEdit.submit() required></select><span ng-show=matchAdvEditForm.shootoutA.$dirty ng-messages=matchAdvEditForm.shootoutA.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-xs-6 input-small-left\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchAdvEditForm.shootoutB.$dirty && matchAdvEditForm.shootoutB.$invalid}\\\"><label for=matchAdvEditForm-shootoutB>Rigori {{matchAdvEdit.match.matcTeamB}}</label><select id=matchAdvEditForm-shootoutB ng-model=matchAdvEdit.form.shootoutB ng-init=\\\"matchAdvEdit.form.shootoutB = matchAdvEdit.match.matcShootoutTeamB\\\" name=shootoutB class=form-control ng-options=\\\"score as score for score in matchAdvEdit.scores track by score\\\" ng-change=matchAdvEdit.submit() required></select><span ng-show=matchAdvEditForm.shootoutB.$dirty ng-messages=matchAdvEditForm.shootoutB.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div></div></form><div class=row><div class=col-sm-6><scorers-box scorers=matchAdvEdit.match.matchPlayersTeamA team-name=matchAdvEdit.match.matcTeamA team-id=matchAdvEdit.match.matcTeamIdA match-id=matchAdvEdit.match.matcId scorers-key=matchPlayersTeamA autocomplete=matchAdvEdit.autocompleteA></scorers-box></div><div class=col-sm-6><scorers-box scorers=matchAdvEdit.match.matchPlayersTeamB team-name=matchAdvEdit.match.matcTeamB team-id=matchAdvEdit.match.matcTeamIdB match-id=matchAdvEdit.match.matcId scorers-key=matchPlayersTeamB autocomplete=matchAdvEdit.autocompleteB></scorers-box></div></div><div class=row><div class=col-sm-6><cards-box cards=matchAdvEdit.match.matchCardsTeamA team-name=matchAdvEdit.match.matcTeamA team-id=matchAdvEdit.match.matcTeamIdA match-id=matchAdvEdit.match.matcId cards-key=matchCardsTeamA autocomplete=matchAdvEdit.autocompleteA></cards-box></div><div class=col-sm-6><cards-box cards=matchAdvEdit.match.matchCardsTeamB team-name=matchAdvEdit.match.matcTeamB team-id=matchAdvEdit.match.matcTeamIdB match-id=matchAdvEdit.match.matcId cards-key=matchCardsTeamB autocomplete=matchAdvEdit.autocompleteB></cards-box></div></div></div><div class=modal-footer><a role=button class=\\\"btn btn-default pull-left\\\" ng-click=matchAdvEdit.cancel()>Annulla</a> <a role=button class=\\\"btn btn-success\\\" ng-click=matchAdvEdit.ok()>Chiudi</a></div>\");\n$templateCache.put(\"app/pages/calendar/create/create.html\",\"<form id=matchCreateForm class=\\\"match-create-form relative\\\" name=matchCreateForm ng-submit=matchCreate.ok()><div class=modal-header><a role=button class=close ng-click=matchCreate.cancel()><span aria-hidden=true>×</span></a><h3 class=modal-title>Crea nuova partita</h3></div><div class=modal-body><div class=row><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchCreateForm.teamA.$dirty && matchCreateForm.teamA.$invalid}\\\"><label for=matchCreateForm-teamA>Squadra Casa</label><select id=matchCreateForm-teamA ng-model=matchCreate.form.teamA name=teamA class=form-control ng-options=\\\"team as team.teamName for team in matchCreate.models.currentEvent.teams track by team.teamId\\\" required></select><span ng-show=matchCreateForm.teamA.$dirty ng-messages=matchCreateForm.teamA.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchCreateForm.teamB.$dirty && matchCreateForm.teamB.$invalid}\\\"><label for=matchCreateForm-teamB>Squadra Ospite</label><select id=matchCreateForm-teamB ng-model=matchCreate.form.teamB name=teamB class=form-control ng-options=\\\"team as team.teamName for team in matchCreate.models.currentEvent.teams track by team.teamId\\\" required></select><span ng-show=matchCreateForm.teamB.$dirty ng-messages=matchCreateForm.teamB.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchCreateForm.scoreA.$dirty && matchCreateForm.scoreA.$invalid}\\\"><label for=matchCreateForm-scoreA>Goal Casa</label><select id=matchCreateForm-scoreA ng-model=matchCreate.form.scoreA name=scoreA class=form-control ng-options=\\\"score as score for score in matchCreate.scores track by score\\\" required></select><span ng-show=matchCreateForm.scoreA.$dirty ng-messages=matchCreateForm.scoreA.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchCreateForm.scoreB.$dirty && matchCreateForm.scoreB.$invalid}\\\"><label for=matchCreateForm-scoreB>Goal Ospiti</label><select id=matchCreateForm-scoreB ng-model=matchCreate.form.scoreB name=scoreB class=form-control ng-options=\\\"score as score for score in matchCreate.scores track by score\\\" required></select><span ng-show=matchCreateForm.scoreB.$dirty ng-messages=matchCreateForm.scoreB.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchCreateForm.date.$dirty && matchCreateForm.date.$invalid}\\\"><label for=matchCreateForm-date>Data Partita</label><div class=input-group><div class=input-group-addon><i class=\\\"fa fa-calendar\\\"></i></div><input id=matchCreateForm-date ng-model=matchCreate.form.date model=matchCreate.form.date name=date type=text class=form-control datepicker></div></div></div><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchCreateForm.time.$dirty && matchCreateForm.time.$invalid}\\\"><label for=matchCreateForm-time>Ora</label><div class=input-group><div class=input-group-addon><i class=\\\"fa fa-clock-o\\\"></i></div><input id=matchCreateForm-time ng-model=matchCreate.form.time name=time type=text class=form-control timepicker></div></div></div><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchCreateForm.address.$dirty && matchCreateForm.address.$invalid}\\\"><label for=matchCreateForm-address>Indirizzo</label><input id=matchCreateForm-address ng-model=matchCreate.form.address name=address type=text class=form-control></div></div><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchCreateForm.played.$dirty && matchCreateForm.played.$invalid}\\\"><label for=matchCreateForm-played>Giocata</label><select id=matchCreateForm-played ng-model=matchCreate.form.played name=played class=form-control ng-options=\\\"played as played.label for played in [{value: 0, label: \\'no\\'}, {value: 1, label: \\'si\\'}] track by played.value\\\" required></select><span ng-show=matchCreateForm.played.$dirty ng-messages=matchCreateForm.played.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div></div><div ng-show=matchCreate.loading class=\\\"overlay absolute fill\\\"><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></div><div class=modal-footer><a role=button class=\\\"btn btn-outline pull-left\\\" ng-click=matchCreate.cancel()>Annulla</a> <input type=submit class=\\\"btn btn-outline\\\" value=\\\"Crea partita\\\"></div></form>\");\n$templateCache.put(\"app/pages/calendar/createDay/create.html\",\"<form id=dayCreateForm class=\\\"match-create-form relative\\\" name=dayCreateForm ng-submit=dayCreate.ok()><div class=modal-header><a role=button class=close ng-click=dayCreate.cancel()><span aria-hidden=true>×</span></a><h3 class=modal-title>Crea nuova giornata</h3></div><div class=modal-body><div class=row><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': dayCreateForm.name.$dirty && dayCreateForm.name.$invalid}\\\"><label for=dayCreateForm-name>Nome giornata</label><input id=dayCreateForm-name ng-model=dayCreate.form.name name=name type=text class=form-control required> <span ng-show=dayCreateForm.name.$dirty ng-messages=dayCreateForm.name.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': dayCreateForm.desc.$dirty && dayCreateForm.desc.$invalid}\\\"><label for=dayCreateForm-desc>Descrizione</label><input id=dayCreateForm-desc ng-model=dayCreate.form.desc name=desc type=text class=form-control> <span ng-show=dayCreateForm.desc.$dirty ng-messages=dayCreateForm.desc.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div></div><div ng-show=dayCreate.loading class=\\\"overlay absolute fill\\\"><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></div><div class=modal-footer><a role=button class=\\\"btn btn-outline pull-left\\\" ng-click=dayCreate.cancel()>Annulla</a> <input type=submit class=\\\"btn btn-outline\\\" value=\\\"Crea giornata\\\"></div></form>\");\n$templateCache.put(\"app/pages/calendar/destroy/destroy.html\",\"<div class=modal-header><a role=button class=close ng-click=matchDestroy.cancel()><span aria-hidden=true>×</span></a><h3 class=modal-title>Sei sicuro?</h3></div><div class=modal-body>Questa operazione <strong>non è reversibile</strong>.</div><div class=modal-footer><a role=button class=\\\"btn btn-outline pull-left\\\" ng-click=matchDestroy.cancel()>Annulla</a> <a role=button class=\\\"btn btn-outline\\\" ng-click=matchDestroy.ok()>Elimina partita</a></div>\");\n$templateCache.put(\"app/pages/calendar/edit/edit.html\",\"<tr><td colspan=10 class=\\\"hidden-row active\\\"><div id=match-edit-form-{{matchEdit.match.matcId}} class=\\\"accordion-body collapse match-edit-form-{{matchEdit.match.matcId}}\\\"><form class=\\\"match-edit-form relative\\\" name=matchEditForm ng-submit=matchEdit.submit()><div class=row><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchEditForm.teamA.$dirty && matchEditForm.teamA.$invalid}\\\"><label for=matchEditForm{{matchEdit.match.matcId}}-teamA>Modifica Squadra Casa</label><select id=matchEditForm{{matchEdit.match.matcId}}-teamA ng-model=matchEdit.form.teamA ng-init=\\\"matchEdit.form.teamA = { teamId: matchEdit.match.matcTeamIdA }\\\" name=teamA class=form-control ng-options=\\\"team as team.teamName for team in matchEdit.models.currentEvent.teams track by team.teamId\\\" required></select><span ng-show=matchEditForm.teamA.$dirty ng-messages=matchEditForm.teamA.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchEditForm.teamB.$dirty && matchEditForm.teamB.$invalid}\\\"><label for=matchEditForm{{matchEdit.match.matcId}}-teamB>Modifica Squadra Ospite</label><select id=matchEditForm{{matchEdit.match.matcId}}-teamB ng-model=matchEdit.form.teamB ng-init=\\\"matchEdit.form.teamB = { teamId: matchEdit.match.matcTeamIdB }\\\" name=teamB class=form-control ng-options=\\\"team as team.teamName for team in matchEdit.models.currentEvent.teams track by team.teamId\\\" required></select><span ng-show=matchEditForm.teamB.$dirty ng-messages=matchEditForm.teamB.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchEditForm.scoreA.$dirty && matchEditForm.scoreA.$invalid}\\\"><label for=matchEditForm{{matchEdit.match.matcId}}-scoreA>Modifica Goal Casa</label><select id=matchEditForm{{matchEdit.match.matcId}}-scoreA ng-model=matchEdit.form.scoreA ng-init=\\\"matchEdit.form.scoreA = matchEdit.match.matcScoreTeamA\\\" name=scoreA class=form-control ng-options=\\\"score as score for score in matchEdit.scores track by score\\\" required></select><span ng-show=matchEditForm.scoreA.$dirty ng-messages=matchEditForm.scoreA.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchEditForm.scoreB.$dirty && matchEditForm.scoreB.$invalid}\\\"><label for=matchEditForm{{matchEdit.match.matcId}}-scoreB>Modifica Goal Ospiti</label><select id=matchEditForm{{matchEdit.match.matcId}}-scoreB ng-model=matchEdit.form.scoreB ng-init=\\\"matchEdit.form.scoreB = matchEdit.match.matcScoreTeamB\\\" name=scoreB class=form-control ng-options=\\\"score as score for score in matchEdit.scores track by score\\\" required></select><span ng-show=matchEditForm.scoreB.$dirty ng-messages=matchEditForm.scoreB.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchEditForm.date.$dirty && matchEditForm.date.$invalid}\\\"><label for=matchEditForm{{matchEdit.match.matcId}}-date>Modifica Data Partita</label><div class=input-group><div class=input-group-addon><i class=\\\"fa fa-calendar\\\"></i></div><input id=matchEditForm{{matchEdit.match.matcId}}-date ng-model=matchEdit.form.date model=matchEdit.form.date ng-init=\\\"matchEdit.form.date = matchEdit.match.matcDateMatch\\\" name=date type=text class=form-control datepicker></div></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchEditForm.time.$dirty && matchEditForm.time.$invalid}\\\"><label for=matchEditForm{{matchEdit.match.matcId}}-time>Modifica Ora</label><div class=input-group><div class=input-group-addon><i class=\\\"fa fa-clock-o\\\"></i></div><input id=matchEditForm{{matchEdit.match.matcId}}-time ng-model=matchEdit.form.time ng-init=\\\"matchEdit.form.time = matchEdit.match.matcTime\\\" name=time type=text class=form-control timepicker></div></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchEditForm.address.$dirty && matchEditForm.address.$invalid}\\\"><label for=matchEditForm{{matchEdit.match.matcId}}-address>Modifica Indirizzo</label><input id=matchEditForm{{matchEdit.match.matcId}}-address ng-model=matchEdit.form.address ng-init=\\\"matchEdit.form.address = matchEdit.match.matcAddress\\\" name=address type=text class=form-control></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchEditForm.played.$dirty && matchEditForm.played.$invalid}\\\"><label for=matchEditForm{{matchEdit.match.matcId}}-played>Modifica Giocata</label><select id=matchEditForm{{matchEdit.match.matcId}}-played ng-model=matchEdit.form.played ng-init=\\\"matchEdit.form.played = {value: matchEdit.match.matcFlgPlay}\\\" name=played class=form-control ng-options=\\\"played as played.label for played in [{value: 0, label: \\'no\\'}, {value: 1, label: \\'si\\'}] track by played.value\\\" required></select><span ng-show=matchEditForm.played.$dirty ng-messages=matchEditForm.played.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div></div><div class=row><div class=col-xs-12><div class=pull-right><a role=button class=\\\"btn btn-default\\\" ng-click=matchEdit.cancel()>Annulla</a> <input type=submit value=Salva class=\\\"btn btn-success\\\"></div></div></div><div ng-show=matchEdit.loading class=\\\"overlay absolute fill\\\"><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></form></div></td></tr>\");\n$templateCache.put(\"app/pages/calendar/show/show.html\",\"<tr><td>{{ matchShow.match.matcTeamA }}</td><td>{{ matchShow.match.matcTeamB }}</td><td>{{ matchShow.match.matcScoreTeamA }}</td><td>{{ matchShow.match.matcScoreTeamB }}</td><td>{{ matchShow.match.matcDateMatchPretty }}</td><td>{{ matchShow.match.matcTime }}</td><td>{{ matchShow.match.matcAddress }}</td><td ng-if=\\\"matchShow.models.currentEvent.evenType == 1\\\">{{ matchShow.match.matcNameGroups }}</td><td>{{ matchShow.match.matcFlgPlay === 1 ? \\'si\\' : \\'no\\' }}</td><td><div class=\\\"pull-right no-opacity opacity-transition\\\" ng-class=\\\"{ \\'full-opacity\\': matchShow.showControls }\\\"><a role=button class=\\\"btn btn-sm btn-default\\\" ng-click=matchShow.advancedEdit() ng-show=\\\"matchShow.match.matcTeamIdA !== 0 && matchShow.match.matcTeamIdB !== 0\\\" can=updatematchfull><i class=\\\"fa fa-futbol-o\\\"></i> </a><a role=button class=\\\"btn btn-sm btn-default accordion-toggle\\\" data-toggle=collapse data-target=.match-edit-form-{{matchShow.match.matcId}}><i class=\\\"fa fa-pencil\\\"></i> </a><a role=button class=\\\"btn btn-sm btn-danger\\\" ng-click=matchShow.destroy()><i class=\\\"fa fa-trash\\\"></i></a></div></td></tr>\");\n$templateCache.put(\"app/pages/cardMatch/show/show.html\",\"<tr><td>{{ cardMatchShow.cardMatch.matcTeamA }} vs {{ cardMatchShow.cardMatch.matcTeamB }}</td><td ng-repeat=\\\"field in cardMatchShow.config.detailFields\\\"><form ng-if=cardMatchShow.config.controls.editDetail[field.key] class=\\\"cardMatch-edit-form relative no-padding\\\" name=cardMatchShowForm ng-submit=\\\"\\\"><select ng-if=\\\"cardMatchShow.config.controls.editDetail[field.key].type === \\'select\\'\\\" ng-model=cardMatchShow.form[field.key] ng-init=\\\"cardMatchShow.form[field.key] = { value: cardMatchShow.cardMatch[field.key] }\\\" name={{field.key}} class=\\\"form-control no-padding\\\" ng-options=\\\"opt as opt.name for opt in cardMatchShow.config.controls.editDetail[field.key].options track by opt.value\\\"><input ng-if=\\\"cardMatchShow.config.controls.editDetail[field.key].type === \\'text\\'\\\" ng-model=cardMatchShow.form[field.key] ng-init=\\\"cardMatchShow.form[field.key] = cardMatchShow.cardMatch[field.key]\\\" name={{field.key}} type=text class=form-control></select></form><span ng-if=!cardMatchShow.config.controls.editDetail[field.key]>{{ cardMatchShow.cardMatch[field.key] }}</span></td><td><div class=\\\"pull-right no-opacity opacity-transition\\\" ng-class=\\\"{ \\'full-opacity\\': cardMatchShow.showControls }\\\"><a ng-show=cardMatchShow.config.controls.editDetail role=button class=\\\"btn btn-sm btn-success\\\" ng-click=cardMatchShow.submit()>Salva </a><a role=button class=\\\"btn btn-sm btn-danger\\\" ng-click=cardMatchShow.destroy() ng-show=cardMatchShow.config.controls.deleteDetail><i class=\\\"fa fa-trash\\\"></i></a></div></td></tr>\");\n$templateCache.put(\"app/pages/cardMatch/destroy/destroy.html\",\"<div class=modal-header><a role=button class=close ng-click=cardMatchDestroy.cancel()><span aria-hidden=true>×</span></a><h3 class=modal-title>Sei sicuro?</h3></div><div class=modal-body>Questa operazione <strong>non è reversibile</strong>.</div><div class=modal-footer><a role=button class=\\\"btn btn-outline pull-left\\\" ng-click=cardMatchDestroy.cancel()>Annulla</a> <a role=button class=\\\"btn btn-outline\\\" ng-click=cardMatchDestroy.ok()>Elimina</a></div>\");\n$templateCache.put(\"app/pages/disciplinary/edit/edit.html\",\"<tr><td colspan=8 class=\\\"hidden-row active\\\"><div id=card-edit-form-{{cardEdit.card.cardId}} class=\\\"accordion-body collapse card-edit-form-{{cardEdit.card.cardId}}\\\"><table class=table style=\\\"background: transparent\\\"><tr><th>Partita</th><th ng-repeat=\\\"field in cardEdit.config.detailFields\\\">{{ field.name }}</th><th></th></tr><tr ng-repeat=\\\"cardMatch in cardEdit.card[cardEdit.config.cardMatchKey]\\\" card-match-show=cardMatch config=cardEdit.config card-match-player-id=cardEdit.card.playId></tr></table></div></td></tr>\");\n$templateCache.put(\"app/pages/disciplinary/show/show.html\",\"<tr><td ng-repeat=\\\"field in cardShow.config.fields\\\">{{ cardShow.card[field.key] }}</td><td><div class=\\\"pull-right no-opacity opacity-transition\\\" ng-class=\\\"{ \\'full-opacity\\': cardShow.showControls }\\\"><a ng-show=cardShow.config.controls.edit role=button class=\\\"btn btn-sm btn-default accordion-toggle\\\" data-toggle=collapse data-target=.card-edit-form-{{cardShow.card.cardId}}><i class=\\\"fa fa-pencil\\\"></i> </a><a ng-show=cardShow.config.controls.delete role=button class=\\\"btn btn-sm btn-danger\\\" ng-click=cardShow.destroy()><i class=\\\"fa fa-trash\\\"></i></a></div></td></tr>\");\n$templateCache.put(\"app/pages/events/destroy/destroy.html\",\"<div class=modal-header><a role=button class=close ng-click=eventDestroy.cancel()><span aria-hidden=true>×</span></a><h3 class=modal-title>Sei sicuro?</h3></div><div class=modal-body>Se elimini questo evento, verranno eliminati anche tutti dati relativi alle squadre e alle partite associate.<br>Questa operazione <strong>non è reversibile</strong>.</div><div class=modal-footer><a role=button class=\\\"btn btn-outline pull-left\\\" ng-click=eventDestroy.cancel()>Annulla</a> <a role=button class=\\\"btn btn-outline\\\" ng-click=eventDestroy.ok()>Elimina evento</a></div>\");\n$templateCache.put(\"app/pages/events/edit/edit.html\",\"<tr><td colspan=8 class=\\\"hidden-row active\\\"><div id=event-edit-form-{{eventEdit.event.evenId}} class=\\\"accordion-body collapse event-edit-form-{{eventEdit.event.evenId}}\\\"><form class=\\\"event-edit-form relative\\\" name=eventEditForm ng-submit=eventEdit.submit()><div class=row><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': eventEditForm.name.$dirty && eventEditForm.name.$invalid}\\\"><label for=eventEditForm{{eventEdit.event.evenId}}-name>Modifica Nome</label><input id=eventEditForm{{eventEdit.event.evenId}}-name ng-model=eventEdit.form.name ng-init=\\\"eventEdit.form.name = eventEdit.event.evenName\\\" name=name type=text class=form-control placeholder=\\\"Inserisci il nome dell\\'evento\\\" required> <span ng-show=eventEditForm.name.$dirty ng-messages=eventEditForm.name.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': eventEditForm.desc.$dirty && eventEditForm.desc.$invalid}\\\"><label for=eventEditForm{{eventEdit.event.evenId}}-desc>Modifica Descrizione</label><input id=eventEditForm{{eventEdit.event.evenId}}-desc ng-model=eventEdit.form.desc ng-init=\\\"eventEdit.form.desc = eventEdit.event.evenDescription\\\" name=desc type=text class=form-control placeholder=\\\"Inserisci una descrizione dell\\'evento\\\" required> <span ng-show=eventEditForm.desc.$dirty ng-messages=eventEditForm.desc.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': eventEditForm.currentDay.$dirty && eventEditForm.currentDay.$invalid}\\\"><label for=eventEditForm{{eventEdit.event.evenId}}-currentDay>Modifica Giornata Corrente</label><select id=eventEditForm{{eventEdit.event.evenId}}-currentDay ng-model=eventEdit.form.currentDay ng-init=\\\"eventEdit.form.currentDay = eventEdit.event.evenCurrentDay\\\" name=currentDay class=form-control ng-options=\\\"day as day.matcDayName for day in eventEdit.event.matchDays track by day.matcDayId\\\" required></select><span ng-show=eventEditForm.currentDay.$dirty ng-messages=eventEditForm.currentDay.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': eventEditForm.dates.$dirty && eventEditForm.dates.$invalid}\\\"><label for=eventEditForm{{eventEdit.event.evenId}}-dates>Modifica Periodo</label><div class=input-group><div class=input-group-addon><i class=\\\"fa fa-calendar\\\"></i></div><input id=eventEditForm{{eventEdit.event.evenId}}-dates ng-model=eventEdit.form.dates model=eventEdit.form.dates ng-init=\\\"eventEdit.form.dates = eventEdit.event.dates\\\" name=dates type=text class=form-control placeholder=\\\"Inserisci la data di inizio e la data di fine\\\" datepicker=range required></div><span ng-show=eventEditForm.dates.$dirty ng-messages=eventEditForm.dates.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': eventEditForm.address.$dirty && eventEditForm.address.$invalid}\\\"><label for=eventEditForm{{eventEdit.event.evenId}}-address>Modifica Indirizzo</label><input id=eventEditForm{{eventEdit.event.evenId}}-address ng-model=eventEdit.form.address ng-init=\\\"eventEdit.form.address = eventEdit.event.evenAddress\\\" name=address type=text class=form-control placeholder=\\\"Inserisci l\\'indirizzo dell\\'evento\\\" required> <span ng-show=eventEditForm.address.$dirty ng-messages=eventEditForm.address.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': eventEditForm.region.$dirty && eventEditForm.region.$invalid}\\\"><label for=eventEditForm{{eventEdit.event.evenId}}-region>Modifica Regione</label><select id=eventEditForm{{eventEdit.event.evenId}}-region ng-model=eventEdit.form.region ng-init=\\\"eventEdit.form.region = eventEdit.event.regions\\\" name=region class=form-control ng-options=\\\"region as region.regiName for region in eventEdit.models.regions track by region.regiId\\\" required></select><span ng-show=eventEditForm.region.$dirty ng-messages=eventEditForm.region.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': eventEditForm.telephone.$dirty && eventEditForm.telephone.$invalid}\\\"><label for=eventEditForm{{eventEdit.event.evenId}}-telephone>Modifica Telefono Organizzatore</label><input id=eventEditForm{{eventEdit.event.evenId}}-telephone ng-model=eventEdit.form.telephone ng-init=\\\"eventEdit.form.telephone = eventEdit.event.evenMobilePhone\\\" name=telephone type=text class=form-control placeholder=\\\"Inserisci il numero di telefono dell\\'organizzatore dell\\'evento\\\" required> <span ng-show=eventEditForm.telephone.$dirty ng-messages=eventEditForm.telephone.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': eventEditForm.email.$dirty && eventEditForm.email.$invalid}\\\"><label for=eventEditForm{{eventEdit.event.evenId}}-email>Modifica E-mail Organizzatore</label><input id=eventEditForm{{eventEdit.event.evenId}}-email ng-model=eventEdit.form.email ng-init=\\\"eventEdit.form.email = eventEdit.event.evenEmail\\\" name=email type=text class=form-control placeholder=\\\"Inserisci l\\'e-mail dell\\'organizzatore dell\\'evento\\\" required> <span ng-show=eventEditForm.email.$dirty ng-messages=eventEditForm.email.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\" can=discipline><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': eventEditForm.yellowPoints.$dirty && eventEditForm.yellowPoints.$invalid}\\\"><label for=eventEditForm{{eventEdit.event.evenId}}-yellowPoints>Punti disciplina ammonizioni</label><select id=eventEditForm{{eventEdit.event.evenId}}-yellowPoints ng-model=eventEdit.form.yellowPoints ng-init=\\\"eventEdit.form.yellowPoints = eventEdit.event.evenYellowPoints || 0\\\" name=yellowPoints class=form-control ng-options=\\\"yellowPoints as yellowPoints for yellowPoints in eventEdit.pointsOptions track by yellowPoints\\\" required></select><span ng-show=eventEditForm.yellowPoints.$dirty ng-messages=eventEditForm.yellowPoints.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\" can=discipline><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': eventEditForm.redPoints.$dirty && eventEditForm.redPoints.$invalid}\\\"><label for=eventEditForm{{eventEdit.event.evenId}}-redPoints>Punti disciplina espulsioni</label><select id=eventEditForm{{eventEdit.event.evenId}}-redPoints ng-model=eventEdit.form.redPoints ng-init=\\\"eventEdit.form.redPoints = eventEdit.event.evenRedPoints || 0\\\" name=redPoints class=form-control ng-options=\\\"redPoints as redPoints for redPoints in eventEdit.pointsOptions track by redPoints\\\" required></select><span ng-show=eventEditForm.redPoints.$dirty ng-messages=eventEditForm.redPoints.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\" can=discipline><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': eventEditForm.yellowDiffide.$dirty && eventEditForm.yellowDiffide.$invalid}\\\"><label for=eventEditForm{{eventEdit.event.evenId}}-yellowDiffide>Numero ammonizioni diffidato</label><select id=eventEditForm{{eventEdit.event.evenId}}-yellowDiffide ng-model=eventEdit.form.yellowDiffide ng-init=\\\"eventEdit.form.yellowDiffide = eventEdit.event.evenYellowDiffide || 0\\\" name=yellowDiffide class=form-control ng-options=\\\"yellowDiffide as yellowDiffide for yellowDiffide in eventEdit.pointsOptions track by yellowDiffide\\\" required></select><span ng-show=eventEditForm.yellowDiffide.$dirty ng-messages=eventEditForm.yellowDiffide.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\" can=discipline><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': eventEditForm.yellowDiffide2.$dirty && eventEditForm.yellowDiffide2.$invalid}\\\"><label for=eventEditForm{{eventEdit.event.evenId}}-yellowDiffide2>Numero ammonizioni diffidato dopo squalifica</label><select id=eventEditForm{{eventEdit.event.evenId}}-yellowDiffide2 ng-model=eventEdit.form.yellowDiffide2 ng-init=\\\"eventEdit.form.yellowDiffide2 = eventEdit.event.evenYellowDiffide2 || 0\\\" name=yellowDiffide2 class=form-control ng-options=\\\"yellowDiffide2 as yellowDiffide2 for yellowDiffide2 in eventEdit.pointsOptions track by yellowDiffide2\\\" required></select><span ng-show=eventEditForm.yellowDiffide2.$dirty ng-messages=eventEditForm.yellowDiffide2.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div></div><div class=row><div class=col-xs-12><div class=pull-left><a role=button class=\\\"btn btn-primary\\\" ng-click=eventEdit.recreateCalendar()>Ricrea calendario</a> <a role=button class=\\\"btn btn-primary\\\" ng-click=eventEdit.publish() ng-show=\\\"eventEdit.event.evenStatoEvento != 1\\\">Pubblica evento</a> <a role=button class=\\\"btn btn-primary\\\" ng-click=eventEdit.unpublish() ng-show=\\\"eventEdit.event.evenStatoEvento == 1\\\">Imposta come offline</a></div><div class=pull-right><div><a role=button class=\\\"btn btn-default\\\" ng-click=eventEdit.cancel()>Annulla</a> <input type=submit value=Salva class=\\\"btn btn-success\\\"></div></div></div></div><div ng-show=eventEdit.loading class=\\\"overlay absolute fill\\\"><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></form></div></td></tr>\");\n$templateCache.put(\"app/pages/events/edit/recreateCalendar.html\",\"<div class=modal-header><a role=button class=close ng-click=eventRecreateCalendar.cancel()><span aria-hidden=true>×</span></a><h3 class=modal-title>Sei sicuro?</h3></div><div class=modal-body>Tutte le partite e le giornate saranno ricreate. Quelle presenti ora verranno eliminate.</div><div class=modal-footer><a role=button class=\\\"btn btn-outline pull-left\\\" ng-click=eventRecreateCalendar.cancel()>Annulla</a> <a role=button class=\\\"btn btn-outline\\\" ng-click=eventRecreateCalendar.ok()>Ricrea calendario dell\\'evento</a></div>\");\n$templateCache.put(\"app/pages/events/show/show.html\",\"<tr><td>{{ eventShow.event.evenName }}</td><td>{{ eventShow.event.evenTypePretty }}</td><td>{{ eventShow.event.evenFormulaPretty }}</td><td>{{ eventShow.event.regions.regiName }}</td><td>{{ eventShow.event.evenDayActiveName }}</td><td><div class=\\\"pull-right no-opacity opacity-transition\\\" ng-class=\\\"{ \\'full-opacity\\': eventShow.showControls }\\\" ng-show=!eventShow.hideControls><a role=button class=\\\"btn btn-sm btn-default accordion-toggle\\\" data-toggle=collapse data-target=.event-edit-form-{{eventShow.event.evenId}}><i class=\\\"fa fa-pencil\\\"></i> </a><a role=button class=\\\"btn btn-sm btn-danger\\\" ng-click=eventShow.destroy()><i class=\\\"fa fa-trash\\\"></i></a></div></td></tr>\");\n$templateCache.put(\"app/pages/invitations/create/create.html\",\"<form id=invitationCreateForm class=\\\"invitation-create-form relative\\\" name=invitationCreateForm ng-submit=invitationCreate.ok()><div class=modal-header><a role=button class=close ng-click=invitationCreate.cancel()><span aria-hidden=true>×</span></a><h3 class=modal-title>Invita nuovo dirigente</h3></div><div class=modal-body><div class=row><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': invitationCreateForm.guestEmail.$dirty && invitationCreateForm.guestEmail.$invalid}\\\"><label for=invitationCreateForm-guestEmail>E-mail dirigente</label><input id=invitationCreateForm-guestEmail ng-model=invitationCreate.form.guestEmail name=guestEmail type=email class=form-control required> <span ng-show=invitationCreateForm.guestEmail.$dirty ng-messages=invitationCreateForm.guestEmail.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span> <span ng-message=email>Inserire un indirizzo email valido</span></span></div></div><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': invitationCreateForm.events.$dirty && invitationCreateForm.events.$invalid}\\\"><label for=invitationCreateForm-events>Eventi</label><isteven-multi-select id=invitationCreateForm-events name=events input-model=invitationCreate.events output-model=invitationCreate.form.events button-label=evenName item-label=evenName tick-property=ticked output-properties=evenId helper-elements=\\\"all none filter\\\" translation=invitationCreate.multiSelectTranslation></isteven-multi-select><span ng-show=invitationCreateForm.events.$dirty ng-messages=invitationCreateForm.events.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div></div><div ng-show=invitationCreate.loading class=\\\"overlay absolute fill\\\"><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></div><div class=modal-footer><a role=button class=\\\"btn btn-outline pull-left\\\" ng-click=invitationCreate.cancel()>Annulla</a> <input type=submit class=\\\"btn btn-outline\\\" value=\\\"Manda invito\\\"></div></form>\");\n$templateCache.put(\"app/pages/invitations/destroy/destroy.html\",\"<div class=modal-header><a role=button class=close ng-click=invitationDestroy.cancel()><span aria-hidden=true>×</span></a><h3 class=modal-title>Sei sicuro?</h3></div><div class=modal-body>Questa operazione <strong>non è reversibile</strong>.</div><div class=modal-footer><a role=button class=\\\"btn btn-outline pull-left\\\" ng-click=invitationDestroy.cancel()>Annulla</a> <a role=button class=\\\"btn btn-outline\\\" ng-click=invitationDestroy.ok()>Elimina dirigente</a></div>\");\n$templateCache.put(\"app/pages/invitations/show/show.html\",\"<tr><td>{{ invitationShow.invitation.mailGuest }}</td><td>{{ invitationShow.invitation.evenName }}</td><td>{{ invitationShow.invitation.dateInvitationPretty }}</td><td>{{ invitationShow.invitation.statusPretty }}</td><td><div class=\\\"pull-right no-opacity opacity-transition\\\" ng-class=\\\"{ \\'full-opacity\\': invitationShow.showControls }\\\"><a role=button class=\\\"btn btn-sm btn-danger\\\" ng-click=invitationShow.destroy() ng-show=\\\"invitationShow.invitation.status != \\'3\\'\\\"><i class=\\\"fa fa-trash\\\"></i></a></div></td></tr>\");\n$templateCache.put(\"app/pages/managerMatches/edit/edit.html\",\"<tr><td colspan=10 class=\\\"hidden-row active\\\"><div id=manager-match-edit-form-{{managerMatchEdit.match.matcId}} class=\\\"accordion-body collapse manager-match-edit-form-{{managerMatchEdit.match.matcId}}\\\"><form class=\\\"manager-match-edit-form relative\\\" name=managerMatchEditForm ng-submit=managerMatchEdit.submit()><div class=row><input id=managerMatchEditForm{{managerMatchEdit.match.matcId}}-teamA ng-model=managerMatchEdit.form.teamA ng-init=\\\"managerMatchEdit.form.teamA = { teamId: managerMatchEdit.match.matcTeamIdA }\\\" type=hidden name=teamA required> <input id=managerMatchEditForm{{managerMatchEdit.match.matcId}}-teamB ng-model=managerMatchEdit.form.teamB ng-init=\\\"managerMatchEdit.form.teamB = { teamId: managerMatchEdit.match.matcTeamIdB }\\\" type=hidden name=teamB required><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': managerMatchEditForm.scoreA.$dirty && managerMatchEditForm.scoreA.$invalid}\\\"><label for=managerMatchEditForm{{managerMatchEdit.match.matcId}}-scoreA>Modifica Goal Casa</label><select id=managerMatchEditForm{{managerMatchEdit.match.matcId}}-scoreA ng-model=managerMatchEdit.form.scoreA ng-init=\\\"managerMatchEdit.form.scoreA = managerMatchEdit.match.matcScoreTeamA\\\" name=scoreA class=form-control ng-options=\\\"score as score for score in managerMatchEdit.scores track by score\\\" required></select><span ng-show=managerMatchEditForm.scoreA.$dirty ng-messages=managerMatchEditForm.scoreA.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': managerMatchEditForm.scoreB.$dirty && managerMatchEditForm.scoreB.$invalid}\\\"><label for=managerMatchEditForm{{managerMatchEdit.match.matcId}}-scoreB>Modifica Goal Ospiti</label><select id=managerMatchEditForm{{managerMatchEdit.match.matcId}}-scoreB ng-model=managerMatchEdit.form.scoreB ng-init=\\\"managerMatchEdit.form.scoreB = managerMatchEdit.match.matcScoreTeamB\\\" name=scoreB class=form-control ng-options=\\\"score as score for score in managerMatchEdit.scores track by score\\\" required></select><span ng-show=managerMatchEditForm.scoreB.$dirty ng-messages=managerMatchEditForm.scoreB.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': managerMatchEditForm.date.$dirty && managerMatchEditForm.date.$invalid}\\\"><label for=managerMatchEditForm{{managerMatchEdit.match.matcId}}-date>Modifica Data Partita</label><div class=input-group><div class=input-group-addon><i class=\\\"fa fa-calendar\\\"></i></div><input id=managerMatchEditForm{{managerMatchEdit.match.matcId}}-date ng-model=managerMatchEdit.form.date model=managerMatchEdit.form.date ng-init=\\\"managerMatchEdit.form.date = managerMatchEdit.match.matcDateMatch\\\" name=date type=text class=form-control datepicker></div></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': managerMatchEditForm.time.$dirty && managerMatchEditForm.time.$invalid}\\\"><label for=managerMatchEditForm{{managerMatchEdit.match.matcId}}-time>Modifica Ora</label><div class=input-group><div class=input-group-addon><i class=\\\"fa fa-clock-o\\\"></i></div><input id=managerMatchEditForm{{managerMatchEdit.match.matcId}}-time ng-model=managerMatchEdit.form.time ng-init=\\\"managerMatchEdit.form.time = managerMatchEdit.match.matcTime\\\" name=time type=text class=form-control timepicker></div></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': managerMatchEditForm.address.$dirty && managerMatchEditForm.address.$invalid}\\\"><label for=managerMatchEditForm{{managerMatchEdit.match.matcId}}-address>Modifica Indirizzo</label><input id=managerMatchEditForm{{managerMatchEdit.match.matcId}}-address ng-model=managerMatchEdit.form.address ng-init=\\\"managerMatchEdit.form.address = managerMatchEdit.match.matcAddress\\\" name=address type=text class=form-control></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': managerMatchEditForm.played.$dirty && managerMatchEditForm.played.$invalid}\\\"><label for=managerMatchEditForm{{managerMatchEdit.match.matcId}}-played>Modifica Giocata</label><select id=managerMatchEditForm{{managerMatchEdit.match.matcId}}-played ng-model=managerMatchEdit.form.played ng-init=\\\"managerMatchEdit.form.played = {value: managerMatchEdit.match.matcFlgPlay}\\\" name=played class=form-control ng-options=\\\"played as played.label for played in [{value: 0, label: \\'no\\'}, {value: 1, label: \\'si\\'}] track by played.value\\\" required></select><span ng-show=managerMatchEditForm.played.$dirty ng-messages=managerMatchEditForm.played.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div></div><div class=row><div class=col-xs-12><div class=pull-right><a role=button class=\\\"btn btn-default\\\" ng-click=managerMatchEdit.cancel()>Annulla</a> <input type=submit value=Salva class=\\\"btn btn-success\\\"></div></div></div><div ng-show=managerMatchEdit.loading class=\\\"overlay absolute fill\\\"><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></form></div></td></tr>\");\n$templateCache.put(\"app/pages/managerMatches/show/show.html\",\"<tr><td>{{ managerMatchShow.match.matcTeamA }}</td><td>{{ managerMatchShow.match.matcTeamB }}</td><td>{{ managerMatchShow.match.matcScoreTeamA }}</td><td>{{ managerMatchShow.match.matcScoreTeamB }}</td><td>{{ managerMatchShow.match.matcDateMatchPretty }}</td><td>{{ managerMatchShow.match.matcTime }}</td><td>{{ managerMatchShow.match.matcAddress }}</td><td ng-if=\\\"managerMatchShow.models.currentEvent.evenType == 1\\\">{{ managerMatchShow.match.matcNameGroups }}</td><td>{{ managerMatchShow.match.matcFlgPlay === 1 ? \\'si\\' : \\'no\\' }}</td><td><div class=\\\"pull-right no-opacity opacity-transition\\\" ng-class=\\\"{ \\'full-opacity\\': managerMatchShow.showControls }\\\"><a role=button class=\\\"btn btn-sm btn-default accordion-toggle\\\" data-toggle=collapse data-target=.manager-match-edit-form-{{managerMatchShow.match.matcId}}><i class=\\\"fa fa-pencil\\\"></i></a></div></td></tr>\");\n$templateCache.put(\"app/pages/players/create/create.html\",\"<form id=playerCreateForm class=\\\"player-create-form relative\\\" name=playerCreateForm ng-submit=playerCreate.ok()><div class=modal-header><a role=button class=close ng-click=playerCreate.cancel()><span aria-hidden=true>×</span></a><h3 class=modal-title>Crea nuovo giocatore</h3></div><div class=modal-body><div class=row><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': playerCreateForm.name.$dirty && playerCreateForm.name.$invalid}\\\"><label for=playerCreateForm-name>Nome</label><input id=playerCreateForm-name ng-model=playerCreate.form.name name=name type=text class=form-control></div><span ng-show=playerCreateForm.name.$dirty ng-messages=playerCreateForm.name.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': playerCreateForm.surname.$dirty && playerCreateForm.surname.$invalid}\\\"><label for=playerCreateForm-surname>Cognome</label><input id=playerCreateForm-surname ng-model=playerCreate.form.surname name=surname type=text class=form-control></div><span ng-show=playerCreateForm.surname.$dirty ng-messages=playerCreateForm.surname.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div ng-show=playerCreate.loading class=\\\"overlay absolute fill\\\"><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></div><div class=modal-footer><a role=button class=\\\"btn btn-outline pull-left\\\" ng-click=playerCreate.cancel()>Annulla</a> <input type=submit class=\\\"btn btn-outline\\\" value=\\\"Crea giocatore\\\"></div></form>\");\n$templateCache.put(\"app/pages/players/destroy/destroy.html\",\"<div class=modal-header><a role=button class=close ng-click=matchDestroy.cancel()><span aria-hidden=true>×</span></a><h3 class=modal-title>Sei sicuro?</h3></div><div class=modal-body>Questa operazione <strong>non è reversibile</strong>.</div><div class=modal-footer><a role=button class=\\\"btn btn-outline pull-left\\\" ng-click=matchDestroy.cancel()>Annulla</a> <a role=button class=\\\"btn btn-outline\\\" ng-click=matchDestroy.ok()>Elimina partita</a></div>\");\n$templateCache.put(\"app/pages/players/edit/edit.html\",\"<tr><td colspan=10 class=\\\"hidden-row active\\\"><div id=player-edit-form-{{playerEdit.player.playId}} class=\\\"accordion-body collapse player-edit-form-{{playerEdit.player.playId}}\\\"><form class=\\\"player-edit-form relative\\\" name=playerEditForm ng-submit=playerEdit.submit()><div class=row><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': playerEditForm.name.$dirty && playerEditForm.name.$invalid}\\\"><label for=playerEditForm{{playerEdit.player.playId}}-name>Modifica Nome</label><input id=playerEditForm{{playerEdit.player.playId}}-name ng-model=playerEdit.form.name ng-init=\\\"playerEdit.form.name = playerEdit.player.playFirstname\\\" name=name type=text class=form-control required></div><span ng-show=playerEditForm.name.$dirty ng-messages=playerEditForm.name.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': playerEditForm.surname.$dirty && playerEditForm.surname.$invalid}\\\"><label for=playerEditForm{{playerEdit.player.playId}}-surname>Modifica Cognome</label><input id=playerEditForm{{playerEdit.player.playId}}-surname ng-model=playerEdit.form.surname ng-init=\\\"playerEdit.form.surname = playerEdit.player.playSurname\\\" name=surname type=text class=form-control required></div><span ng-show=playerEditForm.surname.$dirty ng-messages=playerEditForm.surname.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=row><div class=col-xs-12><div class=pull-right><a role=button class=\\\"btn btn-default\\\" ng-click=playerEdit.cancel()>Annulla</a> <input type=submit value=Salva class=\\\"btn btn-success\\\"></div></div></div><div ng-show=playerEdit.loading class=\\\"overlay absolute fill\\\"><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></form></div></td></tr>\");\n$templateCache.put(\"app/pages/players/show/show.html\",\"<tr><td>{{ playerShow.player.playFirstname }}</td><td>{{ playerShow.player.playSurname }}</td><td><div class=\\\"pull-right no-opacity opacity-transition\\\" ng-class=\\\"{ \\'full-opacity\\': playerShow.showControls }\\\"><a role=button class=\\\"btn btn-sm btn-default accordion-toggle\\\" data-toggle=collapse data-target=.player-edit-form-{{playerShow.player.playId}}><i class=\\\"fa fa-pencil\\\"></i> </a><a role=button class=\\\"btn btn-sm btn-danger\\\" ng-click=playerShow.destroy()><i class=\\\"fa fa-trash\\\"></i></a></div></td></tr>\");\n$templateCache.put(\"app/pages/press/destroy/destroy.html\",\"<div class=modal-header><a role=button class=close ng-click=pressDestroy.cancel()><span aria-hidden=true>×</span></a><h3 class=modal-title>Sei sicuro?</h3></div><div class=modal-body>Questa operazione <strong>non è reversibile</strong>.</div><div class=modal-footer><a role=button class=\\\"btn btn-outline pull-left\\\" ng-click=pressDestroy.cancel()>Annulla</a> <a role=button class=\\\"btn btn-outline\\\" ng-click=pressDestroy.ok()>Elimina comunicato</a></div>\");\n$templateCache.put(\"app/pages/press/create/create.html\",\"<form id=pressCreateForm class=\\\"press-create-form relative\\\" name=pressCreateForm ng-submit=pressCreate.ok()><div class=modal-header><a role=button class=close ng-click=pressCreate.cancel()><span aria-hidden=true>×</span></a><h3 class=modal-title>Crea nuovo comunicato</h3></div><div class=modal-body><div class=row><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': pressCreateForm.name.$dirty && pressCreateForm.name.$invalid}\\\"><label for=pressCreateForm-name>Nome comunicato</label><input id=pressCreateForm-name ng-model=pressCreate.form.name name=name type=text class=form-control required> <span ng-show=pressCreateForm.name.$dirty ng-messages=pressCreateForm.name.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=col-sm-6 ng-repeat=\\\"field in pressCreate.selectFields\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': pressCreateForm[field.key].$dirty && pressCreateForm[field.key].$invalid}\\\"><label for=pressCreateForm-round>{{ field.name }}</label><select id=pressCreateForm-round ng-init=\\\"pressCreate.form[field.key] = { id: 1 }\\\" ng-model=pressCreate.form[field.key] name={{field.key}} class=form-control ng-options=\\\"opt as opt.name for opt in field.options track by opt.id\\\"></select><span ng-show=pressCreateForm.round.$dirty ng-messages=pressCreateForm.round.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=col-sm-12><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': pressCreateForm.events.$dirty && pressCreateForm.events.$invalid}\\\"><label for=pressCreateForm-events>Eventi inclusi nel comunicato</label><isteven-multi-select id=pressCreateForm-events name=events input-model=pressCreate.events output-model=pressCreate.form.events button-label=evenName item-label=evenName tick-property=ticked output-properties=evenId helper-elements=\\\"all none filter\\\" translation=pressCreate.multiSelectTranslation></isteven-multi-select><span ng-show=pressCreateForm.events.$dirty ng-messages=pressCreateForm.events.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div></div><div ng-show=pressCreate.loading class=\\\"overlay absolute fill\\\"><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></div><div class=modal-footer><a role=button class=\\\"btn btn-outline pull-left\\\" ng-click=pressCreate.cancel()>Annulla</a> <input type=submit class=\\\"btn btn-outline\\\" value=\\\"Crea comunicato\\\"></div></form>\");\n$templateCache.put(\"app/pages/press/show/show.html\",\"<tr><td>{{ pressShow.press.pressName }}</td><td>{{ pressShow.press.pressStatoPretty }}</td><td><a href={{pressShow.press.pressUrl}} target=_blank>Scarica il PDF</a></td><td>{{ pressShow.press.pressDatePretty }}</td><td><div class=\\\"pull-right no-opacity opacity-transition\\\" ng-class=\\\"{ \\'full-opacity\\': pressShow.showControls }\\\"><a role=button class=\\\"btn btn-sm btn-default accordion-toggle\\\" data-toggle=collapse data-target=.press-edit-form-{{pressShow.press.pressId}}><i class=\\\"fa fa-pencil\\\"></i> </a><a role=button class=\\\"btn btn-sm btn-danger\\\" ng-click=pressShow.destroy()><i class=\\\"fa fa-trash\\\"></i></a></div></td></tr>\");\n$templateCache.put(\"app/pages/scorers/edit/edit.html\",\"<tr><td colspan=8 class=\\\"hidden-row active\\\"><div id=scorer-edit-form-{{scorerEdit.scorer.scorId}} class=\\\"accordion-body collapse scorer-edit-form-{{scorerEdit.scorer.scorId}}\\\"><table class=table style=\\\"background: transparent\\\"><tr><th>Partita</th><th>Goal</th><th></th></tr><tr ng-repeat=\\\"scorerMatch in scorerEdit.scorer.matcScorers\\\" scorer-match-show=scorerMatch scorer-match-player-id=scorerEdit.scorer.scorPlayId></tr></table></div></td></tr>\");\n$templateCache.put(\"app/pages/scorerMatch/destroy/destroy.html\",\"<div class=modal-header><a role=button class=close ng-click=scorerMatchDestroy.cancel()><span aria-hidden=true>×</span></a><h3 class=modal-title>Sei sicuro?</h3></div><div class=modal-body>Questa operazione <strong>non è reversibile</strong>.</div><div class=modal-footer><a role=button class=\\\"btn btn-outline pull-left\\\" ng-click=scorerMatchDestroy.cancel()>Annulla</a> <a role=button class=\\\"btn btn-outline\\\" ng-click=scorerMatchDestroy.ok()>Elimina punteggio</a></div>\");\n$templateCache.put(\"app/pages/scorerMatch/show/show.html\",\"<tr><td>{{ scorerMatchShow.scorerMatch.matcTeamA }} vs {{ scorerMatchShow.scorerMatch.matcTeamB }}</td><td><form class=\\\"scorerMatch-edit-form relative no-padding\\\" name=scorerMatchShowForm ng-submit=scorerMatchShow.submit()><select ng-model=scorerMatchShow.form.goal ng-init=\\\"scorerMatchShow.form.goal = scorerMatchShow.scorerMatch.matcScorerGoal\\\" name=goal type=text class=\\\"form-control no-padding\\\" style=\\\"max-width: 80px\\\" ng-options=\\\"goal as goal for goal in scorerMatchShow.scores track by goal\\\" ng-change=scorerMatchShow.submitGoal()></select></form></td><td><div class=\\\"pull-right no-opacity opacity-transition\\\" ng-class=\\\"{ \\'full-opacity\\': scorerMatchShow.showControls }\\\"><a role=button class=\\\"btn btn-sm btn-danger\\\" ng-click=scorerMatchShow.destroy()><i class=\\\"fa fa-trash\\\"></i></a></div></td></tr>\");\n$templateCache.put(\"app/pages/teams/destroy/destroy.html\",\"<div class=modal-header><a role=button class=close ng-click=teamDestroy.cancel()><span aria-hidden=true>×</span></a><h3 class=modal-title>Sei sicuro?</h3></div><div class=modal-body>Questa operazione <strong>non è reversibile</strong>.</div><div class=modal-footer><a role=button class=\\\"btn btn-outline pull-left\\\" ng-click=teamDestroy.cancel()>Annulla</a> <a role=button class=\\\"btn btn-outline\\\" ng-click=teamDestroy.ok()>Elimina squadra</a></div>\");\n$templateCache.put(\"app/pages/teams/create/create.html\",\"<form id=teamCreateForm class=\\\"team-create-form relative\\\" name=teamCreateForm ng-submit=teamCreate.ok()><div class=modal-header><a role=button class=close ng-click=teamCreate.cancel()><span aria-hidden=true>×</span></a><h3 class=modal-title>Crea nuova squadra</h3></div><div class=modal-body><div class=row><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': teamCreateForm.name.$dirty && teamCreateForm.name.$invalid}\\\"><label for=teamCreateForm-name>Nome</label><input id=teamCreateForm-name ng-model=teamCreate.form.name name=name type=text class=form-control required> <span ng-show=teamCreateForm.name.$dirty ng-messages=teamCreateForm.name.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': teamCreateForm.captain.$dirty && teamCreateForm.captain.$invalid}\\\"><label for=teamCreateForm-captain>Capitano</label><input id=teamCreateForm-captain ng-model=teamCreate.form.captain name=captain type=text class=form-control> <span ng-show=teamCreateForm.captain.$dirty ng-messages=teamCreateForm.captain.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': teamCreateForm.phone.$dirty && teamCreateForm.phone.$invalid}\\\"><label for=teamCreateForm-phone>Telefono</label><input id=teamCreateForm-phone ng-model=teamCreate.form.phone name=phone type=text class=form-control> <span ng-show=teamCreateForm.phone.$dirty ng-messages=teamCreateForm.phone.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': teamCreateForm.time.$dirty && teamCreateForm.time.$invalid}\\\"><label for=teamCreateForm-time>Orario Preferito</label><div class=input-group><div class=input-group-addon><i class=\\\"fa fa-clock-o\\\"></i></div><input id=teamCreateForm-time ng-model=teamCreate.form.time name=time type=text class=form-control timepicker></div><span ng-show=teamCreateForm.time.$dirty ng-messages=teamCreateForm.time.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': teamCreateForm.place.$dirty && teamCreateForm.place.$invalid}\\\"><label for=teamCreateForm-place>Luogo Preferito</label><input id=teamCreateForm-place ng-model=teamCreate.form.place name=place type=text class=form-control> <span ng-show=teamCreateForm.place.$dirty ng-messages=teamCreateForm.place.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=col-sm-6 ng-show=\\\"teamCreate.models.currentEvent.evenType == 1\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': teamCreateForm.round.$dirty && teamCreateForm.round.$invalid}\\\"><label for=teamCreateForm-round>Girone</label><select id=teamCreateForm-round ng-init=\\\"teamCreate.form.round = \\'A\\'\\\" ng-model=teamCreate.form.round name=round class=form-control ng-options=\\\"roundName as roundName for roundName in teamCreate.roundNames track by roundName\\\" required></select><span ng-show=teamCreateForm.round.$dirty ng-messages=teamCreateForm.round.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div></div><div ng-show=teamCreate.loading class=\\\"overlay absolute fill\\\"><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></div><div class=modal-footer><a role=button class=\\\"btn btn-outline pull-left\\\" ng-click=teamCreate.cancel()>Annulla</a> <input type=submit class=\\\"btn btn-outline\\\" value=\\\"Crea squadra\\\"></div></form>\");\n$templateCache.put(\"app/pages/scorers/show/show.html\",\"<tr><td>{{ scorerShow.scorer.scorPlayFirstname }}</td><td>{{ scorerShow.scorer.scorPlaySurname }}</td><td>{{ scorerShow.scorer.scorTeamName }}</td><td>{{ scorerShow.scorer.scorGoal }}</td><td><div class=\\\"pull-right no-opacity opacity-transition\\\" ng-class=\\\"{ \\'full-opacity\\': scorerShow.showControls }\\\"><a role=button class=\\\"btn btn-sm btn-default accordion-toggle\\\" data-toggle=collapse data-target=.scorer-edit-form-{{scorerShow.scorer.scorId}}><i class=\\\"fa fa-pencil\\\"></i></a></div></td></tr>\");\n$templateCache.put(\"app/pages/teams/edit/edit.html\",\"<tr><td colspan=8 class=\\\"hidden-row active\\\"><div id=team-edit-form-{{teamEdit.team.teamId}} class=\\\"accordion-body collapse team-edit-form-{{teamEdit.team.teamId}}\\\"><form class=\\\"team-edit-form relative\\\" name=teamEditForm ng-submit=teamEdit.submit()><div class=row><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': teamEditForm.name.$dirty && teamEditForm.name.$invalid}\\\"><label for=teamEditForm{{teamEdit.team.teamId}}-name>Modifica Nome</label><input id=teamEditForm{{teamEdit.team.teamId}}-name ng-model=teamEdit.form.name ng-init=\\\"teamEdit.form.name = teamEdit.team.teamName\\\" name=name type=text class=form-control required> <span ng-show=teamEditForm.name.$dirty ng-messages=teamEditForm.name.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': teamEditForm.captain.$dirty && teamEditForm.captain.$invalid}\\\"><label for=teamEditForm{{teamEdit.team.teamId}}-captain>Modifica Capitano</label><input id=teamEditForm{{teamEdit.team.teamId}}-captain ng-model=teamEdit.form.captain ng-init=\\\"teamEdit.form.captain = teamEdit.team.teamCaptain\\\" name=captain type=text class=form-control required> <span ng-show=teamEditForm.captain.$dirty ng-messages=teamEditForm.captain.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': teamEditForm.phone.$dirty && teamEditForm.phone.$invalid}\\\"><label for=teamEditForm{{teamEdit.team.teamId}}-phone>Modifica Telefono</label><input id=teamEditForm{{teamEdit.team.teamId}}-phone ng-model=teamEdit.form.phone ng-init=\\\"teamEdit.form.phone = teamEdit.team.teamMobilePhone\\\" name=phone type=text class=form-control required> <span ng-show=teamEditForm.phone.$dirty ng-messages=teamEditForm.phone.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': teamEditForm.time.$dirty && teamEditForm.time.$invalid}\\\"><label for=teamEditForm{{teamEdit.team.teamId}}-time>Modifica Orario Preferito</label><div class=input-group><div class=input-group-addon><i class=\\\"fa fa-clock-o\\\"></i></div><input id=teamEditForm{{teamEdit.team.teamId}}-time ng-model=teamEdit.form.time ng-init=\\\"teamEdit.form.time = teamEdit.team.teamTime\\\" name=time type=text class=form-control timepicker required></div><span ng-show=teamEditForm.time.$dirty ng-messages=teamEditForm.time.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': teamEditForm.place.$dirty && teamEditForm.place.$invalid}\\\"><label for=teamEditForm{{teamEdit.team.teamId}}-place>Modifica Luogo Preferito</label><input id=teamEditForm{{teamEdit.team.teamId}}-place ng-model=teamEdit.form.place ng-init=\\\"teamEdit.form.place = teamEdit.team.teamPlace\\\" name=place type=text class=form-control required> <span ng-show=teamEditForm.place.$dirty ng-messages=teamEditForm.place.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div></div><div class=row><div class=col-xs-12><div class=pull-right><a role=button class=\\\"btn btn-default\\\" ng-click=teamEdit.cancel()>Annulla</a> <input type=submit value=Salva class=\\\"btn btn-success\\\"></div></div></div><div ng-show=teamEdit.loading class=\\\"overlay absolute fill\\\"><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></form></div></td></tr>\");\n$templateCache.put(\"app/pages/teams/show/show.html\",\"<tr><td>{{ teamShow.team.teamName }}</td><td>{{ teamShow.team.teamCaptain }}</td><td>{{ teamShow.team.teamMobilePhone }}</td><td>{{ teamShow.team.teamTime }}</td><td>{{ teamShow.team.teamPlace }}</td><td ng-if=\\\"teamShow.models.currentEvent.evenType == 1\\\">{{ teamShow.team.teamGroups }}</td><td><div class=\\\"pull-right no-opacity opacity-transition\\\" ng-class=\\\"{ \\'full-opacity\\': teamShow.showControls }\\\"><a role=button class=\\\"btn btn-sm btn-default accordion-toggle\\\" data-toggle=collapse data-target=.team-edit-form-{{teamShow.team.teamId}}><i class=\\\"fa fa-pencil\\\"></i> </a><a role=button class=\\\"btn btn-sm btn-danger\\\" ng-click=teamShow.destroy()><i class=\\\"fa fa-trash\\\"></i></a></div></td></tr>\");\n$templateCache.put(\"app/pages/calendar/advancedEdit/cardsBox/cardsBox.html\",\"<div class=\\\"panel panel-primary\\\"><div class=panel-heading>Cartellini {{ cardsBox.teamName }}</div><div class=panel-body><table class=table ng-show=\\\"cardsBox.cards.length  > 0\\\"><tr><th>Marcatore</th><th>Tipo diffida</th><th></th></tr><tr ng-repeat=\\\"card in cardsBox.cards\\\" show-on-hover=\\\"#removeCardButton{{ card.playId + \\'\\' + card.cardId }}\\\"><td>{{ card.playName }} {{ card.playSurname }}</td><td>{{ card.flgCardsPretty }}</td><td><div class=pull-right id=\\\"removeCardButton{{ card.playId + \\'\\' + card.cardId }}\\\"><a role=button class=\\\"btn btn-sm btn-danger\\\" ng-click=cardsBox.destroyCard(card)><i class=\\\"fa fa-trash\\\"></i></a></div></td></tr></table><form id=\\\"createCardForm{{ cardsBox.teamId }}\\\" name=\\\"createCardForm{{ cardsBox.teamId }}\\\" ng-submit=cardsBox.createCard()><div class=row><div class=\\\"col-sm-7 small-padding-right\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': this[\\'createCardForm\\' + cardsBox.teamId].name.$dirty && this[\\'createCardForm\\' + cardsBox.teamId].name.$invalid}\\\"><label for=\\\"createCardForm{{ cardsBox.teamId }}-name\\\">Nome Marcatore</label><input id=\\\"createCardForm{{ cardsBox.teamId }}-name\\\" type=text ng-model=cardsBox.typeaheadName ng-model-options=\\\"{getterSetter: true}\\\" placeholder=\\\"Nome marcatore\\\" uib-typeahead=\\\"player as (player.name + \\' \\' + player.surname) for player in cardsBox.autocomplete | filter:{name:$viewValue} | limitTo: 6\\\" typeahead-show-hint=true typeahead-min-length=0 autocomplete=off class=form-control name=name> <span ng-show=\\\"this[\\'createCardForm\\' + cardsBox.teamId].name.$dirty\\\" ng-messages=\\\"this[\\'createCardForm\\' + cardsBox.teamId].name.$error\\\" class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-5 small-padding-left\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': this[\\'createCardForm\\' + cardsBox.teamId].cardType.$dirty && this[\\'createCardForm\\' + cardsBox.teamId].cardType.$invalid}\\\"><label for=\\\"createCardForm{{ cardsBox.teamId }}-cardType\\\">Tipo diffida</label><select id=\\\"createCardForm{{ cardsBox.teamId }}-cardType\\\" ng-model=cardsBox.form.cardType ng-init=\\\"cardsBox.form.cardType = cardsBox.cardTypes[0]\\\" name=cardType class=\\\"form-control no-padding-right\\\" ng-options=\\\"cardType as cardType.name for cardType in cardsBox.cardTypes track by cardType.id\\\" required></select></div></div><div class=\\\"col-sm-7 small-padding-right\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': this[\\'createCardForm\\' + cardsBox.teamId].surname.$dirty && this[\\'createCardForm\\' + cardsBox.teamId].surname.$invalid}\\\"><label for=\\\"createCardForm{{ cardsBox.teamId }}-surname\\\">Cognome Marcatore</label><input id=\\\"createCardForm{{ cardsBox.teamId }}-surname\\\" type=text ng-model=cardsBox.typeaheadSurname ng-model-options=\\\"{getterSetter: true}\\\" placeholder=\\\"Cognome marcatore\\\" uib-typeahead=\\\"player as (player.name + \\' \\' + player.surname) for player in cardsBox.autocomplete | filter:{surname:$viewValue} | limitTo: 6\\\" typeahead-show-hint=true typeahead-min-length=0 autocomplete=off class=form-control name=surname> <span ng-show=\\\"this[\\'createCardForm\\' + cardsBox.teamId].surname.$dirty\\\" ng-messages=\\\"this[\\'createCardForm\\' + cardsBox.teamId].surname.$error\\\" class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-5 small-padding-left\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': this[\\'createCardForm\\' + cardsBox.teamId].disqualificationDays.$dirty && this[\\'createCardForm\\' + cardsBox.teamId].disqualificationDays.$invalid}\\\"><label for=\\\"createCardForm{{ cardsBox.teamId }}-disqualificationDays\\\">Giorni di squalifica</label><select id=\\\"createCardForm{{ cardsBox.teamId }}-disqualificationDays\\\" ng-model=cardsBox.form.disqualificationDays ng-init=\\\"cardsBox.form.disqualificationDays = 0\\\" ng-disabled=\\\"cardsBox.form.cardType.id === 0\\\" name=disqualificationDays class=\\\"form-control no-padding-right\\\" ng-options=\\\"day as day for day in cardsBox.disqualificationDays track by day\\\" required></select></div></div><div class=\\\"col-sm-9 small-padding-right\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': this[\\'createCardForm\\' + cardsBox.teamId].note.$dirty && this[\\'createCardForm\\' + cardsBox.teamId].note.$invalid}\\\"><label for=\\\"createCardForm{{ cardsBox.teamId }}-note\\\">Note</label><input id=\\\"createCardForm{{ cardsBox.teamId }}-note\\\" type=text ng-model=cardsBox.form.note placeholder=\\\"Note diffida\\\" class=form-control name=note> <span ng-show=\\\"this[\\'createCardForm\\' + cardsBox.teamId].note.$dirty\\\" ng-messages=\\\"this[\\'createCardForm\\' + cardsBox.teamId].note.$error\\\" class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-3 small-padding-left\\\"><label>&nbsp;</label><input class=\\\"btn btn-primary form-control\\\" type=submit value=Aggiungi></div></div></form></div></div>\");\n$templateCache.put(\"app/pages/calendar/advancedEdit/scorersBox/scorersBox.html\",\"<div class=\\\"panel panel-primary\\\"><div class=panel-heading>Marcatori {{ scorersBox.teamName }}</div><div class=panel-body><table class=table ng-show=\\\"scorersBox.scorers.length  > 0\\\"><tr><th>Marcatore</th><th>Goal</th><th></th></tr><tr ng-repeat=\\\"scorer in scorersBox.scorers\\\" show-on-hover=\\\"#removeScorerButton{{ scorer.playId }}\\\"><td>{{ scorer.playName }} {{ scorer.playSurname }}</td><td>{{ scorer.goal }}</td><td><div class=pull-right id=\\\"removeScorerButton{{ scorer.playId }}\\\"><a role=button class=\\\"btn btn-sm btn-danger\\\" ng-click=scorersBox.destroyScorer(scorer)><i class=\\\"fa fa-trash\\\"></i></a></div></td></tr></table><form id=\\\"createScorerForm{{ scorersBox.teamId }}\\\" name=\\\"createScorerForm{{ scorersBox.teamId }}\\\" ng-submit=scorersBox.createScorer()><div class=row><div class=\\\"col-sm-9 small-padding-right\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': this[\\'createScorerForm\\' + scorersBox.teamId].name.$dirty && this[\\'createScorerForm\\' + scorersBox.teamId].name.$invalid}\\\"><label for=\\\"createScorerForm{{ scorersBox.teamId }}-name\\\">Nome Marcatore</label><input id=\\\"createScorerForm{{ scorersBox.teamId }}-name\\\" type=text ng-model=scorersBox.typeaheadName ng-model-options=\\\"{getterSetter: true}\\\" placeholder=\\\"Nome marcatore\\\" uib-typeahead=\\\"player as (player.name + \\' \\' + player.surname) for player in scorersBox.autocomplete | filter:{name:$viewValue} | limitTo: 6\\\" typeahead-show-hint=true typeahead-min-length=0 autocomplete=off class=form-control name=name> <span ng-show=\\\"this[\\'createScorerForm\\' + scorersBox.teamId].name.$dirty\\\" ng-messages=\\\"this[\\'createScorerForm\\' + scorersBox.teamId].name.$error\\\" class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-3 small-padding-left\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': this[\\'createScorerForm\\' + scorersBox.teamId].goals.$dirty && this[\\'createScorerForm\\' + scorersBox.teamId].goals.$invalid}\\\"><label for=\\\"createScorerForm{{ scorersBox.teamId }}-goals\\\">Goals</label><select id=\\\"createScorerForm{{ scorersBox.teamId }}-goals\\\" ng-model=scorersBox.form.goals name=goals class=\\\"form-control no-padding-right\\\" ng-options=\\\"score as score for score in scorersBox.scores track by score\\\" required></select></div></div><div class=\\\"col-sm-9 small-padding-right\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': this[\\'createScorerForm\\' + scorersBox.teamId].surname.$dirty && this[\\'createScorerForm\\' + scorersBox.teamId].surname.$invalid}\\\"><label for=\\\"createScorerForm{{ scorersBox.teamId }}-surname\\\">Cognome Marcatore</label><input id=\\\"createScorerForm{{ scorersBox.teamId }}-surname\\\" type=text ng-model=scorersBox.typeaheadSurname ng-model-options=\\\"{getterSetter: true}\\\" placeholder=\\\"Cognome marcatore\\\" uib-typeahead=\\\"player as (player.name + \\' \\' + player.surname) for player in scorersBox.autocomplete | filter:{surname:$viewValue} | limitTo: 6\\\" typeahead-show-hint=true typeahead-min-length=0 autocomplete=off class=form-control name=surname> <span ng-show=\\\"this[\\'createScorerForm\\' + scorersBox.teamId].surname.$dirty\\\" ng-messages=\\\"this[\\'createScorerForm\\' + scorersBox.teamId].surname.$error\\\" class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-3 small-padding-left\\\"><label>&nbsp;</label><input class=\\\"btn btn-primary form-control\\\" type=submit value=Aggiungi></div></div></form></div></div>\");}]);"],"sourceRoot":"/source/"}