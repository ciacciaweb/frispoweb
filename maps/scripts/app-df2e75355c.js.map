{"version":3,"sources":["scripts/app.js"],"names":["angular","module","cardsBox","CardsBoxController","utils","$q","matches","$scope","teams","vm","this","cardTypes","disqualificationDays","scores","setLoading","res","loading","resolve","unsetLoading","createCard","form","then","form2Card","cardData","matchId","cardsKey","resetForm","destroyCard","card","destroyMatchCard","cardId","resetFormModel","teamId","goals","playId","resetFormFields","$setPristine","$setUntouched","typeaheadName","val","arguments","length","isString","name","isObject","populateForm","typeaheadSurname","surname","obj","isNumber","listPlayers","autocomplete","isArray","forEach","el","push","playFirstname","playSurname","playTeamId","$inject","directive","restrict","templateUrl","controller","controllerAs","bindToController","replace","scope","cards","teamName","scorersBox","ScorersBoxController","splice","createScorer","form2Scorer","scorerData","scorersKey","destroyScorer","scorer","scorers","wizardStepBox","WizardStepBoxController","WizardStepBoxLink","attrs","step","wizard","currentStep","active","find","first","addClass","hide","$watch","newVal","oldVal","element","AdminLTE","boxWidget","collapse","title","link","transclude","wizardProgress","WizardProgressController","range","n","Array","teamShow","TeamShowController","$uibModal","models","destroy","open","windowClass","result","team","TeamShowLink","hover","$apply","showControls","teamEdit","TeamEditController","submit","form2Team","teamData","update","TeamEditLink","cancel","TeamDestroyController","$uibModalInstance","ok","close","dismiss","TeamCreateController","roundNames","alphabetChars","scorerShow","ScorerShowController","ScorerShowLink","scorerEdit","ScorerEditController","events","createNewScorerMatch","isDefined","form2ScorerMatch","createScorerMatch","ScorerEditLink","scorerMatchShow","ScorerMatchShowController","submitGoal","updateScorerMatch","currentEvent","evenId","scorerMatch","matcId","scor_play_id","scorerMatchPlayerId","scor_goal","goal","showScorers","destroyScorerMatch","ScorerMatchShowLink","ScorerMatchDestroyController","managerMatchShow","ManagerMatchShowController","ManagerMatchShowLink","match","managerMatchEdit","ManagerMatchEditController","form2Match","matchData","matcDayId","ManagerMatchEditLink","playerShow","PlayerShowController","destroyPlayer","player","PlayerShowLink","playerEdit","PlayerEditController","form2Player","playerData","updatePlayer","PlayerEditLink","MatchDestroyController","PlayerCreateController","pressShow","PressShowController","press","PressShowLink","PressDestroyController","PressCreateController","copy","multiSelectTranslation","istevenMultiSelectTranslation","selectFields","key","options","id","invitationShow","InvitationShowController","invitations","invitation","listSent","InvitationShowLink","InvitationDestroyController","InvitationCreateController","eventShow","EventShowController","event","EventShowLink","hideControls","EventRecreateCalendarController","eventEdit","EventEditController","pointsOptions","form2Event","eventData","publish","even_stato_evento","unpublish","recreateCalendar","createCalendar","show","EventEditLink","on","listRegions","currentDay","evenCurrentDay","EventDestroyController","matchShow","MatchShowController","advancedEdit","size","MatchShowLink","matchEdit","MatchEditController","scoreA","scoreB","MatchEditLink","DayCreateController","MatchCreateController","MatchAdvancedEditController","teamA","matcTeamIdA","teamB","matcTeamIdB","played","value","matcFlgPlay","createAutocompleteObj","players","autocompleteA","autocompleteB","cardShow","CardShowController","CardShowLink","config","cardEdit","CardEditController","CardEditLink","cardMatchShow","form2CardMatch","updateEventCard","cardMatch","cardMatchPlayerId","cardMatchKey","destroyEventCard","CardMatchDestroyController","wizardTextProgressFilter","totalSteps","filter","factory","defaults","startFromStep","merge","next","prev","str2Date","str","split","date","trim","date2Str","dateStart","dateEnd","str2Time","selectAll","selectNone","reset","search","nothingSelected","uiState","timepicker","timepickerLink","clockpicker","autoclose","$filter","longTermMemory","$log","resPipe","parseResponse","status_code","data","reject","error","unwrapArray","camelize","newRes","v","k","injectUserDefaults","displayName","email","updateCurrentUser","currentUser","updateSentInvitations","sentInvitations","updateReceivedInvitations","receivedInvitations","updateMergeCurrentUser","permissions","updatePreferences","preferences","mockAnonymousUser","accessToken","uuid","memorizeCurrentUser","memorize","injectEventsDefaults","evenFormula","evenFormulaPretty","evenType","evenTypePretty","dates","evenDateStart","evenDateEnd","isUndefined","evenStatoEvento","evenDayActive","matchDays","i","evenName","regions","regiName","evenCode","evenSeason","join","sort","a","b","matcProg","injectInvitationsDefaults","status","statusPretty","dateInvitationPretty","dateInvitation","updateEvents","updateManagedEvents","managedEvents","removeEvent","memorizeEvents","updateRegions","memorizeRegions","updateCurrentEvent","currentEventMerged","memorizeCurrentEvent","updateMatches","updateMatch","updateMatchScorers","injectMatchDefaults","matcDateMatch","matcDateMatchPretty","matchCardsTeamA","injectCardsDefaults","injectPressDefaults","pressStato","pressStatoPretty","pressDate","pressDatePretty","injectEventCardsDefaults","matcRedCards","matcYellowCards","flgCards","flgCardsPretty","typeSqualifications","typeSqualificationsPretty","insertMatchDay","updateTeams","updateScoreboard","scoreboard","updateScorers","updateYellows","yellows","updateDiffides","diffides","updateSqualifications","squalifications","updatePress","pressId","updateTeam","updatePlayers","currentTeam","insertPlayer","insertScorer","curMatch","insertCard","removeScorer","playerId","j","removeEventCard","curPlayer","removeTeam","removePress","presId","removeScorerMatch","curScorer","scorPlayId","matcScorers","removeMatchCard","removeMatch","log","info","debugger","showOnHover","linkFunc","visible","target","removeClass","showAnimate","updateVisibility","allowedKeys","indexOf","localStorage","toJson","remember","fromJson","e","forget","oblivion","clear","frispoSidebar","$timeout","SidebarController","$state","state","manageMenuEntries","SidebarLink","window","trigger","frispoHeader","HeaderController","HeaderLink","frispoFooter","FooterController","FooterLink","$http","provisioningApiUrl","eventsApiUrl","teamsApiUrl","pressApiUrl","matchesApiUrl","cardsApiUrl","scorersApiUrl","rankingApiUrl","authorization","anonymousToken","toastr","userApiUrl","cache","helpers","cacheOrHttp","method","fullUrl","headers","keep","toUpperCase","url","promise","err","response","provisioningApiCall","Authorization","eventsApiCall","teamsApiCall","pressApiCall","matchesApiCall","eventId","cardsApiCall","scorersApiCall","rankingApiCall","userApiCall","expect200","notification","msg","success","unwrapData","frispoApi","register","userData","password","login","loginFacebook","facebookData","facebook_token","authResponse","type","logout","userToken","listSentInvitations","listReceivedInvitations","createInvitation","invitationData","updateInvitation","listEvents","listManagedEvents","createEvent","updateEvent","destroyEvent","showEvent","showEventScoreboard","showTournamentScoreboard","scorerMatchData","listPress","pressData","createPress","destroyPress","showPress","listTeams","createTeam","destroyTeam","showTeam","addGroupTeams","teamsData","createPlayer","showPreferences","showUser","updateUser","createMatchesCalendar","listMatches","day","showMatch","listMatchScorers","listYellowCards","listDiffides","listSqualifications","updateCard","createMatch","matchDayId","createDay","dayData","destroyMatch","errorManager","go","getErrorString","full_messages","error_description","errors","myErr","datepicker","datepickerLink","watchInput","drp","elementChanged","daterangepicker","autoUpdateInput","locale","format","separator","ev","picker","model","startDate","endDate","singleDatePicker","compareTo","compareToLink","ngModel","$validators","modelvalue","otherModelValue","$validate","require","canDirective","watcher","shown","negative","permission","toShow","permName","can","slice","substr","$on","bootstrapMultiselect","bootstrapMultiselectLink","multiselect","terminal","LoginController","users","ezfb","onLoggedOut","user","configureFacebookCallbacks","TeamsController","list","createNewTeam","create","ScorersController","RegisterController","onLoggedIn","ProfileController","userTypes","num","userSubscriptions","updateForm","subscription","ScoreboardController","showScoreboard","ManagerMatchesController","updateMatchDay","listManaged","PlayersController","createNewPlayer","PressController","createNewPress","form2Press","ManagerEventsController","InvitationsController","createNewInvitation","form2Invitation","EventsController","tableFilters","eventFilter","boxClass","acceptInvitation","accept","listReceived","declineInvitation","decline","CalendarController","createNewMatch","createNewDay","form2Day","DisciplinaryController","all","listYellows","cardConfigs","header","emptyMessage","fields","controls","edit","delete","editDetail","deleteDetail","detailFields","daySqualifications","squalificationStatus","note","CreateEventController","Wizard","forceManualRounds","initDefaultTeams","step2","addTeam","roundType","round","index","step1Done","step1","submitStep1","step2Done","submitStep2","form2Teams","addGroup","step3Done","submitWizard","submitStep3","manualSubmit","AccessController","infoCalls","current","loggedIn","setAnonymousUser","bkp","unsetAnonymousUser","checkFacebookLogin","getLoginStatus","Event","subscribe","formData","extra","teamTime","time","captain","team_captain","team_time","team_name","phone","team_mobile_phone","place","team_place","team_groups","desc","team_description","player_name","player_surname","press_name","ranking","press_ranking","press_matches","press_scorers","yellowcards","press_yellowcards","diffide","press_diffide","press_squalifications","amends","press_amends","press_events","pres_even_id","undefined","listScorers","matchTime","matchDate","matc_id","matc_team_id_a","matc_team_id_b","matc_goal_team_a","matc_goal_team_b","dateExpected","matc_date_expected","matc_date_match","matc_time","address","matc_address","matc_name_groups","matc_flg_play","shootoutA","matc_shootout_team_a","shootoutB","matc_shootout_team_b","matc_place","team_id","play_id","play_name","play_surname","flg_cards","day_squalification","squalification_status","cardType","mada_name","mada_description","invModel","invitation_id","invitationId","mail_guest","mailGuest","even_id","guestEmail","mail_invitingmember","apiCall","matcScorerGoal","dateRange","even_name","even_description","even_email","even_address","even_type","organizer","even_organize_by","formula","even_formula","telephone","even_mobile_phone","yellowPoints","even_yellow_points","redPoints","even_red_points","yellowDiffide","even_yellow_diffide","yellowDiffide2","even_yellow_diffide2","even_date_start","even_date_end","region","regiId","regi_id","even_day_active","runBlock","$rootScope","defaultBodyClasses","stateChangeSuccess","toState","pms","params","bodyClasses","run","routerConfig","$stateProvider","$urlRouterProvider","requireLoggedIn","abstract","onEnter","otherwise","constant","malarkey","moment","$logProvider","toastrConfig","$animateProvider","$locationProvider","ezfbProvider","debugEnabled","classNameFilter","allowHtml","timeOut","positionClass","preventDuplicates","progressBar","html5Mode","hashPrefix","setLocale","setInitParams","appId","$templateCache","put"],"mappings":"CAAA,WACE,YAEAA,SACGC,OAAO,UACN,YACA,YACA,aACA,aACA,YACA,sBACA,SACA,OACA,eACA,4BAKN,WACE,YAOA,SAASC,KAqBP,QAASC,GAAmBC,EAAOC,EAAIC,EAASC,EAAQC,GACtD,GAAIC,GAAKC,IAETD,GAAGE,UAAYP,EAAMO,YACrBF,EAAGG,qBAAuBR,EAAMS,SAEhCJ,EAAGK,WAAa,SAAUC,GAExB,MADAN,GAAGO,SAAU,EACNX,EAAGY,QAAQF,IAGpBN,EAAGS,aAAe,SAAUH,GAE1B,MADAN,GAAGO,SAAU,EACNX,EAAGY,QAAQF,IAGpBN,EAAGU,WAAa,WACdV,EAAGK,WAAWL,EAAGW,MACdC,KAAKf,EAAQgB,WACbD,KAAK,SAAUE,GACd,MAAOjB,GAAQa,WAAWV,EAAGe,QAASD,EAAUd,EAAGgB,YAEpDJ,KAAKZ,EAAGiB,WALXjB,WAMWA,EAAGS,eAGhBT,EAAGkB,YAAc,SAAUC,GACzBnB,EAAGK,aACAO,KAAK,WACJ,MAAOf,GAAQuB,iBAAiBpB,EAAGe,QAASI,EAAKE,OAAQrB,EAAGgB,YAFhEhB,WAIWA,EAAGS,eAGhBT,EAAGsB,eAAiB,WAClBtB,EAAGW,MAASY,OAAQvB,EAAGuB,OAAQC,MAAO,EAAGC,OAAQ,IAGnDzB,EAAG0B,gBAAkB,WACnB5B,EAAO,iBAAmBE,EAAGuB,QAAQI,eACrC7B,EAAO,iBAAmBE,EAAGuB,QAAQK,iBAGvC5B,EAAGiB,UAAY,SAAUX,GAGvB,MAFAN,GAAGsB,iBACHtB,EAAG0B,kBACIpB,GAITN,EAAG6B,cAAgB,SAAUC,GAC3B,MAAGC,WAAUC,YACRzC,QAAQ0C,SAASH,IAClB9B,EAAGW,KAAKuB,KAAOJ,EACf9B,EAAGW,KAAKc,OAAS,GAEXlC,QAAQ4C,SAASL,IACvB9B,EAAGoC,aAAaN,IAIX9B,EAAGW,KAAKuB,MAKnBlC,EAAGqC,iBAAmB,SAAUP,GAC9B,MAAGC,WAAUC,YACRzC,QAAQ0C,SAASH,IAClB9B,EAAGW,KAAK2B,QAAUR,EAClB9B,EAAGW,KAAKc,OAAS,GAEXlC,QAAQ4C,SAASL,IACvB9B,EAAGoC,aAAaN,IAIX9B,EAAGW,KAAK2B,SAInBtC,EAAGoC,aAAe,SAAUG,GACvBhD,QAAQ0C,SAASM,EAAIL,QAAOlC,EAAGW,KAAKuB,KAAOK,EAAIL,MAC/C3C,QAAQ0C,SAASM,EAAID,WAAUtC,EAAGW,KAAK2B,QAAUC,EAAID,SACrD/C,QAAQiD,SAASD,EAAIhB,UAASvB,EAAGW,KAAKY,OAASgB,EAAIhB,QACnDhC,QAAQiD,SAASD,EAAId,UAASzB,EAAGW,KAAKc,OAASc,EAAId,SAGxD1B,EAAM0C,YAAYzC,EAAGuB,QAClBX,KAAK,SAAUN,GACdN,EAAG0C,gBACAnD,QAAQoD,QAAQrC,IACjBf,QAAQqD,QAAQtC,EAAK,SAAUuC,GAC7B7C,EAAG0C,aAAaI,MACdrB,OAAQoB,EAAGpB,OACXS,KAAMW,EAAGE,cACTT,QAASO,EAAGG,YACZzB,OAAQsB,EAAGI,iBAMrBjD,EAAGsB,iBA3HL5B,EAAmBwD,SAAW,QAAS,KAAM,UAAW,SAAU,QAAlE,IAAIC,IACFC,SAAU,KACVC,YAAa,yDACbC,WAAY5D,EACZ6D,aAAc,WACdC,kBAAkB,EAClBC,SAAS,EACTC,OACEC,MAAO,IACPC,SAAU,IACVrC,OAAQ,IACRR,QAAS,IACTC,SAAU,IACV0B,aAAc,KAIlB,OAAOS,GAvBT5D,QACGC,OAAO,UACP2D,UAAU,WAAY1D,MAqI3B,WACE,YAQA,SAASoE,KAoBP,QAASC,GAAqBnE,EAAOC,EAAIC,EAASE,EAAOD,GACvD,GAAIE,GAAKC,IACTD,GAAGI,OAAST,EAAMS,SAClBJ,EAAGI,OAAO2D,OAAO,EAAE,GAEnB/D,EAAGK,WAAa,SAAUC,GAExB,MADAN,GAAGO,SAAU,EACNX,EAAGY,QAAQF,IAGpBN,EAAGS,aAAe,SAAUH,GAE1B,MADAN,GAAGO,SAAU,EACNX,EAAGY,QAAQF,IAGpBN,EAAGgE,aAAe,WAChBhE,EAAGK,WAAWL,EAAGW,MACdC,KAAKf,EAAQoE,aACbrD,KAAK,SAAUsD,GACd,MAAOrE,GAAQmE,aAAahE,EAAGe,QAASmD,EAAYlE,EAAGmE,cAExDvD,KAAKZ,EAAGiB,WALXjB,WAMWA,EAAGS,eAGhBT,EAAGoE,cAAgB,SAAUC,GAC3BrE,EAAGK,aACAO,KAAK,WACJ,MAAOf,GAAQuE,cAAcpE,EAAGe,QAASsD,EAAO5C,OAAQzB,EAAGmE,cAF/DnE,WAIWA,EAAGS,eAGhBT,EAAGsB,eAAiB,WAClBtB,EAAGW,MAASY,OAAQvB,EAAGuB,OAAQC,MAAO,EAAGC,OAAQ,IAGnDzB,EAAG0B,gBAAkB,WACnB5B,EAAO,mBAAqBE,EAAGuB,QAAQI,eACvC7B,EAAO,mBAAqBE,EAAGuB,QAAQK,iBAGzC5B,EAAGiB,UAAY,SAAUX,GAGvB,MAFAN,GAAGsB,iBACHtB,EAAG0B,kBACIpB,GAITN,EAAG6B,cAAgB,SAAUC,GAC3B,MAAGC,WAAUC,YACRzC,QAAQ0C,SAASH,IAClB9B,EAAGW,KAAKuB,KAAOJ,EACf9B,EAAGW,KAAKc,OAAS,GAEXlC,QAAQ4C,SAASL,IACvB9B,EAAGoC,aAAaN,IAIX9B,EAAGW,KAAKuB,MAKnBlC,EAAGqC,iBAAmB,SAAUP,GAC9B,MAAGC,WAAUC,YACRzC,QAAQ0C,SAASH,IAClB9B,EAAGW,KAAK2B,QAAUR,EAClB9B,EAAGW,KAAKc,OAAS,GAEXlC,QAAQ4C,SAASL,IACvB9B,EAAGoC,aAAaN,IAIX9B,EAAGW,KAAK2B,SAInBtC,EAAGoC,aAAe,SAAUG,GACvBhD,QAAQ0C,SAASM,EAAIL,QAAOlC,EAAGW,KAAKuB,KAAOK,EAAIL,MAC/C3C,QAAQ0C,SAASM,EAAID,WAAUtC,EAAGW,KAAK2B,QAAUC,EAAID,SACrD/C,QAAQiD,SAASD,EAAIhB,UAASvB,EAAGW,KAAKY,OAASgB,EAAIhB,QACnDhC,QAAQiD,SAASD,EAAId,UAASzB,EAAGW,KAAKc,OAASc,EAAId,SAGxDzB,EAAGsB,iBA1GLwC,EAAqBZ,SAAW,QAAS,KAAM,UAAW,QAAS,SADnE,IAAIC,IACFC,SAAU,KACVC,YAAa,6DACbC,WAAYQ,EACZP,aAAc,aACdC,kBAAkB,EAClBC,SAAS,EACTC,OACEY,QAAS,IACTV,SAAU,IACVrC,OAAQ,IACRR,QAAS,IACT2B,aAAc,IACdyB,WAAY,KAIhB,OAAOhB,GAvBT5D,QACGC,OAAO,UACP2D,UAAU,aAAcU,MAqH7B,WACE,YAOA,SAASU,KAmBP,QAASC,MAGT,QAASC,GAAkBf,EAAOb,EAAI6B,EAAO1E,GACxCA,EAAG2E,OAAS3E,EAAG4E,OAAOC,YACvB7E,EAAG8E,QAAS,GAGZjC,EAAGkC,KAAK,oBAAoBC,QAAQC,SAAS,iBAC7CpC,EAAGkC,KAAK,aAAaC,QAAQE,QAG/BxB,EAAMyB,OAAO,mCAAoC,SAAUC,EAAQC,GAC9DD,IAAWC,IAEXD,IAAWpF,EAAG2E,MAAS3E,EAAG8E,OAKrBM,IAAWpF,EAAG2E,MAAQ3E,EAAG8E,SAC/B9E,EAAG8E,QAAS,EACZvF,QAAQ+F,QAAQC,SAASC,UAAUC,SAAS5C,EAAGkC,KAAK,oBANpD/E,EAAG8E,QAAS,EACZvF,QAAQ+F,QAAQC,SAASC,UAAUC,SAAS5C,EAAGkC,KAAK,sBAnC1D,GAAI5B,IACFC,SAAU,IACVC,YAAa,yDACbC,WAAYkB,EACZjB,aAAc,gBACdC,kBAAkB,EAClBE,OACEkB,OAAQ,IACRD,KAAM,IACNe,MAAO,KAETC,KAAMlB,EACNmB,YAAY,EAGd,OAAOzC,GArBT5D,QACGC,OAAO,UACP2D,UAAU,gBAAiBoB,MAoDhC,WACE,YAOA,SAASsB,KAeP,QAASC,KACP,GAAI9F,GAAKC,IAETD,GAAG+F,MAAQ,SAAUC,GACnB,MAAO,IAAIC,OAAMD,IAlBrB,GAAI7C,IACFC,SAAU,IACVC,YAAa,2DACbC,WAAYwC,EACZvC,aAAc,iBACdC,kBAAkB,EAClBE,OACEkB,OAAQ,KAIZ,OAAOzB,GAjBT5D,QACGC,OAAO,UACP2D,UAAU,iBAAkB0C,MA6BjC,WACE,YASA,SAASK,KAeP,QAASC,GAAmBC,EAAWrG,EAAOsG,GAC5C,GAAIrG,GAAKC,IAETD,GAAGsG,QAAU,WAEXF,EAAUG,MACNlD,YAAa,uCACbC,WAAY,wBACZC,aAAc,cACdiD,YAAa,iBACZC,OACF7F,KAAK,SAAUN,GACXA,KAAQ,GACTP,EAAMuG,QAAQtG,EAAG0G,SAKzB1G,EAAGqG,OAASA,EAId,QAASM,GAAajD,EAAOb,EAAI6B,EAAO1E,GACtC6C,EAAG+D,MACD,WACElD,EAAMmD,OAAO,WACX7G,EAAG8G,cAAe,KAGtB,WACEpD,EAAMmD,OAAO,WACX7G,EAAG8G,cAAe,MA7C1BX,EAAmBjD,SAAW,YAAa,QAAS,UACpDyD,EAAazD,SAAW,QAAS,KAAM,QAAS,KAHhD,IAAIC,IACFC,SAAU,KACVC,YAAa,iCACbC,WAAY6C,EACZ5C,aAAc,WACdC,kBAAkB,EAClBC,SAAS,EACTkC,KAAMgB,EACNjD,OACEgD,KAAM,aAIV,OAAOvD,GAnBT5D,QACGC,OAAO,UACP2D,UAAU,WAAY+C,MA4D3B,WACE,YAWA,SAASa,KAaP,QAASC,GAAmBX,EAAQzG,EAAIG,GACtC,GAAIC,GAAKC,IAETD,GAAGqG,OAASA,EAEZrG,EAAGK,WAAa,SAAUC,GAExB,MADAN,GAAGO,SAAU,EACNX,EAAGY,QAAQF,IAGpBN,EAAGS,aAAe,SAAUH,GAE1B,MADAN,GAAGO,SAAU,EACNX,EAAGY,QAAQF,IAGpBN,EAAGiH,OAAS,WACV,MAAOjH,GAAGK,WAAWL,EAAGW,MACrBC,KAAKb,EAAMmH,WACXtG,KAAK,SAAUuG,GACd,MAAOpH,GAAMqH,OAAOpH,EAAG0G,KAAKnF,OAAQ4F,KAHjCnH,WAKIA,EAAGS,eAIlB,QAAS4G,GAAa3D,EAAOb,EAAI6B,EAAO1E,GACtCA,EAAGsH,OAAS,WACVzE,EAAGkC,KAAK,mBAAmBU,SAAS,SAvCxCuB,EAAmB9D,SAAW,SAAU,KAAM,QAJ9C,IAAIC,IACFC,SAAU,KACVC,YAAa,iCACbC,WAAY0D,EACZzD,aAAc,WACdoC,KAAM0B,EACN7D,kBAAkB,EAClBC,SAAS,EACTC,OACEgD,KAAM,aAIV,OAAOvD,GAnBT5D,QACGC,OAAO,UACP2D,UAAU,WAAY4D,MAsD3B,WACE,YAOA,SAASQ,GAAsBC,GAC7B,GAAIxH,GAAKC,IAETD,GAAGyH,GAAK,WACND,EAAkBE,OAAM,IAG1B1H,EAAGsH,OAAS,WACVE,EAAkBG,WARtBJ,EAAsBrE,SAAW,qBALjC3D,QACGC,OAAO,UACP8D,WAAW,wBAAyBiE,MAgBzC,WACE,YAOA,SAASK,GAAqBJ,EAAmBnB,EAAQ1G,GACvD,GAAIK,GAAKC,IAETD,GAAG6H,WAAalI,EAAMmI,gBACtB9H,EAAGqG,OAASA,EAEZrG,EAAGyH,GAAK,WACNzH,EAAGO,SAAU,EACbiH,EAAkBE,MAAM1H,EAAGW,OAG7BX,EAAGsH,OAAS,WACVE,EAAkBG,WAXtBC,EAAqB1E,SAAW,oBAAqB,SAAU,SAN/D3D,QACGC,OAAO,UACP8D,WAAW,uBAAwBsE,MAoBxC,WACE,YAcA,SAASG,KAUP,QAASC,GAAqB5B,EAAWC,GACvC,GAAIrG,GAAKC,IACTD,GAAGqG,OAASA,EAId,QAAS4B,GAAevE,EAAOb,EAAI6B,EAAO1E,GACxC6C,EAAG+D,MACD,WACElD,EAAMmD,OAAO,WACX7G,EAAG8G,cAAe,KAGtB,WACEpD,EAAMmD,OAAO,WACX7G,EAAG8G,cAAe,MAxB1BkB,EAAqB9E,SAAW,YAAa,UAC7C+E,EAAe/E,SAAW,QAAS,KAAM,QAAS,KARlD,IAAIC,IACFC,SAAU,KACVC,YAAa,mCACbC,WAAY0E,EACZzE,aAAc,aACdC,kBAAkB,EAClBC,SAAS,EACTkC,KAAMsC,EACNvE,OACEW,OAAQ,eAIZ,OAAOlB,GAnBT5D,QACGC,OAAO,UACP2D,UAAU,aAAc4E,MA4C7B,WACE,YAgBA,SAASG,KAQP,QAASC,GAAqB9B,EAAQzG,EAAIwG,EAAWgC,GACnD,GAAIpI,GAAKC,IAETD,GAAGqG,OAASA,EAEZrG,EAAGK,WAAa,SAAUC,GAExB,MADAN,GAAGO,SAAU,EACNX,EAAGY,QAAQF,IAGpBN,EAAGS,aAAe,SAAUH,GAE1B,MADAN,GAAGO,SAAU,EACNX,EAAGY,QAAQF,IAGpBN,EAAGqI,qBAAuB,WACxBjC,EAAUG,MACNlD,YAAa,2CACbC,WAAY,8BACZC,aAAc,oBACdiD,YAAa,kBACZC,OACF7F,KAAK,SAAUN,GACXf,QAAQ+I,UAAUhI,IACnBN,EAAGK,WAAWC,GACXM,KAAKwH,EAAOG,kBACZ3H,KAAKwH,EAAOI,mBAFfxI,WAGWA,EAAGS,iBAMxB,QAASgI,GAAe/E,EAAOb,EAAI6B,EAAO1E,GACxCA,EAAGsH,OAAS,WACVzE,EAAGkC,KAAK,mBAAmBU,SAAS,SA1CxC0C,EAAqBjF,SAAW,SAAU,KAAM,YAAa,SAT7D,IAAIC,IACFC,SAAU,KACVC,YAAa,mCACbC,WAAY6E,EACZ5E,aAAc,aACdoC,KAAM8C,EACNjF,kBAAkB,EAClBC,SAAS,EACTC,OACEW,OAAQ,eAIZ,OAAOlB,GAnBT5D,QACGC,OAAO,UACP2D,UAAU,aAAc+E,MA8D7B,WACE,YAiBA,SAASQ,KAQP,QAASC,GAA0BvC,EAAWC,EAAQ1G,EAAOyI,GAC3D,GAAIpI,GAAKC,IACTD,GAAGI,OAAST,EAAMS,SAElBJ,EAAG4I,WAAa,WACd,MAAOR,GACJS,kBAAkBxC,EAAOyC,aAAaC,OAAQ/I,EAAGgJ,YAAYC,QAC5DC,aAAclJ,EAAGmJ,oBACjBC,UAAWpJ,EAAGW,KAAK0I,OAEpBzI,KAAK,WACJ,MAAOZ,GAAGqG,OAAOyC,aAAaC,SAE/BnI,KAAKwH,EAAOkB,aARRlB,WASIpI,EAAGS,eAGhBT,EAAGsG,QAAU,WAEXF,EAAUG,MACNlD,YAAa,6CACbC,WAAY,+BACZC,aAAc,qBACdiD,YAAa,iBACZC,OACF7F,KAAK,SAAUN,GACXA,KAAQ,GACT8H,EAAOmB,mBAAmBlD,EAAOyC,aAAaC,OAAQ/I,EAAGmJ,oBAAqBnJ,EAAGgJ,gBAKzFhJ,EAAGqG,OAASA,EAId,QAASmD,GAAoB9F,EAAOb,EAAI6B,EAAO1E,GAC7C6C,EAAG+D,MACD,WACElD,EAAMmD,OAAO,WACX7G,EAAG8G,cAAe,KAGtB,WACEpD,EAAMmD,OAAO,WACX7G,EAAG8G,cAAe,MApD1B6B,EAA0BzF,SAAW,YAAa,SAAU,QAAS,UACrEsG,EAAoBtG,SAAW,QAAS,KAAM,QAAS,KAXvD,IAAIC,IACFC,SAAU,KACVC,YAAa,uCACbC,WAAYqF,EACZpF,aAAc,kBACdC,kBAAkB,EAClBC,SAAS,EACTkC,KAAM6D,EACN9F,OACEsF,YAAa,mBACbG,oBAAqB,wBAIzB,OAAOhG,GApBT5D,QACGC,OAAO,UACP2D,UAAU,kBAAmBuF,MA2ElC,WACE,YAOA,SAASe,GAA6BjC,GACpC,GAAIxH,GAAKC,IAETD,GAAGyH,GAAK,WACND,EAAkBE,OAAM,IAG1B1H,EAAGsH,OAAS,WACVE,EAAkBG,WADtB8B,EAA6BvG,SAAW,qBAZxC3D,QACGC,OAAO,UACP8D,WAAW,+BAAgCmG,MAgBhD,WACE,YAoBA,SAASC,KAIP,QAASC,GAA2BvD,EAAWvG,EAASwG,GACtD,GAAIrG,GAAKC,IACTD,GAAGqG,OAASA,EAId,QAASuD,GAAqBlG,EAAOb,EAAI6B,EAAO1E,GAC9C6C,EAAG+D,MACD,WACElD,EAAMmD,OAAO,WACX7G,EAAG8G,cAAe,KAGtB,WACEpD,EAAMmD,OAAO,WACX7G,EAAG8G,cAAe,MAlB1B6C,EAA2BzG,SAAW,YAAa,UAAW,UAC9D0G,EAAqB1G,SAAW,QAAS,KAAM,QAAS,KAdxD,IAAIC,IACFC,SAAU,KACVC,YAAa,0CACbC,WAAYqG,EACZpG,aAAc,mBACdC,kBAAkB,EAClBC,SAAS,EACTkC,KAAMiE,EACNlG,OACEmG,MAAO,qBAIX,OAAO1G,GAnBT5D,QACGC,OAAO,UACP2D,UAAU,mBAAoBuG,MA4CnC,WACE,YAsBA,SAASI,KAEP,QAASC,GAA2B1D,EAAQzG,EAAIC,EAASF,GACvD,GAAIK,GAAKC,IAETD,GAAGqG,OAASA,EAEZrG,EAAGK,WAAa,SAAUC,GAExB,MADAN,GAAGO,SAAU,EACNX,EAAGY,QAAQF,IAGpBN,EAAGS,aAAe,SAAUH,GAE1B,MADAN,GAAGO,SAAU,EACNX,EAAGY,QAAQF,IAGpBN,EAAGiH,OAAS,WACV,MAAOjH,GAAGK,WAAWL,EAAGW,MACrBC,KAAKf,EAAQmK,YACbpJ,KAAK,SAAUqJ,GACd,MAAOpK,GAAQuH,OAAOpH,EAAG6J,MAAMK,UAAWD,KAHvCjK,WAKIA,EAAGS,eAGhBT,EAAGI,OAAST,EAAMS,SAElBJ,EAAGW,MAASI,QAASf,EAAG6J,MAAMZ,QAGhC,QAASkB,GAAqBzG,EAAOb,EAAI6B,EAAO1E,GAC9CA,EAAGsH,OAAS,WACVzE,EAAGkC,KAAK,mBAAmBU,SAAS,SAhCxCsE,EAA2B7G,SAAW,SAAU,KAAM,UAAW,QAfjE,IAAIC,IACFC,SAAU,KACVC,YAAa,0CACbC,WAAYyG,EACZxG,aAAc,mBACdoC,KAAMwE,EACN3G,kBAAkB,EAClBC,SAAS,EACTC,OACEmG,MAAO,qBAIX,OAAO1G,GAnBT5D,QACGC,OAAO,UACP2D,UAAU,mBAAoB2G,MA0DnC,WACE,YAuBA,SAASM,KACP,QAASC,GAAqBjE,EAAWrG,EAAOsG,GAC9C,GAAIrG,GAAKC,IAETD,GAAGsG,QAAU,WAEXF,EAAUG,MACNlD,YAAa,yCACbC,WAAY,0BACZC,aAAc,gBACdiD,YAAa,iBACZC,OACF7F,KAAK,SAAUN,GACXA,KAAQ,GACTP,EAAMuK,cAActK,EAAGuK,WAK/BvK,EAAGqG,OAASA,EAId,QAASmE,GAAe9G,EAAOb,EAAI6B,EAAO1E,GACxC6C,EAAG+D,MACD,WACElD,EAAMmD,OAAO,WACX7G,EAAG8G,cAAe,KAGtB,WACEpD,EAAMmD,OAAO,WACX7G,EAAG8G,cAAe,MA/B1BuD,EAAqBnH,SAAW,YAAa,QAAS,UACtDsH,EAAetH,SAAW,QAAS,KAAM,QAAS,KAjBlD,IAAIC,IACFC,SAAU,KACVC,YAAa,mCACbC,WAAY+G,EACZ9G,aAAc,aACdC,kBAAkB,EAClBC,SAAS,EACTkC,KAAM6E,EACN9G,OACE6G,OAAQ,eAIZ,OAAOpH,GAnBT5D,QACGC,OAAO,UACP2D,UAAU,aAAciH,MA4D7B,WACE,YAyBA,SAASK,KADP,QAASC,GAAqBrE,EAAQzG,EAAIG,EAAOJ,GAC/C,GAAIK,GAAKC,IAETD,GAAGqG,OAASA,EAEZrG,EAAGK,WAAa,SAAUC,GAExB,MADAN,GAAGO,SAAU,EACNX,EAAGY,QAAQF,IAGpBN,EAAGS,aAAe,SAAUH,GAE1B,MADAN,GAAGO,SAAU,EACNX,EAAGY,QAAQF,IAGpBN,EAAGiH,OAAS,WACV,MAAOjH,GAAGK,WAAWL,EAAGW,MACrBC,KAAKb,EAAM4K,aACX/J,KAAK,SAAUgK,GACd,MAAO7K,GAAM8K,aAAa7K,EAAGuK,OAAO9I,OAAQmJ,KAHzC5K,WAKIA,EAAGS,eAGhBT,EAAGI,OAAST,EAAMS,SAElBJ,EAAGW,QAGL,QAASmK,GAAepH,EAAOb,EAAI6B,EAAO1E,GACxCA,EAAGsH,OAAS,WACVzE,EAAGkC,KAAK,mBAAmBU,SAAS,SA7BxCiF,EAAqBxH,SAAW,SAAU,KAAM,QAAS,QAlBzD,IAAIC,IACFC,SAAU,KACVC,YAAa,mCACbC,WAAYoH,EACZnH,aAAc,aACdoC,KAAMmF,EACNtH,kBAAkB,EAClBC,SAAS,EACTC,OACE6G,OAAQ,eAIZ,OAAOpH,GAnBT5D,QACGC,OAAO,UACP2D,UAAU,aAAcsH,MA0D7B,WACE,YAOA,SAASM,GAAuBvD,GAC9B,GAAIxH,GAAKC,IAETD,GAAGyH,GAAK,WACND,EAAkBE,OAAM,IAG1B1H,EAAGsH,OAAS,WACVE,EAAkBG,WAMtBoD,EAAuB7H,SAAW,qBAnBlC3D,QACGC,OAAO,UACP8D,WAAW,yBAA0ByH,MAgB1C,WACE,YAOA,SAASC,GAAuBxD,EAAmBnB,EAAQ1G,GACzD,GAAIK,GAAKC,IAETD,GAAGI,OAAST,EAAMS,SAClBJ,EAAGqG,OAASA,EAEZrG,EAAGyH,GAAK,WACNzH,EAAGO,SAAU,EACbiH,EAAkBE,MAAM1H,EAAGW,OAG7BX,EAAGsH,OAAS,WACVE,EAAkBG,WAGtBqD,EAAuB9H,SAAW,oBAAqB,SAAU,SApBjE3D,QACGC,OAAO,UACP8D,WAAW,yBAA0B0H,MAoB1C,WACE,YA4BA,SAASC,KAJP,QAASC,GAAoB9E,EAAW+E,EAAO9E,GAC7C,GAAIrG,GAAKC,IAETD,GAAGsG,QAAU,WAEXF,EAAUG,MACNlD,YAAa,uCACbC,WAAY,yBACZC,aAAc,eACdiD,YAAa,iBACZC,OACF7F,KAAK,SAAUN,GACXA,KAAQ,GACT6K,EAAM7E,QAAQtG,EAAGmL,UAKzBnL,EAAGqG,OAASA,EAId,QAAS+E,GAAc1H,EAAOb,EAAI6B,EAAO1E,GACvC6C,EAAG+D,MACD,WACElD,EAAMmD,OAAO,WACX7G,EAAG8G,cAAe,KAGtB,WACEpD,EAAMmD,OAAO,WACX7G,EAAG8G,cAAe,MA1B1BoE,EAAoBhI,SAAW,YAAa,QAAS,UACrDkI,EAAclI,SAAW,QAAS,KAAM,QAAS,KAtBjD,IAAIC,IACFC,SAAU,KACVC,YAAa,iCACbC,WAAY4H,EACZ3H,aAAc,YACdC,kBAAkB,EAClBC,SAAS,EACTkC,KAAMyF,EACN1H,OACEyH,MAAO,cAIX,OAAOhI,GAnBT5D,QACGC,OAAO,UACP2D,UAAU,YAAa8H,MA4D5B,WACE,YAOA,SAASI,GAAuB7D,GAC9B,GAAIxH,GAAKC,IAETD,GAAGyH,GAAK,WACND,EAAkBE,OAAM,IAG1B1H,EAAGsH,OAAS,WACVE,EAAkBG,WAUtB0D,EAAuBnI,SAAW,qBAvBlC3D,QACGC,OAAO,UACP8D,WAAW,yBAA0B+H,MAgB1C,WACE,YAOA,SAASC,GAAsB9D,EAAmBnB,EAAQ1G,GACxD,GAAIK,GAAKC,IACTD,GAAGqG,OAASA,EAEZrG,EAAGoI,OAAS7I,QAAQgM,KAAKlF,EAAO+B,QAChCpI,EAAGwL,uBAAyB7L,EAAM8L,gCAElCzL,EAAGyH,GAAK,WACNzH,EAAGO,SAAU,EACbiH,EAAkBE,MAAM1H,EAAGW,OAG7BX,EAAGsH,OAAS,WACVE,EAAkBG,WAGpB3H,EAAG0L,eAECC,IAAK,UACLzJ,KAAM,oBACN0J,UAEIC,GAAI,EACJ3J,KAAM,OAGN2J,GAAI,EACJ3J,KAAM,SAKVyJ,IAAK,UACLzJ,KAAM,kBACN0J,UAEIC,GAAI,EACJ3J,KAAM,4BAGN2J,GAAI,EACJ3J,KAAM,uCAGN2J,GAAI,EACJ3J,KAAM,0BAKVyJ,IAAK,UACLzJ,KAAM,mBACN0J,UAEIC,GAAI,EACJ3J,KAAM,oBAGN2J,GAAI,EACJ3J,KAAM,mBAGN2J,GAAI,EACJ3J,KAAM,wBAKVyJ,IAAK,cACLzJ,KAAM,kBACN0J,UAEIC,GAAI,EACJ3J,KAAM,OAGN2J,GAAI,EACJ3J,KAAM,SAKVyJ,IAAK,UACLzJ,KAAM,iBACN0J,UAEIC,GAAI,EACJ3J,KAAM,OAGN2J,GAAI,EACJ3J,KAAM,SAKVyJ,IAAK,kBACLzJ,KAAM,qBACN0J,UAEIC,GAAI,EACJ3J,KAAM,OAGN2J,GAAI,EACJ3J,KAAM,SAKVyJ,IAAK,SACLzJ,KAAM,iBACN0J,UAEIC,GAAI,EACJ3J,KAAM,OAGN2J,GAAI,EACJ3J,KAAM,SApGhBoJ,EAAsBpI,SAAW,oBAAqB,SAAU,SAxBhE3D,QACGC,OAAO,UACP8D,WAAW,wBAAyBgI,MAkIzC,WACE,YAgCA,SAASQ,KARP,QAASC,GAAyB3F,EAAW4F,EAAa3F,GACxD,GAAIrG,GAAKC,IAETD,GAAGsG,QAAU,WAEXF,EAAUG,MACNlD,YAAa,6CACbC,WAAY,8BACZC,aAAc,oBACdiD,YAAa,iBACZC,OACF7F,KAAK,SAAUN,GACXA,KAAQ,GACT0L,EACG1F,QAAQtG,EAAGiM,YACXrL,KAAKoL,EAAYE,aAK5BlM,EAAGqG,OAASA,EAId,QAAS8F,GAAmBzI,EAAOb,EAAI6B,EAAO1E,GAC5C6C,EAAG+D,MACD,WACElD,EAAMmD,OAAO,WACX7G,EAAG8G,cAAe,KAGtB,WACEpD,EAAMmD,OAAO,WACX7G,EAAG8G,cAAe,MAxB1BiF,EAAyB7I,SAAW,YAAa,cAAe,UAChEiJ,EAAmBjJ,SAAW,QAAS,KAAM,QAAS,KA1BtD,IAAIC,IACFC,SAAU,KACVC,YAAa,uCACbC,WAAYyI,EACZxI,aAAc,iBACdC,kBAAkB,EAClBC,SAAS,EACTkC,KAAMwG,EACNzI,OACEuI,WAAY,mBAIhB,OAAO9I,GAnBT5D,QACGC,OAAO,UACP2D,UAAU,iBAAkB2I,MA8DjC,WACE,YAOA,SAASM,GAA4B5E,GACnC,GAAIxH,GAAKC,IAETD,GAAGyH,GAAK,WACND,EAAkBE,OAAM,IAG1B1H,EAAGsH,OAAS,WACVE,EAAkBG,WActByE,EAA4BlJ,SAAW,qBA3BvC3D,QACGC,OAAO,UACP8D,WAAW,8BAA+B8I,MAgB/C,WACE,YAOA,SAASC,GAA2B7E,EAAmBnB,EAAQ1G,GAC7D,GAAIK,GAAKC,IACTD,GAAGoI,OAAS7I,QAAQgM,KAAKlF,EAAO+B,QAChCpI,EAAGwL,uBAAyB7L,EAAM8L,gCAElCzL,EAAGyH,GAAK,WACNzH,EAAGO,SAAU,EACbiH,EAAkBE,MAAM1H,EAAGW,OAG7BX,EAAGsH,OAAS,WACVE,EAAkBG,WAYtB0E,EAA2BnJ,SAAW,oBAAqB,SAAU,SA5BrE3D,QACGC,OAAO,UACP8D,WAAW,6BAA8B+I,MAmB9C,WACE,YAqCA,SAASC,GAAUlE,GAZjB,QAASmE,GAAoBlG,EAAQD,GACnC,GAAIpG,GAAKC,IAETD,GAAGsG,QAAU,WAEXF,EAAUG,MACNlD,YAAa,wCACbC,WAAY,yBACZC,aAAc,eACdiD,YAAa,iBACZC,OACF7F,KAAK,SAAUN,GACXA,KAAQ,GACT8H,EAAO9B,QAAQtG,EAAGwM,UAK1BxM,EAAGqG,OAASA,EAId,QAASoG,GAAc/I,EAAOb,EAAI6B,EAAO1E,GACvC6C,EAAG+D,MACD,WACElD,EAAMmD,OAAO,WACX7G,EAAG8G,cAAe,KAGtB,WACEpD,EAAMmD,OAAO,WACX7G,EAAG8G,cAAe,MAlB1ByF,EAAoBrJ,SAAW,SAAU,aACzCuJ,EAAcvJ,SAAW,QAAS,KAAM,QAAS,KA/BjD,IAAIC,IACFC,SAAU,KACVC,YAAa,kCACbC,WAAYiJ,EACZhJ,aAAc,YACdC,kBAAkB,EAClBC,SAAS,EACTkC,KAAM8G,EACN/I,OACE8I,MAAO,aACPE,aAAc,KAIlB,OAAOvJ,GASTmJ,EAAUpJ,SAAW,UA7BrB3D,QACGC,OAAO,UACP2D,UAAU,YAAamJ,MA6D5B,WACE,YAOA,SAASK,GAAgCnF,GACvC,GAAIxH,GAAKC,IAETD,GAAGyH,GAAK,WACND,EAAkBE,OAAM,IAG1B1H,EAAGsH,OAAS,WACVE,EAAkBG,WAmBtBgF,EAAgCzJ,SAAW,qBAhC3C3D,QACGC,OAAO,UACP8D,WAAW,kCAAmCqJ,MAgBnD,WACE,YAyCA,SAASC,GAAUxE,GAjBjB,QAASyE,GAAoBxG,EAAQxG,EAASuG,EAAWxG,EAAID,GAC3D,GAAIK,GAAKC,IAETD,GAAGqG,OAASA,EACZrG,EAAG8M,cAAgBnN,EAAMS,SAEzBJ,EAAGK,WAAa,SAAUC,GAExB,MADAN,GAAGO,SAAU,EACNX,EAAGY,QAAQF,IAGpBN,EAAGS,aAAe,SAAUH,GAE1B,MADAN,GAAGO,SAAU,EACNX,EAAGY,QAAQF,IAGpBN,EAAGiH,OAAS,WACV,MAAOjH,GAAGK,WAAWL,EAAGW,MACrBC,KAAKwH,EAAO2E,YACZnM,KAAK,SAAUoM,GACd,MAAO5E,GAAOhB,OAAOpH,EAAGwM,MAAMzD,OAAQiE,KAHnChN,WAKIA,EAAGS,eAGhBT,EAAGiN,QAAU,WACX,MAAOjN,GAAGK,aACPO,KAAK,WACJ,MAAOwH,GAAOhB,OAAOpH,EAAGwM,MAAMzD,QAASmE,kBAAmB,MAFvDlN,WAIIA,EAAGS,eAGhBT,EAAGmN,UAAY,WACb,MAAOnN,GAAGK,aACPO,KAAK,WACJ,MAAOwH,GAAOhB,OAAOpH,EAAGwM,MAAMzD,QAASmE,kBAAmB,MAFvDlN,WAIIA,EAAGS,eAGhBT,EAAGoN,iBAAmB,WACpBhH,EAAUG,MACRlD,YAAa,8CACbC,WAAY,kCACZC,aAAc,wBACdiD,YAAa,kBACZC,OACF7F,KAAK,SAAUN,GACd,MAAGA,MAAQ,EACFN,EAAGK,WAAWL,EAAGwM,MAAMzD,QAC3BnI,KAAKf,EAAQwN,gBACbzM,KAAK,WACJ,MAAOwH,GAAOkF,KAAKtN,EAAGwM,MAAMzD,UAHzB/I,WAKIA,EAAGS,cANhB,UAaN,QAAS8M,GAAc7J,EAAOb,EAAI6B,EAAO1E,GAEvC6C,EAAGkC,KAAK,mBAAmByI,GAAG,mBAAoB,WAChDpF,EAAOkF,KAAKtN,EAAGwM,MAAMzD,QACrBX,EAAOqF,gBAGTzN,EAAGsH,OAAS,WACVzE,EAAGkC,KAAK,mBAAmBU,SAAS,SAGtC/B,EAAMyB,OAAO,iCAAkC,SAAUC,EAAQC,GAC5D9F,QAAQ+I,UAAUlD,IAAWA,IAAWC,IACzCrF,EAAGW,KAAK+M,WAAa1N,EAAGwM,MAAMmB,kBAzDpCd,EAAoB3J,SAAW,SAAU,UAAW,YAAa,KAAM,QAlCvE,IAAIC,IACFC,SAAU,KACVC,YAAa,kCACbC,WAAYuJ,EACZtJ,aAAc,YACdoC,KAAM4H,EACN/J,kBAAkB,EAClBC,SAAS,EACTC,OACE8I,MAAO,cAIX,OAAOrJ,GAcTyJ,EAAU1J,SAAW,UAjCrB3D,QACGC,OAAO,UACP2D,UAAU,YAAayJ,MAuG5B,WACE,YAOA,SAASgB,GAAuBpG,GAC9B,GAAIxH,GAAKC,IAETD,GAAGyH,GAAK,WACND,EAAkBE,OAAM,IAG1B1H,EAAGsH,OAAS,WACVE,EAAkBG,WAsBtBiG,EAAuB1K,SAAW,qBAnClC3D,QACGC,OAAO,UACP8D,WAAW,yBAA0BsK,MAgB1C,WACE,YA2CA,SAASC,KAnBP,QAASC,GAAoB1H,EAAWvG,EAASwG,GAC/C,GAAIrG,GAAKC,IAETD,GAAGsG,QAAU,WAEXF,EAAUG,MACNlD,YAAa,0CACbC,WAAY,yBACZC,aAAc,eACdiD,YAAa,iBACZC,OACF7F,KAAK,SAAUN,GACXA,KAAQ,GACTT,EAAQyG,QAAQtG,EAAG6J,UAK3B7J,EAAG+N,aAAe,WAChB3H,EAAUG,MACJlD,YAAa,oDACbC,WAAY,8BACZC,aAAc,eACdiD,YAAa,gBACbwH,KAAM,KACNxN,SAAUqJ,MAAO7J,EAAG6J,SACrBpD,OACF7F,QAGLZ,EAAGqG,OAASA,EAId,QAAS4H,GAAcvK,EAAOb,EAAI6B,EAAO1E,GACvC6C,EAAG+D,MACD,WACElD,EAAMmD,OAAO,WACX7G,EAAG8G,cAAe,KAGtB,WACEpD,EAAMmD,OAAO,WACX7G,EAAG8G,cAAe,MAvB1BgH,EAAoB5K,SAAW,YAAa,UAAW,UACvD+K,EAAc/K,SAAW,QAAS,KAAM,QAAS,KArCjD,IAAIC,IACFC,SAAU,KACVC,YAAa,oCACbC,WAAYwK,EACZvK,aAAc,YACdC,kBAAkB,EAClBC,SAAS,EACTkC,KAAMsI,EACNvK,OACEmG,MAAO,cAIX,OAAO1G,GAnBT5D,QACGC,OAAO,UACP2D,UAAU,YAAa0K,MAwE5B,WACE,YA6CA,SAASK,KArBP,QAASC,GAAoB9H,EAAQzG,EAAIC,EAASF,EAAOG,GACvD,GAAIE,GAAKC,IAETD,GAAGqG,OAASA,EAEZrG,EAAGK,WAAa,SAAUC,GAExB,MADAN,GAAGO,SAAU,EACNX,EAAGY,QAAQF,IAGpBN,EAAGS,aAAe,SAAUH,GAE1B,MADAN,GAAGO,SAAU,EACNX,EAAGY,QAAQF,IAGpBN,EAAGiH,OAAS,WACV,MAAOjH,GAAGK,WAAWL,EAAGW,MACrBC,KAAKf,EAAQmK,YACbpJ,KAAK,SAAUqJ,GACd,MAAOpK,GAAQuH,OAAOpH,EAAG6J,MAAMK,UAAWD,KAHvCjK,WAKIA,EAAGS,eAGhBT,EAAGI,OAAST,EAAMS,SAElBJ,EAAGW,MAASI,QAASf,EAAG6J,MAAMZ,QAE9BnJ,EAAOqF,OAAO,iCAAkC,SAAUC,EAAQC,GAC7DD,IAAWC,IACZrF,EAAGW,KAAKyN,OAAShJ,KAGrBtF,EAAOqF,OAAO,iCAAkC,SAAUC,EAAQC,GAC7DD,IAAWC,IACZrF,EAAGW,KAAK0N,OAASjJ,KAKvB,QAASkJ,GAAc5K,EAAOb,EAAI6B,EAAO1E,GACvCA,EAAGsH,OAAS,WACVzE,EAAGkC,KAAK,mBAAmBU,SAAS,SApBxC0I,EAAoBjL,SAAW,SAAU,KAAM,UAAW,QAAS,SAtCnE,IAAIC,IACFC,SAAU,KACVC,YAAa,oCACbC,WAAY6K,EACZ5K,aAAc,YACdoC,KAAM2I,EACN9K,kBAAkB,EAClBC,SAAS,EACTC,OACEmG,MAAO,cAIX,OAAO1G,GAnBT5D,QACGC,OAAO,UACP2D,UAAU,YAAa+K,MAqE5B,WACE,YAOA,SAASnD,GAAuBvD,GAC9B,GAAIxH,GAAKC,IAETD,GAAGyH,GAAK,WACND,EAAkBE,OAAM,IAG1B1H,EAAGsH,OAAS,WACVE,EAAkBG,WA0BtBoD,EAAuB7H,SAAW,qBAvClC3D,QACGC,OAAO,UACP8D,WAAW,yBAA0ByH,MAgB1C,WACE,YAOA,SAASwD,GAAoB/G,EAAmBnB,GAC9C,GAAIrG,GAAKC,IAETD,GAAGqG,OAASA,EAEZrG,EAAGyH,GAAK,WACNzH,EAAGO,SAAU,EACbiH,EAAkBE,MAAM1H,EAAGW,OAG7BX,EAAGsH,OAAS,WACVE,EAAkBG,WAwBtB4G,EAAoBrL,SAAW,oBAAqB,UAxCpD3D,QACGC,OAAO,UACP8D,WAAW,sBAAuBiL,MAmBvC,WACE,YAOA,SAASC,GAAsBhH,EAAmBnB,EAAQ1G,GACxD,GAAIK,GAAKC,IAETD,GAAGI,OAAST,EAAMS,SAClBJ,EAAGqG,OAASA,EAEZrG,EAAGyH,GAAK,WACNzH,EAAGO,SAAU,EACbiH,EAAkBE,MAAM1H,EAAGW,OAG7BX,EAAGsH,OAAS,WACVE,EAAkBG,WAwBtB6G,EAAsBtL,SAAW,oBAAqB,SAAU,SAzChE3D,QACGC,OAAO,UACP8D,WAAW,wBAAyBkL,MAoBzC,WACE,YAOA,SAASC,GAA4B7O,EAAI4H,EAAmBqC,EAAOlK,EAAOE,EAASE,GACjF,GAAIC,GAAKC,IACTD,GAAG6J,MAAQA,EACX7J,EAAGI,OAAST,EAAMS,SAElBJ,EAAGyH,GAAK,WACND,EAAkBE,OAAM,IAG1B1H,EAAGsH,OAAS,WACVE,EAAkBG,WAGpB3H,EAAGiH,OAAS,WACV,MAAOjH,GAAGK,WAAWL,EAAGW,MACrBC,KAAKf,EAAQmK,YACbpJ,KAAK,SAAUqJ,GACd,MAAOpK,GAAQuH,OAAOpH,EAAG6J,MAAMK,UAAWD,MAIhDjK,EAAGK,WAAa,SAAUC,GAExB,MADAN,GAAGO,SAAU,EACNX,EAAGY,QAAQF,IAGpBN,EAAGS,aAAe,SAAUH,GAE1B,MADAN,GAAGO,SAAU,EACNX,EAAGY,QAAQF,IAGpBN,EAAGW,MACDI,QAASf,EAAG6J,MAAMZ,OAClByF,OAASnN,OAAQvB,EAAG6J,MAAM8E,aAC1BC,OAASrN,OAAQvB,EAAG6J,MAAMgF,aAC1BC,QAAUC,MAAO/O,EAAG6J,MAAMmF,cAG5BhP,EAAGiP,sBAAwB,SAAUC,GACnC,GAAIxM,KAWJ,OAVGnD,SAAQoD,QAAQuM,IACjB3P,QAAQqD,QAAQsM,EAAS,SAAU3E,GACjC7H,EAAaI,MACXrB,OAAQ8I,EAAO9I,OACfS,KAAMqI,EAAOxH,cACbT,QAASiI,EAAOvH,YAChBzB,OAAQgJ,EAAOtH,eAIdP,GAGT1C,EAAGmP,iBACHnP,EAAGoP,iBAEHvP,EAAQyN,KAAKtN,EAAG6J,MAAMZ,QACnBrI,KAAK,WACJb,EACG0C,YAAYzC,EAAG6J,MAAM8E,aACrB/N,KAAKZ,EAAGiP,uBACRrO,KAAK,SAAUN,GACdN,EAAGmP,cAAgB7O,IAEvBP,EACG0C,YAAYzC,EAAG6J,MAAMgF,aACrBjO,KAAKZ,EAAGiP,uBACRrO,KAAK,SAAUN,GACdN,EAAGoP,cAAgB9O,MA/B7BmO,EAA4BvL,SAAW,KAAM,oBAAqB,QAAS,QAAS,UAAW,SA1C/F3D,QACGC,OAAO,UACP8D,WAAW,8BAA+BmL,MA6E/C,WACE,YAkDA,SAASY,KAzBP,QAASC,GAAmBlJ,EAAWvG,EAASwG,GAC9C,GAAIrG,GAAKC,IAETD,GAAGsG,QAAU,WAEXF,EAAUG,MACNlD,YAAa,8CACbC,WAAY,wBACZC,aAAc,cACdiD,YAAa,iBACZC,OACF7F,KAAK,SAAUN,GACXA,KAAQ,GACTT,EAAQyG,QAAQtG,EAAGmB,SAK3BnB,EAAGqG,OAASA,EAId,QAASkJ,GAAa7L,EAAOb,EAAI6B,EAAO1E,GACtC6C,EAAG+D,MACD,WACElD,EAAMmD,OAAO,WACX7G,EAAG8G,cAAe,KAGtB,WACEpD,EAAMmD,OAAO,WACX7G,EAAG8G,cAAe,MAL1BwI,EAAmBpM,SAAW,YAAa,UAAW,UACtDqM,EAAarM,SAAW,QAAS,KAAM,QAAS,KA5ChD,IAAIC,IACFC,SAAU,KACVC,YAAa,wCACbC,WAAYgM,EACZ/L,aAAc,WACdC,kBAAkB,EAClBC,SAAS,EACTkC,KAAM4J,EACN7L,OACEvC,KAAM,YACNqO,OAAQ,KAIZ,OAAOrM,GApBT5D,QACGC,OAAO,UACP2D,UAAU,WAAYkM,MA6D3B,WACE,YAoDA,SAASI,KA3BP,QAASC,GAAmBrJ,EAAQzG,GAClC,GAAII,GAAKC,IAETD,GAAGqG,OAASA,EAEZrG,EAAGK,WAAa,SAAUC,GAExB,MADAN,GAAGO,SAAU,EACNX,EAAGY,QAAQF,IAGpBN,EAAGS,aAAe,SAAUH,GAE1B,MADAN,GAAGO,SAAU,EACNX,EAAGY,QAAQF,IAItB,QAASqP,GAAajM,EAAOb,EAAI6B,EAAO1E,GACtCA,EAAGsH,OAAS,WACVzE,EAAGkC,KAAK,mBAAmBU,SAAS,SAUxCiK,EAAmBxM,SAAW,SAAU,KA7CxC,IAAIC,IACFC,SAAU,KACVC,YAAa,wCACbC,WAAYoM,EACZnM,aAAc,WACdoC,KAAMgK,EACNnM,kBAAkB,EAClBC,SAAS,EACTC,OACEvC,KAAM,YACNqO,OAAQ,KAIZ,OAAOrM,GApBT5D,QACGC,OAAO,UACP2D,UAAU,WAAYsM,MA8C3B,WACE,YAqDA,SAASG,KA3BP,QAASjH,GAA0BvC,EAAWC,EAAQ1G,EAAOE,GAC3D,GAAIG,GAAKC,IACTD,GAAGI,OAAST,EAAMS,SAElBJ,EAAGiH,OAAS,WACV,MAAOpH,GACJgQ,eAAe7P,EAAGW,MAClBC,KAAK,SAAUE,GACd,MAAOjB,GAAQiQ,gBACb9P,EAAG+P,UAAU9G,OACbjJ,EAAGgQ,kBACHhQ,EAAG+P,UAAU1O,OACbrB,EAAGgB,SACHhB,EAAGiQ,aACHnP,MAKRd,EAAGsG,QAAU,WAEXF,EAAUG,MACNlD,YAAa,2CACbC,WAAY,6BACZC,aAAc,mBACdiD,YAAa,iBACZC,OACF7F,KAAK,SAAUN,GACXA,KAAQ,GACTT,EAAQqQ,iBAAiBlQ,EAAG+P,UAAU9G,OAAQjJ,EAAGgQ,kBAAmBhQ,EAAG+P,UAAU1O,OAAQrB,EAAGwP,OAAOxO,SAAUhB,EAAGwP,OAAOS,iBAK/HjQ,EAAGqG,OAASA,EAId,QAASmD,GAAoB9F,EAAOb,EAAI6B,EAAO1E,GAC7C6C,EAAG+D,MACD,WACElD,EAAMmD,OAAO,WACX7G,EAAG8G,cAAe,KAGtB,WACEpD,EAAMmD,OAAO,WACX7G,EAAG8G,cAAe,MAnB1B6B,EAA0BzF,SAAW,YAAa,SAAU,QAAS,WACrEsG,EAAoBtG,SAAW,QAAS,KAAM,QAAS,KA/CvD,IAAIC,IACFC,SAAU,KACVC,YAAa,qCACbC,WAAYqF,EACZpF,aAAc,gBACdC,kBAAkB,EAClBC,SAAS,EACTkC,KAAM6D,EACN9F,OACEqM,UAAW,iBACXP,OAAQ,IACRQ,kBAAmB,sBAIvB,OAAO7M,GArBT5D,QACGC,OAAO,UACP2D,UAAU,gBAAiByM,MA8EhC,WACE,YAOA,SAASO,GAA2B3I,GAClC,GAAIxH,GAAKC,IAETD,GAAGyH,GAAK,WACND,EAAkBE,OAAM,IAG1B1H,EAAGsH,OAAS,WACVE,EAAkBG,WAmCtBwI,EAA2BjN,SAAW,qBAhDtC3D,QACGC,OAAO,UACP8D,WAAW,6BAA8B6M,MAgB9C,WACE,YAOA,SAASC,KACP,MAAO,UAASxL,GACd,MAAO,QAAUA,EAAOC,YAAc,OAASD,EAAOyL,YAP1D9Q,QACGC,OAAO,UACP8Q,OAAO,qBAAsBF,MAalC7Q,QAAQC,OAAO,UAIZ+Q,QAAQ,SAAU,WACjB,GAAIC,IACFH,WAAY,EACZI,cAAe,EAGjB,OAAO,UAAiB7E,GACtB3L,KAAK2L,QAAUrM,QAAQmR,MAAMF,EAAU5E,GAEvC3L,KAAKoQ,WAAapQ,KAAK2L,QAAQyE,WAC/BpQ,KAAK4E,YAAc5E,KAAK2L,QAAQ6E,cAEhCxQ,KAAK0Q,KAAO,WACP1Q,KAAK4E,YAAc5E,KAAKoQ,YACzBpQ,KAAK4E,eAIT5E,KAAK2Q,KAAO,WACP3Q,KAAK4E,YAAc,GACpB5E,KAAK4E,kBAQftF,QAAQC,OAAO,UAIZ+Q,QAAQ,QAAS,WAChB,GAAI5Q,IACFkR,SAAU,SAAUC,GAClB,GAAIA,EAAJ,CAEA,GAAIxQ,MACAyF,EAAQ+K,EAAIC,MAAM,KAMtB,OALAxR,SAAQqD,QAAQmD,EAAO,SAAUiL,GAC/B,GAAID,GAAQC,EAAKD,MAAM,IACH,KAAjBA,EAAM/O,QACT1B,EAAIwC,KAAKiO,EAAM,GAAGE,OAAS,IAAMF,EAAM,GAAGE,OAAS,IAAMF,EAAM,GAAGE,UAElD,IAAf3Q,EAAI0B,OACE1B,EAAI,GAGJA,IAGX4Q,SAAU,SAAUC,EAAWC,GAC7B,GAAID,EAAJ,CAEA,GAAIJ,GAAQI,EAAUJ,MAAM,IAC5B,IAAoB,IAAjBA,EAAM/O,OAAT,CACA,GAAI1B,GAAMyQ,EAAM,GAAGE,OAAS,IAAMF,EAAM,GAAGE,OAAS,IAAMF,EAAM,GAAGE,MAKnE,OAHGG,KACD9Q,GAAQ,OAASX,EAAMuR,SAASE,IAE3B9Q,KAET+Q,SAAU,SAAUP,GAClB,MAAOA,IAcThJ,cAAe,WACb,OAAQ,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,MAE9G1H,OAAQ,WACN,OAAQ,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KAE5DqL,8BAA+B,WAC7B,OACI6F,UAAkB,kBAClBC,WAAkB,oBAClBC,MAAkB,QAClBC,OAAkB,WAClBC,gBAAkB,wBAGxBxR,UAAW,WACT,QAEI2L,GAAI,EACJ3J,KAAM,gBAGN2J,GAAI,EACJ3J,KAAM,qCAGN2J,GAAI,EACJ3J,KAAM,wBAMd,OAAOvC,KAKXJ,QAAQC,OAAO,UAKZ+Q,QAAQ,UAAW,WAClB,GAAIoB,KAEJ,OAAOA,KAGX,WACE,YAwDA,SAASC,KAxCP,QAASC,GAAenO,EAAOb,GAC7BA,EAAGiP,aAAaC,WAAW,IAwC7BF,EAAe3O,SAAW,QAAS,KAjDnC,IAAIC,IACFC,SAAU,IACVuC,KAAMkM,EAGR,OAAO1O,GAXT5D,QACGC,OAAO,UACP2D,UAAU,aAAcyO,MAqB7BrS,QAAQC,OAAO,UAMZ+Q,QAAQ,WAAA,KAAA,UAAA,SAAA,iBAAA,OAAA,QAAW,SAAU3Q,EAAIoS,EAAS3L,EAAQ4L,EAAgBC,EAAMvS,GACvE,GAAIwS,IAKFC,cAAe,SAAS9R,GAEtB,OAAQA,EAAI+R,aACV,IAAK,KACH,MAAO/R,GAAIgS,IACb,SACE,MAAO1S,GAAG2S,QAAQC,MAAOlS,EAAIkS,UAOnCC,YAAa,SAAUnS,GACrB,MAAGf,SAAQoD,QAAQrC,IAAuB,IAAfA,EAAI0B,OAAqB1B,EAAI,GACjDA,GAMToS,SAAU,SAAUpS,GAClB,GAAIqS,EACJ,OAAGpT,SAAQoD,QAAQrC,IACjBqS,KACApT,QAAQqD,QAAQtC,EAAK,SAAUuC,GAC7B8P,EAAO7P,KAAKqP,EAAQO,SAAS7P,MAExB8P,GAEDpT,QAAQ4C,SAAS7B,IACvBqS,KACApT,QAAQqD,QAAQtC,EAAK,SAASsS,EAAEC,GAC9BF,EAAOX,EAAQ,YAAYa,IAAMV,EAAQO,SAASE,KAE7CD,GAGArS,GAOXwS,mBAAoB,SAAUxS,GAE5B,MADAA,GAAIyS,YAAczS,EAAIyS,aAAezS,EAAI0S,OAAS1S,EAAI4B,MAAQ,UACvD5B,GAMT2S,kBAAmB,SAAU3S,GAE3B,MADA+F,GAAO6M,YAAc5S,EACdA,GAGT6S,sBAAuB,SAAU7S,GAE/B,MADA+F,GAAO6M,YAAYE,gBAAkB9S,EAC9BA,GAGT+S,0BAA2B,SAAU/S,GAEnC,MADA+F,GAAO6M,YAAYI,oBAAsBhT,EAClCA,GAMTiT,uBAAwB,SAAUjT,GAEhC,MADGA,GAAIkT,cAAcnN,EAAO6M,YAAYM,gBACjCjU,QAAQmR,MAAMrK,EAAO6M,YAAa5S,IAM3CmT,kBAAmB,SAAUnT,GAE3B,MADA+F,GAAO6M,YAAYQ,YAAcpT,EAC1BA,GAMTqT,kBAAmB,SAAUrT,GAG3B,MAFAA,GAAIsT,YAAc,mCAClBtT,EAAIuT,KAAO,GACJvT,GAMTwT,oBAAqB,SAAUxT,GAE7B,MADA2R,GAAe8B,SAAS,cAAe1N,EAAO6M,aACvC5S,GAMT0T,qBAAsB,SAAU1T,GAE9B,GAAGf,QAAQoD,QAAQrC,GAAK,CACtB,GAAIqS,KAIJ,OAHApT,SAAQqD,QAAQtC,EAAK,SAAUuC,GAC7B8P,EAAO7P,KAAKqP,EAAQ6B,qBAAqBnR,MAEpC8P,EA0BT,GAtBuB,IAApBrS,EAAI2T,YACL3T,EAAI4T,kBAAoB,mBACE,IAApB5T,EAAI2T,cACV3T,EAAI4T,kBAAoB,eAGN,IAAjB5T,EAAI6T,SACL7T,EAAI8T,eAAiB,sBACE,IAAjB9T,EAAI6T,WACV7T,EAAI8T,eAAiB,oBAGnB9T,EAAI+T,OAAS/T,EAAIgU,eAAiBhU,EAAIiU,cACxCjU,EAAI+T,MAAQ1U,EAAMuR,SAAS5Q,EAAIgU,cAAehU,EAAIiU,cAIjDhV,QAAQiV,YAAYlU,EAAImU,mBACzBnU,EAAImU,gBAAkB,GAIrBlV,QAAQiD,SAASlC,EAAIoU,gBAAkBnV,QAAQoD,QAAQrC,EAAIqU,WAC5D,IAAK,GAAIC,GAAI,EAAGA,EAAItU,EAAIqU,UAAU3S,OAAQ4S,IACxC,GAAGtU,EAAIqU,UAAUC,GAAG1K,YAAc5J,EAAIoU,cAAc,CAClDpU,EAAIqN,eAAiBrN,EAAIqU,UAAUC,EACnC,OAsBN,MAhBAtU,GAAImR,QACFnR,EAAIuU,SACJvU,EAAI8T,eACJ9T,EAAI4T,kBACJ5T,EAAIwU,SAAWxU,EAAIwU,QAAQC,UAAY,GACvCzU,EAAI0U,SACJ1U,EAAI2U,YACJC,KAAK,KAGJ3V,QAAQoD,QAAQrC,EAAIqU,YACrBrU,EAAIqU,UAAUQ,KAAK,SAAUC,EAAEC,GAC7B,MAAOD,GAAEE,SAAWD,EAAEC,WAInBhV,GAMTiV,0BAA2B,SAAUjV,GAEnC,GAAGf,QAAQoD,QAAQrC,GAAK,CACtB,GAAIqS,KAIJ,OAHApT,SAAQqD,QAAQtC,EAAK,SAAUuC,GAC7B8P,EAAO7P,KAAKqP,EAAQoD,0BAA0B1S,MAEzC8P,EAIT,OAAQrS,EAAIkV,QACV,IAAK,IACHlV,EAAImV,aAAe,WACnB,MACF,KAAK,IACHnV,EAAImV,aAAe,WACnB,MACF,KAAK,IACHnV,EAAImV,aAAe,WACnB,MACF,KAAK,IACHnV,EAAImV,aAAe,aAWvB,OAJInV,EAAIoV,sBAAwBpV,EAAIqV,iBAClCrV,EAAIoV,qBAAuB/V,EAAMuR,SAAS5Q,EAAIqV,iBAGzCrV,GAMTsV,aAAc,SAAUtV,GAEtB,MADA+F,GAAO+B,OAAS9H,EACTA,GAMTuV,oBAAqB,SAAUvV,GAE7B,MADA+F,GAAO6M,YAAY4C,cAAgBxV,EAC5BA,GAMTyV,YAAa,SAAUzV,GAErB,GAAIsU,GAAI,EACR,KAAKA,EAAE,EAAGA,EAAIvO,EAAO+B,OAAOpG,QACvBqE,EAAO+B,OAAOwM,GAAG7L,SAAWzI,EAAIyI,OADD6L,KASpC,MAHGA,IAAK,GAAKA,EAAIvO,EAAO+B,OAAOpG,QAC7BqE,EAAO+B,OAAOrE,OAAO6Q,EAAE,GAElBtU,GAMT0V,eAAgB,SAAU1V,GAExB,MADA2R,GAAe8B,SAAS,SAAU1N,EAAO+B,QAClC9H,GAMT2V,cAAe,SAAU3V,GAEvB,MADA+F,GAAOyO,QAAUxU,EACVA,GAMT4V,gBAAiB,SAAU5V,GAEzB,MADA2R,GAAe8B,SAAS,UAAW1N,EAAOyO,SACnCxU,GAMT6V,mBAAoB,SAAU7V,GAC5B,GAAI8V,IAAqB,CACtB/P,GAAOyC,cAAgBzC,EAAOyC,aAAaC,SAAWzI,EAAIyI,SAC3DxJ,QAAQmR,MAAMrK,EAAOyC,aAAcxI,GACnC8V,GAAqB,EAGvB,IAAIxB,GAAI,CACR,IAAGrV,QAAQoD,QAAQ0D,EAAO+B,QACxB,KAAOwM,EAAIvO,EAAO+B,OAAOpG,OAAQ4S,IAC/B,GAAGvO,EAAO+B,OAAOwM,GAAG7L,SAAWzI,EAAIyI,OAAO,CACrCqN,EACD/P,EAAO+B,OAAOwM,GAAKvO,EAAOyC,cAG1BvJ,QAAQmR,MAAMrK,EAAO+B,OAAOwM,GAAItU,GAChC+F,EAAOyC,aAAezC,EAAO+B,OAAOwM,GAEtC,OAaN,MARGA,KAAMvO,EAAO+B,OAAOpG,SACrBqE,EAAOyC,aAAexI,EAClBf,QAAQoD,QAAQ0D,EAAO+B,UACzB/B,EAAO+B,WAET/B,EAAO+B,OAAOtF,KAAKuD,EAAOyC,eAGrBzC,EAAOyC,cAMhBuN,qBAAsB,SAAU/V,GAE9B,MADA2R,GAAe8B,SAAS,eAAgB1N,EAAOyC,cACxCxI,GAOTgW,cAAe,SAAUhW,GACvB,MAAI+F,GAAOyC,cAAiBzC,EAAOyC,aAAa4E,YAChDrH,EAAOyC,aAAa4E,WAAW7N,QAAUS,EAClCA,GAF4DA,GAQrEiW,YAAa,SAAUjW,GACrB,IAAI+F,EAAOyC,eAAiBzC,EAAOyC,aAAa4E,aAAenO,QAAQoD,QAAQ0D,EAAOyC,aAAa4E,WAAW7N,SAC5G,MAAOS,EAGT,KAAK,GAAIsU,GAAI,EAAGA,EAAIvO,EAAOyC,aAAa4E,WAAW7N,QAAQmC,OAAQ4S,IACjE,GAAGvO,EAAOyC,aAAa4E,WAAW7N,QAAQ+U,GAAG3L,SAAW3I,EAAI2I,OAC1D,MAAO1J,SAAQmR,MAAMrK,EAAOyC,aAAa4E,WAAW7N,QAAQ+U,GAAItU,IAQtEkW,mBAAoB,SAAUzV,EAAST,GACrC,IAAI+F,EAAOyC,eAAiBzC,EAAOyC,aAAa4E,aAAenO,QAAQoD,QAAQ0D,EAAOyC,aAAa4E,WAAW7N,SAC5G,MAAOS,EAGT,KAAK,GAAIsU,GAAI,EAAGA,EAAIvO,EAAOyC,aAAa4E,WAAW7N,QAAQmC,OAAQ4S,IACjE,GAAGvO,EAAOyC,aAAa4E,WAAW7N,QAAQ+U,GAAG3L,QAAUlI,EAErD,MADAsF,GAAOyC,aAAa4E,WAAW7N,QAAQ+U,GAAGtQ,QAAUhE;AAC7CA,GAKbmW,oBAAqB,SAAUnW,GAe7B,MAdGf,SAAQoD,QAAQrC,GACjBf,QAAQqD,QAAQtC,EAAK6R,EAAQsE,sBAI1BnW,EAAIoW,gBACLpW,EAAIqW,oBAAsBhX,EAAMuR,SAAS5Q,EAAIoW,gBAG5CnX,QAAQoD,QAAQrC,EAAIsW,kBACrBzE,EAAQ0E,oBAAoBvW,EAAIsW,kBAI7BtW,GAGTwW,oBAAqB,SAAUxW,GAC7B,GAAGf,QAAQoD,QAAQrC,GACjBf,QAAQqD,QAAQtC,EAAK6R,EAAQ2E,yBAG3B,CACF,OAAQxW,EAAIyW,YACV,IAAK,IACHzW,EAAI0W,iBAAmB,gBACvB,MACF,KAAK,IACH1W,EAAI0W,iBAAmB,aAMxB1W,EAAI2W,YACL3W,EAAI4W,gBAAkBvX,EAAMuR,SAAS5Q,EAAI2W,YAI7C,MAAO3W,IAGT6W,yBAA0B,SAAU7W,GAUlC,MATGf,SAAQoD,QAAQrC,GACjBf,QAAQqD,QAAQtC,EAAK6R,EAAQgF,2BAI1B7W,EAAI8W,cAAcjF,EAAQ0E,oBAAoBvW,EAAI8W,cAClD9W,EAAI+W,iBAAiBlF,EAAQ0E,oBAAoBvW,EAAI+W,kBAGnD/W,GAGTuW,oBAAqB,SAAUvW,GAC7B,GAAGf,QAAQoD,QAAQrC,GACjBf,QAAQqD,QAAQtC,EAAK6R,EAAQ0E,yBAE3B,CACF,OAAQvW,EAAIgX,UACV,IAAK,GACHhX,EAAIiX,eAAiB,aACrB,MACF,KAAK,GACHjX,EAAIiX,eAAiB,kCACrB,MACF,KAAK,GACHjX,EAAIiX,eAAiB,oBACrB,MACF,KAAK,GACHjX,EAAIiX,eAAiB,wBAKzB,OAAQjX,EAAIkX,qBACV,IAAK,GACHlX,EAAImX,0BAA4B,aAChC,MACF,KAAK,GACHnX,EAAImX,0BAA4B,kCAChC,MACF,KAAK,GACHnX,EAAImX,0BAA4B,oBAChC,MACF,KAAK,GACHnX,EAAImX,0BAA4B,yBAOtC,MAAOnX,IAMToX,eAAgB,SAAUpX,GAIxB,MAHG+F,GAAOyC,cAAgBvJ,QAAQoD,QAAQ0D,EAAOyC,aAAa6L,YAC5DtO,EAAOyC,aAAa6L,UAAU7R,KAAKxC,GAE9BA,GAMTqX,YAAa,SAAUrX,GAIrB,MAHG+F,GAAOyC,eACRzC,EAAOyC,aAAa/I,MAAQO,GAEvBA,GAMTsX,iBAAkB,SAAUtX,GAI1B,MAHG+F,GAAOyC,eACRzC,EAAOyC,aAAa+O,WAAavX,GAE5BA,GAMTwX,cAAe,SAAUxX,GAIvB,MAHG+F,GAAOyC,eACRzC,EAAOyC,aAAaxE,QAAUhE,GAEzBA,GAGTyX,cAAe,SAAUzX,GAIvB,MAHG+F,GAAOyC,eACRzC,EAAOyC,aAAakP,QAAU1X,GAEzBA,GAGT2X,eAAgB,SAAU3X,GAIxB,MAHG+F,GAAOyC,eACRzC,EAAOyC,aAAaoP,SAAW5X,GAE1BA,GAGT6X,sBAAuB,SAAU7X,GAI/B,MAHG+F,GAAOyC,eACRzC,EAAOyC,aAAasP,gBAAkB9X,GAEjCA,GAGT+X,YAAa,SAAU/X,GACrB,GAAG+F,EAAOyC,aACR,GAAGvJ,QAAQoD,QAAQrC,GACjB+F,EAAOyC,aAAaqC,MAAQ7K,MAEzB,IAAGf,QAAQ+I,UAAUhI,EAAIgY,UAAY/Y,QAAQoD,QAAQ0D,EAAOyC,aAAaqC,OAC5E,IAAK,GAAIyJ,GAAI,EAAGA,EAAIvO,EAAOyC,aAAaqC,MAAMnJ,OAAQ4S,IACpD,GAAGvO,EAAOyC,aAAaqC,MAAMyJ,GAAG0D,UAAYhY,EAAIgY,QAC9C,MAAO/Y,SAAQmR,MAAMrK,EAAOyC,aAAaqC,MAAMyJ,GAAItU,EAK3D,OAAOA,IAGTiY,WAAY,SAAUjY,GACpB,GAAG+F,EAAOyC,cAAgBxI,EAAIiB,QAAUhC,QAAQoD,QAAQ0D,EAAOyC,aAAa/I,OAC1E,IAAK,GAAI6U,GAAI,EAAGA,EAAIvO,EAAOyC,aAAa/I,MAAMiC,OAAQ4S,IACpD,GAAGvO,EAAOyC,aAAa/I,MAAM6U,GAAGrT,SAAWjB,EAAIiB,OAC7C,MAAOhC,SAAQmR,MAAMrK,EAAOyC,aAAa/I,MAAM6U,GAAItU,EAIzD,OAAOA,IAGTkY,cAAe,SAAUlY,GAIvB,MAHG+F,GAAOyC,cAAgBzC,EAAOyC,aAAa2P,cAC5CpS,EAAOyC,aAAa2P,YAAYvJ,QAAU5O,GAErCA,GAGTuK,aAAc,SAAUvK,GACtB,GAAG+F,EAAOyC,cAAgBzC,EAAOyC,aAAa2P,aAAelZ,QAAQoD,QAAQ0D,EAAOyC,aAAa2P,YAAYvJ,SAC3G,IAAK,GAAI0F,GAAI,EAAGA,EAAIvO,EAAOyC,aAAa2P,YAAYvJ,QAAQlN,OAAQ4S,IAClE,GAAGvO,EAAOyC,aAAa2P,YAAYvJ,QAAQ0F,GAAGnT,SAAWnB,EAAImB,OAC3D,MAAOlC,SAAQmR,MAAMrK,EAAOyC,aAAa2P,YAAYvJ,QAAQ0F,GAAItU,EAIvE,OAAOA,IAGToY,aAAc,SAAUpY,GAOtB,MANG+F,GAAOyC,cAAgBzC,EAAOyC,aAAa2P,cACxClZ,QAAQoD,QAAQ0D,EAAOyC,aAAa2P,YAAYvJ,WAClD7I,EAAOyC,aAAa2P,YAAYvJ,YAElC7I,EAAOyC,aAAa2P,YAAYvJ,QAAQpM,KAAKxC,IAExCA,GAGTqY,aAAc,SAAU5X,EAAST,EAAK6D,GAEpC,GADIA,IAAYA,EAAa,WAC1BkC,EAAOyC,cAAgBvJ,QAAQoD,QAAQ0D,EAAOyC,aAAa4E,WAAW7N,SACvE,IAAK,GAAI+U,GAAI,EAAGA,EAAIvO,EAAOyC,aAAa4E,WAAW7N,QAAQmC,OAAQ4S,IAAK,CACtE,GAAIgE,GAAWvS,EAAOyC,aAAa4E,WAAW7N,QAAQ+U,EACtD,IAAGgE,EAAS3P,SAAWlI,EAAQ,CACzBxB,QAAQoD,QAAQiW,EAASzU,MAC3ByU,EAASzU,OAEXyU,EAASzU,GAAYrB,KAAKxC,EAC1B,QAIN,MAAOA,IAGTuY,WAAY,SAAU9X,EAAST,EAAKU,GAElC,GADIA,IAAUA,EAAW,SACtBqF,EAAOyC,cAAgBvJ,QAAQoD,QAAQ0D,EAAOyC,aAAa4E,WAAW7N,SACvE,IAAK,GAAI+U,GAAI,EAAGA,EAAIvO,EAAOyC,aAAa4E,WAAW7N,QAAQmC,OAAQ4S,IAAK,CACtE,GAAIgE,GAAWvS,EAAOyC,aAAa4E,WAAW7N,QAAQ+U,EACtD,IAAGgE,EAAS3P,SAAWlI,EAAQ,CACzBxB,QAAQoD,QAAQiW,EAAS5X,MAC3B4X,EAAS5X,OAEX4X,EAAS5X,GAAU8B,KAAKxC,EACxB,QAIN,MAAOA,IAGTwY,aAAc,SAAU/X,EAASgY,EAAU5U,GAEzC,GADIA,IAAYA,EAAa,WAC1BkC,EAAOyC,cAAgBvJ,QAAQoD,QAAQ0D,EAAOyC,aAAa4E,WAAW7N,SACvE,IAAK,GAAI+U,GAAI,EAAGA,EAAIvO,EAAOyC,aAAa4E,WAAW7N,QAAQmC,OAAQ4S,IAAK,CACtE,GAAIgE,GAAWvS,EAAOyC,aAAa4E,WAAW7N,QAAQ+U,EACtD,IAAGgE,EAAS3P,SAAWlI,EAAQ,CAC7B,IAAIxB,QAAQoD,QAAQiW,EAASzU,IAAc,KAE3C,KADA,GAAI6U,GAAI,EACDA,EAAIJ,EAASzU,GAAYnC,QAC3B4W,EAASzU,GAAY6U,GAAGvX,SAAWsX,EADAC,KAGxC,GAAGA,EAAIJ,EAASzU,GAAYnC,OAAO,CACjC4W,EAASzU,GAAYJ,OAAOiV,EAAE,EAC9B,WAUVC,gBAAiB,SAAUlY,EAASgY,EAAU1X,EAAQL,EAAUiP,GAC9D,GAAI5J,EAAOyC,cAAiBvJ,QAAQoD,QAAQ0D,EAAOyC,aAAa9H,IAGhE,IAAK,GAAI4T,GAAI,EAAGA,EAAIvO,EAAOyC,aAAa9H,GAAUgB,OAAQ4S,IAAK,CAC7D,GAAIsE,GAAY7S,EAAOyC,aAAa9H,GAAU4T,EAC9C,IAAGsE,EAAUzX,SAAWsX,GAAYxZ,QAAQoD,QAAQuW,EAAUjJ,IAG5D,IAFA,GAAI+I,GAAI,EAEDA,EAAIE,EAAUjJ,GAAcjO,OAAQgX,IACzC,GAAGE,EAAUjJ,GAAc+I,GAAG/P,SAAWlI,EAEvC,WADAmY,GAAUjJ,GAAclM,OAAOiV,EAAE,KAW3ClJ,gBAAiB,SAAU/O,EAASgY,EAAU1X,EAAQL,EAAUiP,EAAcnP,GAC5E,GAAIuF,EAAOyC,cAAiBvJ,QAAQoD,QAAQ0D,EAAOyC,aAAa9H,IAGhE,IAAK,GAAI4T,GAAI,EAAGA,EAAIvO,EAAOyC,aAAa9H,GAAUgB,OAAQ4S,IAAK,CAC7D,GAAIsE,GAAY7S,EAAOyC,aAAa9H,GAAU4T,EAC9C,IAAGsE,EAAUzX,SAAWsX,GAAYxZ,QAAQoD,QAAQuW,EAAUjJ,IAG5D,IAFA,GAAI+I,GAAI,EAEDA,EAAIE,EAAUjJ,GAAcjO,OAAQgX,IACzC,GAAGE,EAAUjJ,GAAc+I,GAAG/P,SAAWlI,EACvC,MAAOxB,SAAQmR,MAAMwI,EAAUjJ,GAAc+I,GAAIlY,KAU3DqY,WAAY,SAAU7Y,GACpB,IAAIA,EAAIiB,SAAW8E,EAAOyC,eAAiBvJ,QAAQoD,QAAQ0D,EAAOyC,aAAa/I,OAAQ,MAAOO,EAG9F,IAAIsU,GAAI,EACR,KAAKA,EAAE,EAAGA,EAAIvO,EAAOyC,aAAa/I,MAAMiC,QACnCqE,EAAOyC,aAAa/I,MAAM6U,GAAGrT,SAAWjB,EAAIiB,OADDqT,KAShD,MAHGA,IAAK,GAAKA,EAAIvO,EAAOyC,aAAa/I,MAAMiC,QACzCqE,EAAOyC,aAAa/I,MAAMgE,OAAO6Q,EAAE,GAE9BtU,GAMT8Y,YAAa,SAAU9Y,GACrB,IAAIA,EAAI+Y,SAAWhT,EAAOyC,eAAiBvJ,QAAQoD,QAAQ0D,EAAOyC,aAAaqC,OAAQ,MAAO7K,EAG9F,IAAIsU,GAAI,EACR,KAAKA,EAAE,EAAGA,EAAIvO,EAAOyC,aAAaqC,MAAMnJ,QACnCqE,EAAOyC,aAAaqC,MAAMyJ,GAAGyE,SAAW/Y,EAAI+Y,OADDzE,KAShD,MAHGA,IAAK,GAAKA,EAAIvO,EAAOyC,aAAaqC,MAAMnJ,QACzCqE,EAAOyC,aAAaqC,MAAMpH,OAAO6Q,EAAE,GAE9BtU,GAMTgZ,kBAAmB,SAAUP,EAAUzY,GACrC,IAAIA,EAAI2I,SAAW5C,EAAOyC,eAAiBvJ,QAAQoD,QAAQ0D,EAAOyC,aAAaxE,SAAU,MAAOhE,EAGhG,KAAK,GAAIsU,GAAI,EAAGA,EAAIvO,EAAOyC,aAAaxE,QAAQtC,OAAQ4S,IAAK,CAC3D,GAAI2E,GAAYlT,EAAOyC,aAAaxE,QAAQsQ,EAC5C,IAAG2E,EAAUC,aAAeT,GAAYxZ,QAAQoD,QAAQ4W,EAAUE,aAGhE,IAFA,GAAIT,GAAI,EAEDA,EAAIO,EAAUE,YAAYzX,OAAQgX,IACvC,GAAGO,EAAUE,YAAYT,GAAG/P,SAAW3I,EAAI2I,OAEzC,MADAsQ,GAAUE,YAAY1V,OAAOiV,EAAE,GACxB1Y,EAMf,MAAOA,IAMToZ,gBAAiB,SAAU3Y,EAASM,EAAQL,GAE1C,GADIA,IAAUA,EAAW,WACtBqF,EAAOyC,cAAgBvJ,QAAQoD,QAAQ0D,EAAOyC,aAAa4E,WAAW7N,SACvE,IAAK,GAAI+U,GAAI,EAAGA,EAAIvO,EAAOyC,aAAa4E,WAAW7N,QAAQmC,OAAQ4S,IAAK,CACtE,GAAIgE,GAAWvS,EAAOyC,aAAa4E,WAAW7N,QAAQ+U,EACtD,IAAGgE,EAAS3P,SAAWlI,EAAQ,CAC7B,IAAIxB,QAAQoD,QAAQiW,EAAS5X,IAAY,KAEzC,KADA,GAAIgY,GAAI,EACDA,EAAIJ,EAAS5X,GAAUgB,QACzB4W,EAAS5X,GAAUgY,GAAG3X,SAAWA,EADA2X,KAGtC,GAAGA,EAAIJ,EAAS5X,GAAUgB,OAAO,CAC/B4W,EAAS5X,GAAU+C,OAAOiV,EAAE,EAC5B,WAUVnQ,kBAAmB,SAAUkQ,EAAUzY,GACrC,IAAIA,EAAI2I,SAAW5C,EAAOyC,eAAiBvJ,QAAQoD,QAAQ0D,EAAOyC,aAAaxE,SAAU,MAAOhE,EAGhG,KAAK,GAAIsU,GAAI,EAAGA,EAAIvO,EAAOyC,aAAaxE,QAAQtC,OAAQ4S,IAAK,CAC3D,GAAI2E,GAAYlT,EAAOyC,aAAaxE,QAAQsQ,EAC5C,IAAG2E,EAAUC,aAAeT,GAAYxZ,QAAQoD,QAAQ4W,EAAUE,aAGhE,IAFA,GAAIT,GAAI,EAEDA,EAAIO,EAAUE,YAAYzX,OAAQgX,IACvC,GAAGO,EAAUE,YAAYT,GAAG/P,SAAW3I,EAAI2I,OACzC,MAAO1J,SAAQmR,MAAM6I,EAAUE,YAAYT,GAAI1Y,GAMvD,MAAOA,IAMTqZ,YAAa,SAAUrZ,GACrB,KAAIA,EAAI2I,QAAW5C,EAAOyC,cAAiBzC,EAAOyC,aAAa4E,YAAenO,QAAQoD,QAAQ0D,EAAOyC,aAAa4E,WAAW7N,UAAU,MAAOS,EAG9I,IAAIsU,GAAI,EACR,KAAKA,EAAE,EAAGA,EAAIvO,EAAOyC,aAAa4E,WAAW7N,QAAQmC,QAChDqE,EAAOyC,aAAa4E,WAAW7N,QAAQ+U,GAAG3L,SAAW3I,EAAI2I,OADD2L,KAS7D,MAHGA,IAAK,GAAKA,EAAIvO,EAAOyC,aAAa4E,WAAW7N,QAAQmC,QACtDqE,EAAOyC,aAAa4E,WAAW7N,QAAQkE,OAAO6Q,EAAE,GAE3CtU,GAGTsZ,IAAK,SAAUtZ,GAEb,MADA4R,GAAK2H,KAAKvZ,GACHA,GAGTwZ,WAAU,SAAUxZ,GAElB,MAAOA,IAIX,OAAO6R,MAGX,WACE,YAOA,SAAS4H,KAYP,QAASC,GAAStW,EAAOb,GACvB,GAAIoX,IAAU,EACVC,EAAS3a,QAAQ+F,QAAQ5B,EAAMqW,YAEnCrW,GAAMyB,OAAO,cAAe,WAC1B+U,EAAOC,YAAY,wBAAwBA,YAAY,eAAeA,YAAY,gBAClFD,EAAS3a,QAAQ+F,QAAQ5B,EAAMqW,aAC/BG,EAAOjV,SAAS,wBACbvB,EAAM0W,aACPF,EAAOjV,SAAS,gBAElBvB,EAAM2W,qBAGR3W,EAAM2W,iBAAmB,WACpBJ,EACDC,EAAOC,YAAY,eAGnBD,EAAOjV,SAAS,gBAIpBpC,EAAG+D,MAAM,WACDqT,IACFA,GAAU,EACVvW,EAAM2W,qBAGV,WACKJ,IACDA,GAAU,EACVvW,EAAM2W,sBA3Cd,GAAIlX,IACFC,SAAU,IACVuC,KAAMqU,EACNtW,OACEqW,YAAa,IACbK,YAAa,KAIjB,OAAOjX,GAfT5D,QACGC,OAAO,UACP2D,UAAU,cAAe4W,MA0D9Bxa,QAAQC,OAAO,UAKZ+Q,QAAQ,iBAAkB,WACzB,GAAI+J,IACF,cACA,SACA,UACA,gBAGErI,GACF8B,SAAU,SAASpI,EAAK7J,GACnBwY,EAAYC,QAAQ5O,GAAO,IAI9B6O,aAAa7O,GAAOpM,QAAQkb,OAAO3Y,KAGrC4Y,SAAU,SAAS/O,GACjB,GAAG2O,EAAYC,QAAQ5O,GAAO,EAC5B,MAAO,KAGT,KACE,MAAOpM,SAAQob,SAASH,aAAa7O,IAEvC,MAAMiP,GAEJ,aADOJ,cAAa7O,GACb,OAIXkP,OAAQ,SAASlP,GACf,MAAG2O,GAAYC,QAAQ5O,GAAO,EACrB,gBAGF6O,cAAa7O,IAGtBmP,SAAU,WACRvb,QAAQqD,QAAQ0X,EAAa,SAAS3O,SAC7B6O,cAAa7O,KAEtB6O,aAAaO,SAIjB,OAAO9I,KAGX,WACE,YA0DA,SAAS+I,GAAcC,GAtCrB,QAASC,GAAkB7U,EAAQ8U,GACjC,GAAInb,GAAKC,IAETD,GAAGqG,OAASA,EACZrG,EAAGob,MAAQD,EAEXnb,EAAGqb,mBACD,yBACA,oBACA,mBACA,sBACA,yBAIJ,QAASC,KACPL,EAAS,WACP1b,QAAQ+F,QAAQiW,QAAQC,QAAQ,YAsBpCN,EAAkBhY,SAAW,SAAU,SAnDvC,IAAIC,IACFC,SAAU,IACVC,YAAa,kDACbC,WAAY4X,EACZ3X,aAAc,UACdoC,KAAM2V,EACN9X,kBAAkB,EAGpB,OAAOL,GAmCT6X,EAAc9X,SAAW,YAlDzB3D,QACGC,OAAO,UACP2D,UAAU,gBAAiB6X,MAwChC,WACE,YA4DA,SAASS,GAAaR,GAxCpB,QAASS,GAAiBrV,GACxB,GAAIrG,GAAKC,IAETD,GAAGqG,OAASA,EAGd,QAASsV,KACPV,EAAS,WACP1b,QAAQ+F,QAAQiW,QAAQC,QAAQ,YAiCpCE,EAAiBxY,SAAW,SArD5B,IAAIC,IACFC,SAAU,IACVC,YAAa,gDACbC,WAAYoY,EACZnY,aAAc,SACdoC,KAAMgW,EACNnY,kBAAkB,EAGpB,OAAOL,GAqCTsY,EAAavY,SAAW,YApDxB3D,QACGC,OAAO,UACP2D,UAAU,eAAgBsY,MA+B/B,WACE,YA8DA,SAASG,GAAaX,GA1CpB,QAASY,GAAiBxV,GACxB,GAAIrG,GAAKC,IAETD,GAAGqG,OAASA,EAGd,QAASyV,KACPb,EAAS,WACP1b,QAAQ+F,QAAQiW,QAAQC,QAAQ,YAmCpCK,EAAiB3Y,SAAW,SAvD5B,IAAIC,IACFC,SAAU,IACVC,YAAa,gDACbC,WAAYuY,EACZtY,aAAc,SACdoC,KAAMmW,EACNtY,kBAAkB,EAGpB,OAAOL,GAuCTyY,EAAa1Y,SAAW,YAtDxB3D,QACGC,OAAO,UACP2D,UAAU,eAAgByY,MAiC/Brc,QAAQC,OAAO,UAIX+Q,QAAQ,aAAA,KAAA,QAAA,qBAAA,eAAA,cAAA,cAAA,gBAAA,cAAA,gBAAA,gBAAA,gBAAA,iBAAA,SAAA,SAAA,aAAa,SACnB3Q,EACAmc,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACArW,EACAsW,GAGA,GAAIC,MAGAC,GAUFC,YAAa,SAASC,EAAQC,EAAS1K,EAAM2K,EAASC,GACpD,GAAIvR,GAAMoR,EAASC,GAAW1K,EAAO/S,QAAQkb,OAAOnI,GAAQ,IAExD9C,IAMJ,IALGuN,IAAQvN,EAAOuN,OAASA,EAAOI,eAC/BH,IAASxN,EAAO4N,IAAMJ,GACtB1K,IAAM9C,EAAO8C,KAAOA,GACpB2K,IAASzN,EAAOyN,QAAUA,IAExBL,EAAMjR,GAAM,CACf,GAAI0R,GACAC,GAAM,CACV,QAAOP,GACL,IAAK,MACL,IAAK,MACL,IAAK,OACL,IAAK,OACL,IAAK,MACL,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,SACL,IAAK,SACHM,EAAUtB,EAAMvM,EAChB,MACF,SACE8N,GAAM,EACND,EAAUzd,EAAG2S,SAGb+K,IACFV,EAAMjR,GAAO0R,EAAAA,WAAgB,SAASE,EAASD,GAI7C,MAHIJ,UACKN,GAAMjR,GAEZ2R,EAAc1d,EAAG2S,OAAO+K,GACxBC,EAAmBA,EAAtB,UAKN,MAAOX,GAAMjR,IAWf6R,oBAAqB,SAAUT,EAAQK,EAAK9K,EAAM2K,GAEhD,MADAG,GAAMA,GAAO,IACNP,EAAQC,YACbC,EACAf,EAAqBoB,EACrB7d,QAAQmR,SACN4B,GAEF/S,QAAQmR,OACJ+M,cAAejB,GAEjBS,KAaNS,cAAe,SAAUX,EAAQK,EAAK9K,EAAM2K,EAASC,GAEnD,MADAE,GAAMA,GAAO,IACNP,EAAQC,YACbC,EACAd,EAAemB,EACf9K,EACA/S,QAAQmR,OACJ+M,cAAejB,GAEjBS,GAEFC,IAYJS,aAAc,SAAUZ,EAAQK,EAAK9K,EAAM2K,GAEzC,MADAG,GAAMA,GAAO,IACNP,EAAQC,YACbC,EACAb,EAAckB,EACd9K,EACA/S,QAAQmR,OACJ+M,cAAejB,GAEjBS,KAaNW,aAAc,SAAUb,EAAQK,EAAK9K,EAAM2K,GAEzC,MADAG,GAAMA,GAAO,IACNP,EAAQC,YACbC,EACAZ,EAAciB,EACd9K,EACA/S,QAAQmR,OACJ+M,cAAejB,GAEjBS,KAaNY,eAAgB,SAAUC,EAASf,EAAQK,EAAK9K,EAAM2K,GAEpD,MADAG,GAAMA,GAAO,IACNP,EAAQC,YACbC,EACAX,EAAgB,UAAY0B,EAAUV,EACtC9K,EACA/S,QAAQmR,OACJ+M,cAAejB,GAEjBS,KAaNc,aAAc,SAAUD,EAASf,EAAQK,EAAK9K,EAAM2K,GAElD,MADAG,GAAMA,GAAO,IACNP,EAAQC,YACbC,EACAV,EAAc,WAAayB,EAAUV,EACrC9K,EACA/S,QAAQmR,OACJ+M,cAAejB,GAEjBS,KAaNe,eAAgB,SAAUF,EAAS/c,EAASgc,EAAQK,EAAK9K,EAAM2K,GAE7D,MADAG,GAAMA,GAAO,IACNP,EAAQC,YACbC,EACAT,EAAgB,WAAawB,EAAU,UAAY/c,EAAUqc,EAC7D9K,EACA/S,QAAQmR,OACJ+M,cAAejB,GAEjBS,KAaNgB,eAAgB,SAAUH,EAASf,EAAQK,EAAK9K,EAAM2K,GAEpD,MADAG,GAAMA,GAAO,IACNP,EAAQC,YACbC,EACAR,EAAgB,UAAYuB,EAAUV,EACtC9K,EACA/S,QAAQmR,OACJ+M,cAAejB,GAEjBS,KAaNiB,YAAa,SAAUnB,EAAQK,EAAK9K,EAAM2K,GAExC,MADAG,GAAMA,GAAO,IACNP,EAAQC,YACbC,EACAJ,EAAaS,EACb9K,EACA/S,QAAQmR,OACJ+M,cAAejB,GAEjBS,KASNkB,UAAW,SAAUZ,GACnB,MAAuB,OAApBA,EAAS/H,OACH+H,EAASjL,KAGT1S,EAAG2S,OAAOgL,IAIrBa,aAAc,SAAUb,GAItB,MAHGA,GAASc,KAAgC,MAAzBd,EAASlL,aAC1BqK,EAAO4B,QAAQf,EAASc,KAEnBd,GAGTgB,WAAY,SAAUhB,GACpB,MAAOA,GAASjL,OAIhBkM,GAMFC,SAAU,SAASC,GACjB,MAAO7B,GACJW,oBAAoB,OAAQ,wBAA0Bf,GACrDzJ,MAAO0L,EAAS1L,MAChB2L,SAAUD,EAASC,WAEpB/d,KAAKic,EAAQsB,WACbvd,KAAKic,EAAQuB,eAMlBQ,MAAO,SAASF,GACd,MAAO7B,GACJW,oBAAoB,OAAQ,qBAAuBf,GAClDzJ,MAAO0L,EAAS1L,MAChB2L,SAAUD,EAASC,WAEpB/d,KAAKic,EAAQsB,WACbvd,KAAKic,EAAQuB,eAMlBS,cAAe,SAAUC,GACvB,MAAOjC,GACJW,oBAAoB,OAAQ,8BAAgCf,GAC3DsC,eAAgBD,EAAaE,aAAapL,YAC1CqL,KAAM,IAEPre,KAAKic,EAAQsB,WACbvd,KAAKic,EAAQuB,eAOlBc,OAAQ,WACN,MAAOrC,GACJW,oBAAoB,OAAQ,sBAAwBnX,EAAO6M,YAAYiM,WACvEve,KAAKic,EAAQsB,WACbvd,KAAKic,EAAQuB,eAKlBgB,oBAAqB,WACnB,MAAOvC,GACJqB,YAAY,MAAO,uDAAyD7X,EAAO6M,YAAYiM,WAC/Fve,KAAKic,EAAQsB,WACbvd,KAAKic,EAAQuB,eAGlBiB,wBAAyB,WACvB,MAAOxC,GACJqB,YAAY,MAAO,8CAAgD7X,EAAO6M,YAAYiM,WACtFve,KAAKic,EAAQsB,WACbvd,KAAKic,EAAQuB,eAGlBkB,iBAAkB,SAAUC,GAC1B,MAAO1C,GACJqB,YAAY,OAAQ,yCAA2C7X,EAAO6M,YAAYiM,UAAWI,GAC7F3e,KAAKic,EAAQsB,WACbvd,KAAKic,EAAQuB,eAGlBoB,iBAAkB,SAAUD,GAC1B,MAAO1C,GACJqB,YAAY,OAAQ,yCAA2C7X,EAAO6M,YAAYiM,UAAWI,GAC7F3e,KAAKic,EAAQsB,WACbvd,KAAKic,EAAQuB,eASlBqB,WAAY,WACV,MAAO5C,GACJa,cAAc,MAAO,6BAA+BrX,EAAO6M,YAAYiM,WACvEve,KAAKic,EAAQsB,WACbvd,KAAKic,EAAQuB,eAMlBsB,kBAAmB,WACjB,MAAO7C,GACJa,cAAc,MAAO,4BAA8BrX,EAAO6M,YAAYiM,WACtEve,KAAKic,EAAQsB,WACbvd,KAAKic,EAAQuB,eAOlBuB,YAAa,SAAU3S,GACrB,MAAO6P,GACJa,cAAc,OAAQ,0BAA4BrX,EAAO6M,YAAYiM,UAAWnS,GAChFpM,KAAKic,EAAQsB,WACbvd,KAAKic,EAAQuB,eAMlBwB,YAAa,SAAU9B,EAAS9Q,GAC9B,MAAO6P,GACJa,cAAc,OAAQ,WAAaI,EAAU,oBAAsBzX,EAAO6M,YAAYiM,UAAWnS,GACjGpM,KAAKic,EAAQsB,WACbvd,KAAKic,EAAQuB,eAMlByB,aAAc,SAAU7S,GACtB,MAAO6P,GACJa,cAAc,SAAU,WAAa1Q,EAAUjE,OAAS,sBAAwB1C,EAAO6M,YAAYiM,WACnGve,KAAKic,EAAQsB,WACbvd,KAAKic,EAAQuB,eAOlB0B,UAAW,SAAUhC,GACnB,MAAOjB,GACJa,cAAc,MAAO,UAAYI,EAAU,eAAiBzX,EAAO6M,YAAYiM,WAC/Eve,KAAKic,EAAQsB,WACbvd,KAAKic,EAAQuB,eAMlB3Q,YAAa,WACX,MAAOoP,GACJa,cAAc,MAAO,uBAAyBrX,EAAO6M,YAAYiM,UAAW,KAAM,MAAM,GACxFve,KAAKic,EAAQsB,WACbvd,KAAKic,EAAQuB,eAQlB2B,oBAAqB,SAAUjC,GAC7B,MAAOjB,GACJoB,eAAeH,EAAS,MAAO,uBAAyBzX,EAAO6M,YAAYiM,WAC3Eve,KAAKic,EAAQsB,WACbvd,KAAKic,EAAQuB,eAMlB4B,yBAA0B,SAAUlC,GAClC,MAAOjB,GACJoB,eAAeH,EAAS,MAAO,iCAAmCzX,EAAO6M,YAAYiM,WACrFve,KAAKic,EAAQsB,WACbvd,KAAKic,EAAQuB,eAMlB9U,YAAa,SAAUwU,GACrB,MAAOjB,GACJoB,eAAeH,EAAS,MAAO,+BAAiCzX,EAAO6M,YAAYiM,WACnFve,KAAKic,EAAQsB,WACbvd,KAAKic,EAAQuB,eAMlBpa,aAAc,SAAU8Z,EAAS/c,EAASmD,GACxC,MAAO2Y,GACJmB,eAAeF,EAAS/c,EAAS,OAAQ,2BAA6BsF,EAAO6M,YAAYiM,UAAWjb,GACpGtD,KAAKic,EAAQsB,WACbvd,KAAKic,EAAQuB,eAMlB7U,mBAAoB,SAASuU,EAAS/E,EAAUhY,GAC9C,MAAO8b,GACJmB,eAAeF,EAAS/c,EAAS,SAAU,WAAagY,EAAW,8BAAgC1S,EAAO6M,YAAYiM,WACtHve,KAAKic,EAAQsB,WACbvd,KAAKic,EAAQuB,eAMlBld,YAAa,SAAU4c,EAAS/c,EAASM,GACvC,MAAOwb,GACJkB,aAAaD,EAAS,SAAU,UAAY/c,EAAU,UAAYM,EAAS,sBAAwBgF,EAAO6M,YAAYiM,WACtHve,KAAKic,EAAQsB,WACbvd,KAAKic,EAAQuB,eAMlBvV,kBAAmB,SAAUiV,EAAS/c,EAASkf,GAC7C,MAAOpD,GACJmB,eAAeF,EAAS/c,EAAS,OAAQ,4BAA8BsF,EAAO6M,YAAYiM,UAAWc,GACrGrf,KAAKic,EAAQsB,WACbvd,KAAKic,EAAQuB,eASlB8B,UAAW,SAAUpC,GACnB,MAAOjB,GACJe,aAAa,MAAO,UAAYE,EAAU,qBAAuBzX,EAAO6M,YAAYiM,WACpFve,KAAKic,EAAQsB,WACbvd,KAAKic,EAAQuB,eAMlB/F,YAAa,SAAUyF,EAASxF,EAAS6H,GACvC,MAAOtD,GACJe,aAAa,OAAQ,UAAYE,EAAU,UAAYxF,EAAU,oBAAsBjS,EAAO6M,YAAYiM,UAAWgB,GACrHvf,KAAKic,EAAQsB,WACbvd,KAAKic,EAAQuB,eAMlBgC,YAAa,SAAUD,GACrB,MAAOtD,GACJe,aAAa,OAAQ,4BAA8BvX,EAAO6M,YAAYiM,UAAWgB,GACjFvf,KAAKic,EAAQsB,WACbvd,KAAKic,EAAQuB,eAMlBiC,aAAc,SAAUvC,EAASxF,GAC/B,MAAOuE,GACJe,aAAa,SAAU,UAAYE,EAAU,UAAYxF,EAAU,sBAAwBjS,EAAO6M,YAAYiM,WAC9Gve,KAAKic,EAAQsB,WACbvd,KAAKic,EAAQuB,eAMlBkC,UAAW,SAAUxC,EAASxF,GAC5B,MAAOuE,GACJe,aAAa,MAAO,UAAYE,EAAU,UAAYxF,EAAU,eAAiBjS,EAAO6M,YAAYiM,WACpGve,KAAKic,EAAQsB,WACbvd,KAAKic,EAAQuB,eASlBmC,UAAW,SAAUzC,GACnB,MAAOjB,GACJc,aAAa,MAAO,WAAaG,EAAU,qBAAuBzX,EAAO6M,YAAYiM,WACrFve,KAAKic,EAAQsB,WACbvd,KAAKic,EAAQuB,eAMlB7F,WAAY,SAAUuF,EAASvc,EAAQ4F,GACrC,MAAO0V,GACJc,aAAa,OAAQ,WAAaG,EAAU,UAAYvc,EAAS,oBAAsB8E,EAAO6M,YAAYiM,UAAWhY,GACrHvG,KAAKic,EAAQsB,WACbvd,KAAKic,EAAQuB,eAMlBoC,WAAY,SAAU1C,EAAS3W,GAC7B,MAAO0V,GACJc,aAAa,OAAQ,WAAaG,EAAU,yBAA2BzX,EAAO6M,YAAYiM,UAAWhY,GACrGvG,KAAKic,EAAQsB,WACbvd,KAAKic,EAAQuB,eAMlBqC,YAAa,SAAU3C,EAASvc,GAC9B,MAAOsb,GACJc,aAAa,OAAQ,WAAaG,EAAU,UAAYvc,EAAS,sBAAwB8E,EAAO6M,YAAYiM,WAC5Gve,KAAKic,EAAQsB,WACbvd,KAAKic,EAAQuB,eAMlBsC,SAAU,SAAU5C,EAASvc,GAC3B,MAAOsb,GACJc,aAAa,MAAO,WAAaG,EAAU,UAAYvc,EAAS,eAAiB8E,EAAO6M,YAAYiM,WACpGve,KAAKic,EAAQsB,WACbvd,KAAKic,EAAQuB,eAQlBuC,cAAe,SAAU7C,EAAS8C,GAChC,MAAO/D,GACJc,aAAa,OAAQ,WAAaG,EAAU,qCAAuCzX,EAAO6M,YAAYiM,UAAWyB,GACjHhgB,KAAKic,EAAQsB,WACbvd,KAAKic,EAAQuB,eAMlB3b,YAAa,SAAUlB,GACrB,MAAOsb,GACJc,aAAa,MAAO,UAAYpc,EAAS,4BAA8B8E,EAAO6M,YAAYiM,WAC1Fve,KAAKic,EAAQsB,WACbvd,KAAKic,EAAQuB,eAGlBvT,aAAc,SAAUtJ,EAAQwX,EAAUnO,GACxC,MAAOiS,GACJc,aAAa,OAAQ,UAAYpc,EAAS,YAAcwX,EAAW,oBAAsB1S,EAAO6M,YAAYiM,UAAWvU,GACvHhK,KAAKic,EAAQsB,WACbvd,KAAKic,EAAQuB,eAGlByC,aAAc,SAAUtf,EAAQqJ,GAC9B,MAAOiS,GAEJc,aAAa,OAAQ,UAAYpc,EAAS,2BAA6B8E,EAAO6M,YAAYiM,UAAWvU,GACrGhK,KAAKic,EAAQsB,WACbvd,KAAKic,EAAQuB,eASlB0C,gBAAiB,WACf,MAAOjE,GACJqB,YAAY,MAAO,gCAAkC7X,EAAO6M,YAAYiM,WACxEve,KAAKic,EAAQsB,WACbvd,KAAKic,EAAQuB,eAMlB2C,SAAU,WACR,MAAOlE,GACJqB,YAAY,MAAO,yBAA2B7X,EAAO6M,YAAYiM,WACjEve,KAAKic,EAAQsB,WACbvd,KAAKic,EAAQuB,eAMlB4C,WAAY,SAAUtC,GAClB,MAAO7B,GACJqB,YAAY,OAAQ,yBAA2B7X,EAAO6M,YAAYiM,UAAWT,GAC7E9d,KAAKic,EAAQsB,WACbvd,KAAKic,EAAQuB,eAWpB6C,sBAAuB,SAAUnD,GAC/B,MAAOjB,GACJgB,eAAeC,EAAS,OAAQ,qCAAuCzX,EAAO6M,YAAYiM,WAC1Fve,KAAKic,EAAQsB,WACbvd,KAAKic,EAAQuB,eAOlB8C,YAAa,SAAUpD,EAASqD,GAC9B,MAAOtE,GACJgB,eAAeC,EAAS,MAAO,QAAUqD,EAAM,uBAAyB9a,EAAO6M,YAAYiM,WAC3Fve,KAAKic,EAAQsB,WACbvd,KAAKic,EAAQuB,eAMlBgD,UAAW,SAAUtD,EAAS/c,GAC5B,MAAO8b,GACJgB,eAAeC,EAAS,MAAO,UAAY/c,EAAU,eAAiBsF,EAAO6M,YAAYiM,WACzFve,KAAKic,EAAQsB,WACbvd,KAAKic,EAAQuB,eAOlBiD,iBAAkB,SAAUvD,EAAS/c,GACnC,MAAO8b,GACJgB,eAAeC,EAAS,MAAO,UAAY/c,EAAU,uBAAyBsF,EAAO6M,YAAYiM,WACjGve,KAAKic,EAAQsB,WACbvd,KAAKic,EAAQuB,eAMlBkD,gBAAiB,SAAUxD,GACzB,MAAOjB,GACJkB,aAAaD,EAAS,MAAO,gCAAkCzX,EAAO6M,YAAYiM,WAClFve,KAAKic,EAAQsB,WACbvd,KAAKic,EAAQuB,eAMlBmD,aAAc,SAAUzD,GACtB,MAAOjB,GACJkB,aAAaD,EAAS,MAAO,iCAAmCzX,EAAO6M,YAAYiM,WACnFve,KAAKic,EAAQsB,WACbvd,KAAKic,EAAQuB,eAMlBoD,oBAAqB,SAAU1D,GAC7B,MAAOjB,GACJkB,aAAaD,EAAS,MAAO,yCAA2CzX,EAAO6M,YAAYiM,WAC3Fve,KAAKic,EAAQsB,WACbvd,KAAKic,EAAQuB,eAMlB1d,WAAY,SAAUod,EAAS/c,EAASD,GACtC,MAAO+b,GACJkB,aAAaD,EAAS,OAAQ,UAAY/c,EAAU,yBAA2BsF,EAAO6M,YAAYiM,UAAWre,GAC7GF,KAAKic,EAAQsB,WACbvd,KAAKic,EAAQuB,eAMlBqD,WAAY,SAAU3D,EAAS/c,EAASM,EAAQP,GAC9C,MAAO+b,GACJkB,aAAaD,EAAS,OAAQ,UAAY/c,EAAU,UAAYM,EAAS,oBAAsBgF,EAAO6M,YAAYiM,UAAWre,GAC7HF,KAAKic,EAAQsB,WACbvd,KAAKic,EAAQuB,eAMlB7H,YAAa,SAAUuH,EAAS7T,GAC9B,MAAO4S,GACJgB,eAAeC,EAAS,OAAQ,8BAAgCzX,EAAO6M,YAAYiM,UAAWlV,GAC9FrJ,KAAKic,EAAQsB,WACbvd,KAAKic,EAAQuB,eAMlBsD,YAAa,SAAU5D,EAAS6D,EAAY1X,GAC1C,MAAO4S,GACJgB,eAAeC,EAAS,OAAQ,QAAU6D,EAAa,2BAA6Btb,EAAO6M,YAAYiM,UAAWlV,GAClHrJ,KAAKic,EAAQsB,WACbvd,KAAKic,EAAQuB,eAMlBwD,UAAW,SAAU9D,EAAS+D,GAC5B,MAAOhF,GACJgB,eAAeC,EAAS,OAAQ,+BAAiCzX,EAAO6M,YAAYiM,UAAW0C,GAC/FjhB,KAAKic,EAAQsB,WACbvd,KAAKic,EAAQuB,eAMlB0D,aAAc,SAAUhE,EAAS6D,EAAY5gB,GAC3C,MAAO8b,GACJgB,eAAeC,EAAS,SAAU,cAAgB6D,EAAa,YAAc5gB,EAAU,sBAAwBsF,EAAO6M,YAAYiM,WAClIve,KAAKic,EAAQsB,WACbvd,KAAKic,EAAQuB,eAIpB,OAAOI,MAKbjf,QAAQC,OAAO,UAKZ+Q,QAAQ,gBAAA,SAAA,OAAA,SAAA,KAAA,iBAAA,SAAgB,SAAUmM,EAAQxK,EAAMiJ,EAAQvb,EAAIqS,EAAgB5L,GAC3E,GAAI0b,GAAe,SAASzE,GAK1B,GAHApL,EAAKM,MAAM8K,GAGR/d,QAAQ4C,SAASmb,IAAQA,EAAI9H,OAC9B,OAAO8H,EAAI9H,QACT,IAAK,KACH2F,EAAO6G,GAAG,eACV1E,EAAMA,EAAIhL,IACV,MACF,KAAK,KACH6I,EAAO6G,GAAG,aACV1E,EAAMA,EAAIhL,IACV,MACF,KAAK,KACHgL,EAAMA,EAAIhL,IACV,MACF,KAAK,KACHgL,EAAMA,EAAIhL,IACV,MACF,KAAK,KACHgL,EAAM,uDACN,MACF,KAAK,GACHA,EAAM,+DAOZ,GAAI2E,GAAiB,SAAU3E,GAC7B,GAAG/d,QAAQ0C,SAASqb,GAClB,MAAOA,EAEJ,IAAG/d,QAAQ4C,SAASmb,KAASA,EAAI4E,eAAiB5E,EAAI6E,mBAAqB7E,EAAI8E,QAAU9E,EAAIhL,MAAQgL,EAAIe,KAAOf,EAAI9K,OACvH,MAAOyP,GAAe3E,EAAI4E,eAAiB5E,EAAI6E,mBAAqB7E,EAAI8E,QAAU9E,EAAIhL,MAAQgL,EAAIe,KAAOf,EAAI9K,MAE1G,IAAGjT,QAAQoD,QAAQ2a,GAAK,CAE3B,IAAK,GADD+E,MACKzN,EAAI,EAAGA,EAAI0I,EAAItb,OAAQ4S,IAC9ByN,EAAMzN,GAAKqN,EAAe3E,EAAI1I,GAEhC,OAAOqN,GAAeI,EAAMnN,KAAK,SAMjC,MAFAjD,GAAe6I,WACfzU,EAAOmL,QACA,yEAMX,OAFAkL,GAAOlK,MAAMyP,EAAe3E,GAAM,UAE3B1d,EAAG2S,OAAO+K,GAGnB,OAAOyE,MAGX,WACE,YA+DA,SAASO,KA3CP,QAASC,GAAe7e,EAAOb,GAC7Ba,EAAM8e,WAAa,WACjB9e,EAAMyB,OAAO,QAAS,WACpBzB,EAAM+e,IAAIC,oBAIU,UAArBhf,EAAM4e,YACP5e,EAAM+e,IAAM5f,EAAG8f,iBACbC,iBAAiB,EACjBC,QACEC,OAAQ,aACRC,UAAW,UAEZzQ,KAAK,mBACRzP,EAAG2K,GAAG,wBAAyB,SAAUwV,EAAIC,GAC3Cvf,EAAMmD,OAAO,WACXnD,EAAMwf,MAAQD,EAAOE,UAAUL,OAAO,cAAgB,OAASG,EAAOG,QAAQN,OAAO,kBAGzFjgB,EAAG2K,GAAG,yBAA0B,WAC9B9J,EAAMmD,OAAO,WACXnD,EAAMwf,MAAQ,OAGlBxf,EAAM8e,eAGN9e,EAAM+e,IAAM5f,EAAG8f,iBACbC,iBAAiB,EACjBS,kBAAkB,EAClBR,QACEC,OAAQ,aACRC,UAAW,UAEZzQ,KAAK,mBACRzP,EAAG2K,GAAG,wBAAyB,SAAUwV,EAAIC,GAC3Cvf,EAAMmD,OAAO,WACXnD,EAAMwf,MAAQD,EAAOE,UAAUL,OAAO,kBAG1CjgB,EAAG2K,GAAG,yBAA0B,WAC9B9J,EAAMmD,OAAO,WACXnD,EAAMwf,MAAQ,OAGlBxf,EAAM8e,cAFVD,EAAerf,SAAW,QAAS,KAxDnC,IAAIC,IACFC,SAAU,IACVuC,KAAM4c,EACN7e,OACE4e,WAAY,IACZY,MAAO,KAIX,OAAO/f,GAfT5D,QACGC,OAAO,UACP2D,UAAU,aAAcmf,MAqE7B,WACE,YAgEA,SAASgB,KA5CP,QAASC,GAAc7f,EAAO4B,EAASZ,EAAO8e,GAC5CA,EAAQC,YAAYH,UAAY,SAAUI,GACxC,MAAOA,IAAchgB,EAAMigB,iBAE7BjgB,EAAMyB,OAAO,kBAAmB,WAC9Bqe,EAAQI,cAwCZL,EAAcrgB,SAAW,QAAS,UAAW,QAAS,UAzDtD,IAAIC,IACFC,SAAU,IACVygB,QAAS,UACTngB,OACEigB,gBAAiB,cAEnBhe,KAAM4d,EAGR,OAAOpgB,GAfT5D,QACGC,OAAO,UACP2D,UAAU,YAAamgB,MA4B5B,WACE,YAOA,SAASQ,GAAa5R,EAAM7L,GAW1B,QAAS2T,GAAStW,EAAOb,GACvB,GAAIkhB,GACAC,EACAC,EACAC,CACJxgB,GAAM2C,OAASA,CAGf,IAAIgU,GAAmB,WACrB,GAAI8J,IAAS,CACb,IAAG5kB,QAAQoD,QAAQ0D,EAAO6M,YAAYM,aAClC,IAAK,GAAIoB,GAAI,EAAGA,EAAIvO,EAAO6M,YAAYM,YAAYxR,OAAQ4S,IACzD,GAAGvO,EAAO6M,YAAYM,YAAYoB,GAAGwP,WAAaF,EAAW,CAC3DC,GAAS,CACT,OAILF,IAAWE,GAAUA,GAGrBA,IAAWH,GACZnhB,EAAGsX,YAAY,YACf6J,GAAQ,IAIDG,GAAUH,IACjBnhB,EAAGoC,SAAS,YACZ+e,GAAQ,GAKZC,GAAqC,MAA1BvgB,EAAM2gB,IAAIC,MAAM,EAAG,GAK5BJ,EADCD,EACYvgB,EAAM2gB,IAAIE,OAAO,GAGjB7gB,EAAM2gB,IAIrBL,GAAQ,EACR3J,IAGA0J,EAAUrgB,EAAMyB,OAAO,iCAAkC,SAASC,EAAQC,GACrED,GAAUC,IAAWD,GACtBiV,MAIJ3W,EAAM8gB,IAAI,WAAY,WACpBT,MAnEJ,GAAI5gB,IACFC,SAAU,IACVuC,KAAMqU,EACNtW,OACE2gB,IAAK,KAIT,OAAOlhB,GA4CT2gB,EAAa5gB,SAAW,OAAQ,UA1DhC3D,QACGC,OAAO,UACP2D,UAAU,MAAO2gB,MA8EtB,WACE,YAkEA,SAASW,KAjDP,QAASC,GAAyBhhB,EAAOb,GACvCA,EAAG8hB,cAiDLD,EAAyBxhB,SAAW,QAAS,KA3D7C,IAAIC,IACFC,SAAU,IACVuC,KAAM+e,EACNE,UAAU,EAGZ,OAAOzhB,GAZT5D,QACGC,OAAO,UACP2D,UAAU,uBAAwBshB,MAoBvC,WACE,YAOA,SAASI,GAAgBC,EAAO3J,EAAQ4J,GACtC,GAAI/kB,GAAKC,IAET6kB,GAAME,cAENhlB,EAAGilB,KAAOjlB,EAAGilB,SAGbjlB,EAAG4e,MAAQ,WACTkG,EACGlG,MAAM5e,EAAGilB,MACTrkB,KAAK,WACJua,EAAO6G,GAAG,kBAKhBhiB,EAAG6e,cAAgB,WACjBiG,EAAMI,6BACNH,EAAKnG,MAAM,MAAMlb,MAAO,0BAoC5BmhB,EAAgB3hB,SAAW,QAAS,SAAU,QA5D9C3D,QACGC,OAAO,UACP8D,WAAW,kBAAmBuhB,MA2BnC,WACE,YAOA,SAASM,GAAgB9e,EAAQ+B,EAAQrI,EAAOH,EAAIwG,GAClD,GAAIpG,GAAKC,IACTD,GAAGqG,OAASA,EAGZrG,EAAGmW,mBAAqB,WAEtB,GAAI9P,EAAOyC,aAAX,CAGA,IAAK,GAAI8L,GAAI,EAAGA,EAAIvO,EAAO+B,OAAOpG,OAAQ4S,IACxC,GAAGvO,EAAO+B,OAAOwM,GAAG7L,SAAW1C,EAAOyC,aAAaC,OAAO,CACxD1C,EAAO+B,OAAOwM,GAAKvO,EAAOyC,YAC1B,OAIJ,MAAO9I,GACJK,WAAWgG,EAAOyC,aAAaC,QAC/BnI,KAAKb,EAAMqlB,MAFPplB,WAGIA,EAAGS,gBAGhBT,EAAGK,WAAa,SAAUC,GAExB,MADAN,GAAGO,SAAU,EACNX,EAAGY,QAAQF,IAGpBN,EAAGS,aAAe,SAAUH,GAE1B,MADAN,GAAGO,SAAU,EACNX,EAAGY,QAAQF,IAGpBN,EAAGqlB,cAAgB,WACjBjf,EAAUG,MACNlD,YAAa,qCACbC,WAAY,uBACZC,aAAc,aACdiD,YAAa,kBACZC,OACF7F,KAAK,SAAUN,GACXf,QAAQ+I,UAAUhI,IACnBN,EAAGK,WAAWC,GACXM,KAAKb,EAAMmH,WACXtG,KAAKb,EAAMulB,QACX1kB,KAAKb,EAAMqlB,MAHdplB,WAIWA,EAAGS,iBAKtB2H,EACGgd,OACAxkB,KAAKZ,EAAGmW,oBAGbgP,EAAgBjiB,SAAW,SAAU,SAAU,QAAS,KAAM,aA7D9D3D,QACGC,OAAO,UACP8D,WAAW,kBAAmB6hB,MA4DnC,WACE,YAOA,SAASI,GAAkBlf,EAAQ+B,EAAQxI,GACzC,GAAII,GAAKC,IACTD,GAAGqG,OAASA,EAGZrG,EAAGmW,mBAAqB,WAEtB,GAAI9P,EAAOyC,aAAX,CAGA,IAAK,GAAI8L,GAAI,EAAGA,EAAIvO,EAAO+B,OAAOpG,OAAQ4S,IACxC,GAAGvO,EAAO+B,OAAOwM,GAAG7L,SAAW1C,EAAOyC,aAAaC,OAAO,CACxD1C,EAAO+B,OAAOwM,GAAKvO,EAAOyC,YAC1B,OAIJ,MAAO9I,GACJK,WAAWgG,EAAOyC,aAAaC,QAC/BnI,KAAKwH,EAAOkB,aAFRtJ,WAGIA,EAAGS,gBAGhBT,EAAGK,WAAa,SAAUC,GAExB,MADAN,GAAGO,SAAU,EACNX,EAAGY,QAAQF,IAGpBN,EAAGS,aAAe,SAAUH,GAE1B,MADAN,GAAGO,SAAU,EACNX,EAAGY,QAAQF,IAIpB8H,EACGgd,OACAxkB,KAAKZ,EAAGmW,oBAqBboP,EAAkBriB,SAAW,SAAU,SAAU,MA9DjD3D,QACGC,OAAO,UACP8D,WAAW,oBAAqBiiB,MA2CrC,WACE,YAOA,SAASC,GAAmBV,EAAO3J,GACjC,GAAInb,GAAKC,IAET6kB,GAAME,cAENhlB,EAAGilB,KAAOjlB,EAAGilB,SAEbjlB,EAAGye,SAAW,WACZqG,EACGrG,SAASze,EAAGilB,MACZrkB,KAAKkkB,EAAMW,YACX7kB,KAAK,WACJua,EAAO6G,GAAG,kBA8ClBwD,EAAmBtiB,SAAW,QAAS,UA/DvC3D,QACGC,OAAO,UACP8D,WAAW,qBAAsBkiB,MAqBtC,WACE,YAOA,SAASE,GAAkBrf,EAAQye,EAAOllB,GACxC,GAAII,GAAKC,IACTD,GAAGqG,OAASA,EAEZrG,EAAG2lB,YACCC,IAAK,EAAG1jB,KAAM,cACd0jB,IAAK,EAAG1jB,KAAM,kBAGlBlC,EAAG6lB,oBACCD,IAAK,EAAG1jB,KAAM,aACd0jB,IAAK,EAAG1jB,KAAM,aACd0jB,IAAK,EAAG1jB,KAAM,YAGlBlC,EAAGiH,OAAS,WACVjH,EAAGK,WAAWL,EAAGW,MACdC,KAAKkkB,EAAM1d,QACXxG,KAAKZ,EAAG8lB,YAFX9lB,WAGWA,EAAGS,eAGhBT,EAAGK,WAAa,SAAUC,GAExB,MADAN,GAAGO,SAAU,EACNX,EAAGY,QAAQF,IAGpBN,EAAGS,aAAe,SAAUH,GAE1B,MADAN,GAAGO,SAAU,EACNX,EAAGY,QAAQF,IAGpBN,EAAG8lB,WAAa,SAAUxlB,GAKxB,MAJAN,GAAGW,MACDse,KAAM5Y,EAAO6M,YAAY+L,KACzB8G,aAAc1f,EAAO6M,YAAY6S,cAE5BnmB,EAAGY,QAAQF,IAGpBN,EAAGK,aACAO,KAAKkkB,EAAMjL,MACXjZ,KAAKZ,EAAG8lB,YACRllB,KAAKZ,EAAGS,cAgBbilB,EAAkBxiB,SAAW,SAAU,QAAS,MAhEhD3D,QACGC,OAAO,UACP8D,WAAW,oBAAqBoiB,MAkDrC,WACE,YAOA,SAASM,GAAqB3f,EAAQ+B,EAAQxI,GAC5C,GAAII,GAAKC,IACTD,GAAGqG,OAASA,EAGZrG,EAAGmW,mBAAqB,WAEtB,GAAI9P,EAAOyC,aAAX,CAGA,IAAK,GAAI8L,GAAI,EAAGA,EAAIvO,EAAO+B,OAAOpG,OAAQ4S,IACxC,GAAGvO,EAAO+B,OAAOwM,GAAG7L,SAAW1C,EAAOyC,aAAaC,OAAO,CACxD1C,EAAO+B,OAAOwM,GAAKvO,EAAOyC,YAC1B,OAIJ,MAAO9I,GACJK,WAAWgG,EAAOyC,cAClBlI,KAAKwH,EAAO6d,gBAFRjmB,WAGIA,EAAGS,gBAGhBT,EAAGK,WAAa,SAAUC,GAExB,MADAN,GAAGO,SAAU,EACNX,EAAGY,QAAQF,IAGpBN,EAAGS,aAAe,SAAUH,GAE1B,MADAN,GAAGO,SAAU,EACNX,EAAGY,QAAQF,IAIpB8H,EACGgd,OACAxkB,KAAKZ,EAAGmW,oBAwBb6P,EAAqB9iB,SAAW,SAAU,SAAU,MAjEpD3D,QACGC,OAAO,UACP8D,WAAW,uBAAwB0iB,MA2CxC,WACE,YAOA,SAASE,GAAyB7f,EAAQ+B,EAAQvI,EAASD,EAAIwG,EAAWrG,GACxE,GAAIC,GAAKC,IACTD,GAAGqG,OAASA,EAGZrG,EAAGmW,mBAAqB,WAEtB,GAAI9P,EAAOyC,aAAX,CAGA,IAAK,GAAI8L,GAAI,EAAGA,EAAIvO,EAAO6M,YAAY4C,cAAc9T,OAAQ4S,IAC3D,GAAGvO,EAAO6M,YAAY4C,cAAclB,GAAG7L,SAAW1C,EAAOyC,aAAaC,OAAO,CAC3E1C,EAAOyC,aAAezC,EAAO6M,YAAY4C,cAAclB,EACvD,OAIJ,MAAO5U,GACJK,WAAWgG,EAAOyC,aAAaC,QAC/BnI,KAAKwH,EAAOkF,MACZ1M,KAAKb,EAAMqlB,MACXxkB,KAAKZ,EAAGmmB,gBAJJnmB,WAKIA,EAAGS,gBAIhBT,EAAGmmB,eAAiB,WAElB,GAAI9f,EAAOyC,cAAiBzC,EAAOyC,aAAa6L,WAAsD,IAAzCtO,EAAOyC,aAAa6L,UAAU3S,OAA3F,CAKA,GAAIqE,EAAOyC,aAAa4E,YAMtB,IAAK,GAAIkH,GAAI,EAAGA,EAAIvO,EAAOyC,aAAa6L,UAAU3S,OAAQ4S,IACxD,GAAGvO,EAAOyC,aAAa6L,UAAUC,GAAG1K,YAAclK,EAAGqG,OAAOyC,aAAa4E,WAAWxD,UAAU,CAC5FlK,EAAGqG,OAAOyC,aAAa4E,WAAarH,EAAOyC,aAAa6L,UAAUC,EAClE,YAPJvO,GAAOyC,aAAa4E,WAAarH,EAAOyC,aAAa6L,UAAU,EAYjE,OAAO3U,GACJK,aACAO,KAAKf,EAAQulB,MAFTplB,WAGIA,EAAGS,gBAGhBT,EAAGK,WAAa,SAAUC,GAExB,MADAN,GAAGO,SAAU,EACNX,EAAGY,QAAQF,IAGpBN,EAAGS,aAAe,SAAUH,GAE1B,MADAN,GAAGO,SAAU,EACNX,EAAGY,QAAQF,IAIpB8H,EACGge,cACAxlB,KAAKZ,EAAGmW,oBALb+P,EAAyBhjB,SAAW,SAAU,SAAU,UAAW,KAAM,YAAa,SAlEtF3D,QACGC,OAAO,UACP8D,WAAW,2BAA4B4iB,MAyE5C,WACE,YAOA,SAASG,GAAkBhgB,EAAQ+B,EAAQxI,EAAIwG,EAAWrG,GACxD,GAAIC,GAAKC,IACTD,GAAGqG,OAASA,EAGZrG,EAAGmW,mBAAqB,WAEtB,GAAI9P,EAAOyC,aAAX,CAGA,IAAK,GAAI8L,GAAI,EAAGA,EAAIvO,EAAO+B,OAAOpG,OAAQ4S,IACxC,GAAGvO,EAAO+B,OAAOwM,GAAG7L,SAAW1C,EAAOyC,aAAaC,OAAO,CACxD1C,EAAO+B,OAAOwM,GAAKvO,EAAOyC,YAC1B,OAIJ,MAAO9I,GACJK,WAAWgG,EAAOyC,aAAaC,QAC/BnI,KAAKwH,EAAOkF,MACZ1M,KAAKb,EAAMqlB,MACXxkB,KAAKZ,EAAGuY,YAJJvY,WAKIA,EAAGS,gBAIhBT,EAAGuY,WAAa,WAEd,GAAIlS,EAAOyC,cAAiBzC,EAAOyC,aAAa/I,OAA8C,IAArCsG,EAAOyC,aAAa/I,MAAMiC,OAAnF,CAKA,GAAIqE,EAAOyC,aAAa2P,aAMtB,IAAK,GAAI7D,GAAI,EAAGA,EAAIvO,EAAOyC,aAAa/I,MAAMiC,OAAQ4S,IACpD,GAAGvO,EAAOyC,aAAa/I,MAAM6U,GAAGrT,SAAWvB,EAAGqG,OAAOyC,aAAa2P,YAAYlX,OAAO,CACnFvB,EAAGqG,OAAOyC,aAAa2P,YAAcpS,EAAOyC,aAAa/I,MAAM6U,EAC/D,YAPJvO,GAAOyC,aAAa2P,YAAcpS,EAAOyC,aAAa/I,MAAM,EAY9D,OAAOC,GACJK,aACAO,KAAKb,EAAM0C,aAFPzC,WAGIA,EAAGS,gBAGhBT,EAAGK,WAAa,SAAUC,GAExB,MADAN,GAAGO,SAAU,EACNX,EAAGY,QAAQF,IAGpBN,EAAGS,aAAe,SAAUH,GAE1B,MADAN,GAAGO,SAAU,EACNX,EAAGY,QAAQF,IAGpBN,EAAGsmB,gBAAkB,WACnBlgB,EAAUG,MACNlD,YAAa,uCACbC,WAAY,yBACZC,aAAc,eACdiD,YAAa,kBACZC,OACF7F,KAAK,SAAUN,GACXf,QAAQ+I,UAAUhI,IACnBN,EAAGK,WAAWC,GACXM,KAAKb,EAAM4K,aACX/J,KAAKb,EAAM8gB,cAFd7gB,WAGWA,EAAGS,iBAMtB2H,EACGgd,OACAxkB,KAAKZ,EAAGmW,oBArBbkQ,EAAkBnjB,SAAW,SAAU,SAAU,KAAM,YAAa,SAnEpE3D,QACGC,OAAO,UACP8D,WAAW,oBAAqB+iB,MA0FrC,WACE,YAOA,SAASE,GAAgBlgB,EAAQ+B,EAAQ+C,EAAOvL,EAAIwG,GAClD,GAAIpG,GAAKC,IACTD,GAAGqG,OAASA,EAGZrG,EAAGmW,mBAAqB,WAEtB,GAAI9P,EAAOyC,aAAX,CAGA,IAAK,GAAI8L,GAAI,EAAGA,EAAIvO,EAAO+B,OAAOpG,OAAQ4S,IACxC,GAAGvO,EAAO+B,OAAOwM,GAAG7L,SAAW1C,EAAOyC,aAAaC,OAAO,CACxD1C,EAAO+B,OAAOwM,GAAKvO,EAAOyC,YAC1B,OAIJ,MAAO9I,GACJK,WAAWgG,EAAOyC,aAAaC,QAC/BnI,KAAKuK,EAAMia,MAFPplB,WAGIA,EAAGS,gBAGhBT,EAAGK,WAAa,SAAUC,GAExB,MADAN,GAAGO,SAAU,EACNX,EAAGY,QAAQF,IAGpBN,EAAGS,aAAe,SAAUH,GAE1B,MADAN,GAAGO,SAAU,EACNX,EAAGY,QAAQF,IAGpBN,EAAGwmB,eAAiB,WAClBpgB,EAAUG,MACNlD,YAAa,qCACbC,WAAY,wBACZC,aAAc,cACdiD,YAAa,kBACZC,OACF7F,KAAK,SAAUN,GACXf,QAAQ+I,UAAUhI,IACnBN,EAAGK,WAAWC,GACXM,KAAKuK,EAAMsb,YACX7lB,KAAKuK,EAAMma,QACX1kB,KAAKuK,EAAMia,MAHdplB,WAIWA,EAAGS,iBAKtB2H,EACGgd,OACAxkB,KAAKZ,EAAGmW,oBAUboQ,EAAgBrjB,SAAW,SAAU,SAAU,QAAS,KAAM,aApE9D3D,QACGC,OAAO,UACP8D,WAAW,kBAAmBijB,MA4DnC,WACE,YAOA,SAASG,GAAwBrgB,EAAQ+B,GACvC,GAAIpI,GAAKC,IAGTD,GAAGqG,OAASA,EAGZ+B,EAAOge,cAyDTM,EAAwBxjB,SAAW,SAAU,UArE7C3D,QACGC,OAAO,UACP8D,WAAW,0BAA2BojB,MAc3C,WACE,YAOA,SAASC,GAAsBtgB,EAAQ+B,EAAQ4D,EAAapM,EAAIwG,GAC9D,GAAIpG,GAAKC,IACTD,GAAGqG,OAASA,EAEZrG,EAAG4mB,oBAAsB,WACvBxgB,EAAUG,MACNlD,YAAa,2CACbC,WAAY,6BACZC,aAAc,mBACdiD,YAAa,kBACZC,OACF7F,KAAK,SAAUN,GACXf,QAAQ+I,UAAUhI,IACnBN,EAAGK,WAAWC,GACXM,KAAKoL,EAAY6a,iBACjBjmB,KAAKoL,EAAYsZ,QACjB1kB,KAAKoL,EAAYE,UAHpBlM,WAIWA,EAAGS,iBAKtBT,EAAGK,WAAa,SAAUC,GAExB,MADAN,GAAGO,SAAU,EACNX,EAAGY,QAAQF,IAGpBN,EAAGS,aAAe,SAAUH,GAE1B,MADAN,GAAGO,SAAU,EACNX,EAAGY,QAAQF,IAGpB8H,EAAOgd,OACPpZ,EAAYE,WAgCdya,EAAsBzjB,SAAW,SAAU,SAAU,cAAe,KAAM,aAtE1E3D,QACGC,OAAO,UACP8D,WAAW,wBAAyBqjB,MAwCzC,WACE,YAOA,SAASG,GAAiBzgB,EAAQ+B,EAAQ4D,EAAa8Y,GACrD,GAAI9kB,GAAKC,IAGTD,GAAGqG,OAASA,EAGZrG,EAAG+mB,eAGCC,aAAevS,gBAAiB,KAChC/O,MAAO,wBACPuhB,SAAU,gBAGVD,aAAevS,gBAAiB,KAChC/O,MAAO,oBACPuhB,SAAU,gBAIdjnB,EAAGknB,iBAAmB,SAAUjb,GAC9BD,EACGmb,OAAOlb,GACPrL,KAAKoL,EAAYob,cACjBxmB,KAAKkkB,EAAMxX,OAGhBtN,EAAGqnB,kBAAoB,SAAUpb,GAC/BD,EACGsb,QAAQrb,GACRrL,KAAKoL,EAAYob,eAItBhf,EAAOgd,OACPpZ,EAAYob,eA8BdN,EAAiB5jB,SAAW,SAAU,SAAU,cAAe,SAvE/D3D,QACGC,OAAO,UACP8D,WAAW,mBAAoBwjB,MA2CpC,WACE,YAOA,SAASS,GAAmBlhB,EAAQ+B,EAAQvI,EAASD,EAAIwG,EAAWrG,GAClE,GAAIC,GAAKC,IACTD,GAAGqG,OAASA,EAGZrG,EAAGmW,mBAAqB,WAEtB,GAAI9P,EAAOyC,aAAX,CAGA,IAAK,GAAI8L,GAAI,EAAGA,EAAIvO,EAAO+B,OAAOpG,OAAQ4S,IACxC,GAAGvO,EAAO+B,OAAOwM,GAAG7L,SAAW1C,EAAOyC,aAAaC,OAAO,CACxD1C,EAAO+B,OAAOwM,GAAKvO,EAAOyC,YAC1B,OAIJ,MAAO9I,GACJK,WAAWgG,EAAOyC,aAAaC,QAC/BnI,KAAKwH,EAAOkF,MACZ1M,KAAKb,EAAMqlB,MACXxkB,KAAKZ,EAAGmmB,gBAJJnmB,WAKIA,EAAGS,gBAIhBT,EAAGmmB,eAAiB,WAElB,GAAI9f,EAAOyC,cAAiBzC,EAAOyC,aAAa6L,WAAsD,IAAzCtO,EAAOyC,aAAa6L,UAAU3S,OAA3F,CAKA,GAAIqE,EAAOyC,aAAa4E,YAMtB,IAAK,GAAIkH,GAAI,EAAGA,EAAIvO,EAAOyC,aAAa6L,UAAU3S,OAAQ4S,IACxD,GAAGvO,EAAOyC,aAAa6L,UAAUC,GAAG1K,YAAclK,EAAGqG,OAAOyC,aAAa4E,WAAWxD,UAAU,CAC5FlK,EAAGqG,OAAOyC,aAAa4E,WAAarH,EAAOyC,aAAa6L,UAAUC,EAClE,YAPJvO,GAAOyC,aAAa4E,WAAarH,EAAOyC,aAAa6L,UAAU,EAYjE,OAAO3U,GACJK,aACAO,KAAKf,EAAQulB,MAFTplB,WAGIA,EAAGS,gBAGhBT,EAAGK,WAAa,SAAUC,GAExB,MADAN,GAAGO,SAAU;AACNX,EAAGY,QAAQF,IAGpBN,EAAGS,aAAe,SAAUH,GAE1B,MADAN,GAAGO,SAAU,EACNX,EAAGY,QAAQF,IAGpBN,EAAGwnB,eAAiB,WAClBphB,EAAUG,MACNlD,YAAa,wCACbC,WAAY,wBACZC,aAAc,cACdiD,YAAa,kBACZC,OACF7F,KAAK,SAAUN,GACXf,QAAQ+I,UAAUhI,IACnBN,EAAGK,WAAWC,GACXM,KAAKf,EAAQmK,YACbpJ,KAAKf,EAAQylB,QACb1kB,KAAKf,EAAQulB,MAHhBplB,WAIWA,EAAGS,iBAKtBT,EAAGynB,aAAe,WAChBrhB,EAAUG,MACNlD,YAAa,2CACbC,WAAY,sBACZC,aAAc,YACdiD,YAAa,kBACZC,OACF7F,KAAK,SAAUN,GACXf,QAAQ+I,UAAUhI,IACnBN,EAAGK,WAAWC,GACXM,KAAKf,EAAQ6nB,UACb9mB,KAAKf,EAAQ+hB,WACbhhB,KAAK,SAAUN,GAEd,MADA+F,GAAOyC,aAAa4E,WAAapN,EAC1BA,IAERM,KAAKZ,EAAGmmB,gBAPXnmB,WAQWA,EAAGS,iBAMtB2H,EACGgd,OACAxkB,KAAKZ,EAAGmW,oBAvCboR,EAAmBrkB,SAAW,SAAU,SAAU,UAAW,KAAM,YAAa,SAxEhF3D,QACGC,OAAO,UACP8D,WAAW,qBAAsBikB,MAiHtC,WACE,YAOA,SAASI,GAAuBthB,EAAQ+B,EAAQxI,GAC9C,GAAII,GAAKC,IACTD,GAAGqG,OAASA,EAGZrG,EAAGmW,mBAAqB,WAEtB,GAAI9P,EAAOyC,aAAX,CAGA,IAAK,GAAI8L,GAAI,EAAGA,EAAIvO,EAAO+B,OAAOpG,OAAQ4S,IACxC,GAAGvO,EAAO+B,OAAOwM,GAAG7L,SAAW1C,EAAOyC,aAAaC,OAAO,CACxD1C,EAAO+B,OAAOwM,GAAKvO,EAAOyC,YAC1B,OAIJ,MAAO9I,GACJK,WAAWgG,EAAOyC,aAAaC,QAC/BnI,KAAK,SAAUkd,GACd,MAAOle,GAAGgoB,KACRxf,EAAOyf,YAAY/J,GACnB1V,EAAOmZ,aAAazD,GACpB1V,EAAOoZ,oBAAoB1D,OAN1B9d,WASIA,EAAGS,gBAGhBT,EAAGK,WAAa,SAAUC,GAExB,MADAN,GAAGO,SAAU,EACNX,EAAGY,QAAQF,IAGpBN,EAAGS,aAAe,SAAUH,GAE1B,MADAN,GAAGO,SAAU,EACNX,EAAGY,QAAQF,IAIpBN,EAAG8nB,cAECC,OAAQ,cACRd,SAAU,cACVe,aAAc,2CACdhnB,SAAU,UACViP,aAAc,kBACdgY,SAEI/lB,KAAM,iBACNyJ,IAAK,aAGLzJ,KAAM,oBACNyJ,IAAK,gBAGLzJ,KAAM,UACNyJ,IAAK,aAGLzJ,KAAM,qBACNyJ,IAAK,mBAGTuc,UACE5a,MAAM,EACN6a,MAAM,EACNC,UAAQ,EACRC,YAAY,EACZC,cAAc,KAIhBP,OAAQ,UACRd,SAAU,cACVe,aAAc,uCACdhnB,SAAU,WACViP,aAAc,kBACdgY,SAEI/lB,KAAM,iBACNyJ,IAAK,aAGLzJ,KAAM,oBACNyJ,IAAK,gBAGLzJ,KAAM,UACNyJ,IAAK,aAGLzJ,KAAM,qBACNyJ,IAAK,mBAGTuc,UACE5a,MAAM,EACN6a,MAAM,EACNC,UAAQ,EACRC,YAAY,EACZC,cAAc,KAIhBP,OAAQ,cACRd,SAAU,aACVe,aAAc,2CACdhnB,SAAU,kBACViP,aAAc,eACdgY,SAEI/lB,KAAM,iBACNyJ,IAAK,aAGLzJ,KAAM,oBACNyJ,IAAK,gBAGLzJ,KAAM,UACNyJ,IAAK,aAGLzJ,KAAM,qBACNyJ,IAAK,gBAGT4c,eAEIrmB,KAAM,qBACNyJ,IAAK,8BAGLzJ,KAAM,yBACNyJ,IAAK,uBAGLzJ,KAAM,QACNyJ,IAAK,yBAGLzJ,KAAM,OACNyJ,IAAK,SAGTuc,UACE5a,MAAM,EACN6a,MAAM,EACNC,UAAQ,EACRC,YACEG,oBACEvJ,KAAM,SACNrT,UAAW1J,KAAK,IAAI6M,MAAM,IAAI7M,KAAK,IAAI6M,MAAM,IAAI7M,KAAK,IAAI6M,MAAM,IAAI7M,KAAK,IAAI6M,MAAM,IAAI7M,KAAK,IAAI6M,MAAM,IAAI7M,KAAK,IAAI6M,MAAM,IAAI7M,KAAK,IAAI6M,MAAM,IAAI7M,KAAK,IAAI6M,MAAM,IAAI7M,KAAK,IAAI6M,MAAM,IAAI7M,KAAK,KAAK6M,MAAM,KAAK7M,KAAK,KAAK6M,MAAM,KAAK7M,KAAK,KAAK6M,MAAM,KAAK7M,KAAK,KAAK6M,MAAM,KAAK7M,KAAK,KAAK6M,MAAM,KAAK7M,KAAK,KAAK6M,MAAM,KAAK7M,KAAK,KAAK6M,MAAM,KAAK7M,KAAK,KAAK6M,MAAM,KAAK7M,KAAK,KAAK6M,MAAM,KAAK7M,KAAK,KAAK6M,MAAM,KAAK7M,KAAK,KAAK6M,MAAM,MAE1Z0Z,sBACExJ,KAAM,SACNrT,UAAW1J,KAAK,eAAe6M,MAAM,IAAI7M,KAAK,WAAW6M,MAAM,KAEjE2Z,MACEzJ,KAAM,SAGVqJ,cAAc,KAMpBlgB,EACGgd,OACAxkB,KAAKZ,EAAGmW,oBAxGbwR,EAAuBzkB,SAAW,SAAU,SAAU,MAzEtD3D,QACGC,OAAO,UACP8D,WAAW,yBAA0BqkB,MAmL1C,WACE,YAOA,SAASgB,GAAsBC,EAAQxgB,EAAQ+J,EAASuK,EAAQ3c,EAAOF,EAASqS,EAAMiJ,EAAQ9U,EAAQ1G,GACpG,GAAIK,GAAKC,IAETD,GAAGqG,OAASA,EAEZrG,EAAG4E,OAAS,GAAIgkB,IAAQvY,WAAY,EAAGI,cAAe,IAItDzQ,EAAG6oB,mBAAoB,EAEvB7oB,EAAG6H,WAAalI,EAAMmI,gBAEtB9H,EAAG8oB,iBAAmB,WAChB9oB,EAAG+oB,MAAMhpB,QACXC,EAAG+oB,MAAMhpB,SACTC,EAAGgpB,UACHhpB,EAAGgpB,YAIPhpB,EAAGgpB,QAAU,WACRhpB,EAAG+oB,OAAgC,IAAvB/oB,EAAG+oB,MAAME,UACtBjpB,EAAG+oB,MAAMhpB,MAAM+C,MAAMZ,KAAM,KAG3BlC,EAAG+oB,MAAMhpB,MAAM+C,MAAMZ,KAAM,GAAIgnB,MAAO,MAI1ClpB,EAAGmZ,WAAa,SAAUgQ,GACrBnpB,EAAG+oB,MAAMhpB,MAAMiC,QAAU,EAC1B0a,EAAOlK,MAAM,4CAA8C,oCAG3DxS,EAAG+oB,MAAMhpB,MAAMgE,OAAOolB,EAAM,IAIhCnpB,EAAGopB,UAAY,WACTppB,EAAG+oB,QAAO/oB,EAAG+oB,UAGG,GAAjB/oB,EAAGqpB,MAAMpK,MACVjf,EAAG+oB,MAAME,UAAY,IACrBjpB,EAAG8oB,oBAIG9oB,EAAG6oB,oBACT7oB,EAAG+oB,MAAME,UAAY,IACrBjpB,EAAG8oB,oBAGL9oB,EAAG4E,OAAO+L,QAGZ3Q,EAAGspB,YAAc,WAEf,MADApX,GAAK2H,KAAK,sBACHzR,EACJ2E,WAAW/M,EAAGqpB,OACdzoB,KAAKwH,EAAOkd,SAGjBtlB,EAAGupB,UAAY,WACbvpB,EAAG4E,OAAO+L,QAGZ3Q,EAAGwpB,YAAc,WAEf,MADAtX,GAAK2H,KAAK,wBACH9Z,EACJ0pB,WAAWzpB,EAAG+oB,OACdnoB,KAAKb,EAAM2pB,WAGhB1pB,EAAG2pB,UAAY,WACb3pB,EAAG4pB,gBAGL5pB,EAAG6pB,YAAc,WAEf,MADA3X,GAAK2H,KAAK,2BACHha,EAAQwN,eAAehH,EAAOyC,aAAaC,SAGpD/I,EAAG4pB,aAAe,WAChB5pB,EAAG4E,OAAOrE,SAAU,EACpBP,EAAGspB,cACA1oB,KAAKZ,EAAGwpB,aACR5oB,KAAKZ,EAAG6pB,aACRjpB,KAAK,WACJua,EAAO6G,GAAG,uBAJdhiB,WAMW,WACPA,EAAG4E,OAAOrE,SAAU,KAI1BP,EAAG8pB,aAAe,WAChB9pB,EAAG4E,OAAOrE,SAAU,EACpBP,EAAGspB,cACA1oB,KAAKZ,EAAGwpB,aACR5oB,KAAK,WACJua,EAAO6G,GAAG,uBAHdhiB,WAKW,WACPA,EAAG4E,OAAOrE,SAAU,KApC5BooB,EAAsBzlB,SAAW,SAAU,SAAU,UAAW,SAAU,QAAS,UAAW,OAAQ,SAAU,SAAU,SA1E1H3D,QACGC,OAAO,UACP8D,WAAW,wBAAyBqlB,MAkHzC,WACE,YAOA,SAASoB,GAAiB1jB,EAAQye,GAE7Bze,EAAO6M,aAAe7M,EAAO6M,YAAYiM,UAC1C2F,EACGW,WAAWpf,EAAO6M,aADrB4R,SAESA,EAAME,aAKfF,EAAME,cA4DV+E,EAAiB7mB,SAAW,SAAU,SA3EtC3D,QACGC,OAAO,UACP8D,WAAW,mBAAoBymB,MAoBpCxqB,QAAQC,OAAO,UAIX+Q,QAAQ,SAAA,YAAA,eAAA,SAAA,iBAAA,UAAA,SAAA,KAAA,OAAA,OAAA,UAAA,WAAS,SAAUiO,EAAWuD,EAAc1b,EAAQ4L,EAAgBE,EAASgJ,EAAQvb,EAAImlB,EAAM7S,EAAMP,EAASsJ,GAEpH,GAAI6J,IAMFrG,SAAU,SAAUC,GAClB,MAAOF,GACJC,SAASC,GACT9d,KAAKuR,EAAQC,eACbxR,KAAKuR,EAAQM,aACb7R,KAAK,SAAUN,GAEd,MADAA,GAAI0S,MAAQ0L,EAAS1L,MACd1S,IAERM,KAAKuR,EAAQO,UACb9R,KAAKuR,EAAQW,oBACblS,KAAKuR,EAAQc,mBACbrS,KAAKuR,EAAQ2B,qBAXT0K,SAYEuD,IAQXnD,MAAO,SAAUF,GACf,MAAOF,GACJI,MAAMF,GACN9d,KAAKuR,EAAQC,eACbxR,KAAKuR,EAAQM,aACb7R,KAAK,SAAUN,GAEd,MADAA,GAAI0S,MAAQ0L,EAAS1L,MACd1S,IAERM,KAAKuR,EAAQO,UACb9R,KAAKuR,EAAQW,oBACblS,KAAKuR,EAAQc,mBACbrS,KAAKuR,EAAQ2B,qBACblT,KAAKkkB,EAAMW,YAZPjH,SAaEuD,IAQX7C,OAAQ,WACN,MAAG7Y,GAAO6M,aAAe7M,EAAO6M,YAAYiM,UACnCX,EACJU,SACAte,KAAK,SAAUN,GAEd,MADA4R,GAAK2H,KAAK,iBACHvZ,IAJJke,SAMEuD,GANFvD,WAOIsG,EAAME,aACdpkB,KAAK,WACJmkB,EAAK7F,WAGJtf,EAAGY,WAQZqe,cAAe,SAAUC,GACvB,MAAON,GACJK,cAAcC,GACdle,KAAKuR,EAAQC,eACbxR,KAAKuR,EAAQM,aACb7R,KAAKuR,EAAQO,UACb9R,KAAKuR,EAAQW,oBACblS,KAAKuR,EAAQc,mBACbrS,KAAKuR,EAAQ2B,qBACblT,KAAKkkB,EAAMW,YARPjH,SASEuD,IAMXlI,KAAM,WACJ,GAAImQ,IACFlF,EAAMhE,kBACNgE,EAAMxX,OAER,OAAO1N,GAAGgoB,IAAIoC,IAMhB1c,KAAM,WACJ,MAAOkR,GACJuC,WACAngB,KAAKuR,EAAQC,eACbxR,KAAKuR,EAAQM,aACb7R,KAAKuR,EAAQO,UACb9R,KAAKuR,EAAQoB,wBACb3S,KAAKuR,EAAQ2B,qBANT0K,SAOEuD,IAMX3a,OAAQ,SAAUsX,GAChB,MAAOF,GACJwC,WAAWtC,GACX9d,KAAKuR,EAAQC,eACbxR,KAAKuR,EAAQM,aACb7R,KAAKuR,EAAQO,UACb9R,KAAKuR,EAAQoB,wBACb3S,KAAKuR,EAAQ2B,qBANT0K,SAOEuD,IAMXjB,gBAAiB,WACf,MAAOtC,GACJsC,kBACAlgB,KAAKuR,EAAQC,eACbxR,KAAKuR,EAAQM,aACb7R,KAAKuR,EAAQO,UACb9R,KAAKuR,EAAQsB,mBACb7S,KAAKuR,EAAQ2B,qBANT0K,SAOEuD,IAQX0D,WAAY,SAAU/G,GAOpB,MAN2B,gBAAxBvD,EAAO8O,QAAQ/nB,MAChBiZ,EAAO6G,GAAG,qBAEZ9P,EAAK2H,KAAK,gBACViL,EAAMjL,OACNlI,EAAQuY,UAAW,EACZtqB,EAAGY,QAAQke,IAMpBsG,YAAa,WACX3e,EAAOmL,QACPS,EAAe6I,WACfnJ,EAAQuY,UAAW,EACQ,eAAxB/O,EAAO8O,QAAQ/nB,MAAiD,kBAAxBiZ,EAAO8O,QAAQ/nB,MACxD+Y,EAAS,WACPE,EAAO6G,GAAG,iBAQhBmI,iBAAkB,SAAU7pB,GAO1B,MANA+F,GAAO+jB,KACLvW,KAAMxN,EAAO6M,YAAYW,KACzBD,YAAavN,EAAO6M,YAAYU,aAElCvN,EAAO6M,YAAYW,KAAO,UAC1BxN,EAAO6M,YAAYU,YAAc,mCAC1BhU,EAAGY,QAAQF,IAMpB+pB,mBAAoB,SAAU/pB,GAI5B,MAHA+F,GAAO6M,YAAYW,KAAOxN,EAAO+jB,IAAIvW,KACrCxN,EAAO6M,YAAYU,YAAcvN,EAAO+jB,IAAIxW,kBACrCvN,GAAO+jB,IACPxqB,EAAGY,QAAQF,IAGpBgqB,mBAAoB,WAClB,MAAOvF,GACJwF,iBACA3pB,KAAK,SAAUN,GACd,MAAkB,cAAfA,EAAIkV,OACElV,EAGAV,EAAG2S,OAAOjS,MAQzB4kB,2BAA4B,SAAU5kB,GAoBpC,MAlBAykB,GAAKyF,MAAMC,UAAU,aAAc,SAAUlN,GAC3CrL,EAAK2H,KAAK,kBACViL,EACGjG,cAActB,GACd3c,KAAK,WACJua,EAAO6G,GAAG,mBAKhB+C,EAAKyF,MAAMC,UAAU,cAAe,WAClCvY,EAAK2H,KAAK,mBACPlI,EAAQuY,UACTpF,EAAM5F,WAKH5e,GAGT4G,UAAW,SAAUwjB,GACnB,GAAIhM,KAGJ,OAFGnf,SAAQ+I,UAAUoiB,EAASzL,QAAOP,EAASO,KAAOyL,EAASzL,MAC3D1f,QAAQ+I,UAAUoiB,EAAS3E,gBAAerH,EAASqH,aAAe2E,EAAS3E,cACvEnmB,EAAGY,QAAQke,IAItB,OAAOoG,MAKbvlB,QAAQC,OAAO,UAIX+Q,QAAQ,SAAA,YAAA,eAAA,UAAA,KAAA,SAAA,QAAS,SAAUiO,EAAWuD,EAAc5P,EAASvS,EAAIyG,EAAQ1G,GAEvE,GAAII,IAIFqlB,KAAM,WACJ,MAAO5G,GACJ+B,UAAUla,EAAOyC,aAAaC,QAC9BnI,KAAKuR,EAAQC,eACbxR,KAAKuR,EAAQO,UACb9R,KAAKuR,EAAQwF,aACb/W,KAAKuR,EAAQkE,sBACbzV,KAAKuR,EAAQ6D,gBANTwI,SAOEuD,IAGXzU,KAAM,SAAU/L,GACd,MAAOid,GACJkC,SAASra,EAAOyC,aAAaC,OAAQxH,GACrCX,KAAKuR,EAAQC,eACbxR,KAAKuR,EAAQM,aACb7R,KAAKuR,EAAQO,UACb9R,KAAKuR,EAAQoG,YACb3X,KAAKuR,EAAQkE,sBACbzV,KAAKuR,EAAQ6D,gBAPTwI,SAQEuD,IAGXuD,OAAQ,SAAU5e,GAChB,MAAO8X,GACJgC,WAAWna,EAAOyC,aAAaC,OAAQrC,GACvC9F,KAAKuR,EAAQC,eAFToM,SAGEuD,IAGX3a,OAAQ,SAAU7F,EAAQmF,GACxB,MAAO8X,GACJjG,WAAWlS,EAAOyC,aAAaC,OAAQxH,EAAQmF,GAC/C9F,KAAKuR,EAAQC,eACbxR,KAAKuR,EAAQM,aACb7R,KAAKuR,EAAQO,UACb9R,KAAKuR,EAAQoG,YACb3X,KAAKuR,EAAQkE,sBACbzV,KAAKuR,EAAQ6D,gBAPTwI,SAQEuD,IAGXzb,QAAS,SAAUI,GACjB,MAAO8X,GACJiC,YAAYpa,EAAOyC,aAAaC,OAAQrC,EAAKnF,QAC7CX,KAAKuR,EAAQC,eACbxR,KAAK,WACJ,MAAO8F,KAER9F,KAAKuR,EAAQgH,YACbvY,KAAKuR,EAAQkE,sBACbzV,KAAKuR,EAAQ6D,gBARTwI,SASEuD,IAMX2H,SAAU,SAAU9I,GAClB,MAAOpC,GACJmC,cAActa,EAAOyC,aAAaC,OAAQ6X,GAC1ChgB,KAAKuR,EAAQC,eACbxR,KAAKuR,EAAQM,aACb7R,KAAKuR,EAAQO,UAJT8L,SAKEuD,IAGXtf,YAAa,SAAUlB,GACrB,MAAOid,GACJ/b,YAAYlB,GAAU8E,EAAOyC,aAAa2P,YAAYlX,QACtDX,KAAKuR,EAAQC,eACbxR,KAAKuR,EAAQO,UACb9R,KAAKuR,EAAQqG,eACb5X,KAAKuR,EAAQkE,sBACbzV,KAAKuR,EAAQ6D,gBANTwI,SAOEuD,IAGXlX,aAAc,SAAUkO,EAAUnO,GAChC,MAAO4T,GACJ3T,aAAaxE,EAAOyC,aAAa2P,YAAYlX,OAAQwX,EAAUnO,GAC/DhK,KAAKuR,EAAQC,eACbxR,KAAKuR,EAAQM,aACb7R,KAAKuR,EAAQO,UACb9R,KAAKuR,EAAQtH,cACbjK,KAAKuR,EAAQkE,sBACbzV,KAAKuR,EAAQ6D,gBAPTwI,SAQEuD,IAGXlB,aAAc,SAAUjW,GACtB,MAAO4T,GACJqC,aAAaxa,EAAOyC,aAAa2P,YAAYlX,OAAQqJ,GACrDhK,KAAKuR,EAAQC,eACbxR,KAAKuR,EAAQM,aACb7R,KAAKuR,EAAQO,UACb9R,KAAKuR,EAAQuG,cACb9X,KAAKuR,EAAQkE,sBACbzV,KAAKuR,EAAQ6D,gBAPTwI,SAQEuD,IAQX0H,WAAY,SAAUiB,GACpB,GAAI9J,IAAc+J,SAIlB,OAHAprB,SAAQqD,QAAQ8nB,EAAS3qB,MAAO,SAAU2G,GACxCka,EAAU+J,MAAM7nB,KAAK/C,EAAMmH,UAAUR,MAEhC9G,EAAGY,QAAQogB,IAGpB1Z,UAAW,SAAUwjB,GACnB,GAAIvjB,MACAyjB,EAAWjrB,EAAM0R,SAASqZ,EAASG,KAQvC,OAPGtrB,SAAQ+I,UAAUoiB,EAASI,WAAU3jB,EAAS4jB,aAAeL,EAASI,SACtEvrB,QAAQ+I,UAAUsiB,KAAWzjB,EAAS6jB,UAAYJ,GAClDrrB,QAAQ+I,UAAUoiB,EAASxoB,QAAOiF,EAAS8jB,UAAYP,EAASxoB,MAChE3C,QAAQ+I,UAAUoiB,EAASQ,SAAQ/jB,EAASgkB,kBAAoBT,EAASQ,OACzE3rB,QAAQ+I,UAAUoiB,EAASU,SAAQjkB,EAASkkB,WAAaX,EAASU,OAClE7rB,QAAQ+I,UAAUoiB,EAASxB,SAAQ/hB,EAASmkB,YAAcZ,EAASxB,OACnE3pB,QAAQ+I,UAAUoiB,EAASa,QAAOpkB,EAASqkB,iBAAmBd,EAASa,MACnEpkB,GAGTwD,YAAa,SAAU+f,GACrB,GAAI9f,KAGJ,OAFGrL,SAAQ+I,UAAUoiB,EAASxoB,QAAO0I,EAAW6gB,YAAcf,EAASxoB,MACpE3C,QAAQ+I,UAAUoiB,EAASpoB,WAAUsI,EAAW8gB,eAAiBhB,EAASpoB,SACtE1C,EAAGY,QAAQoK,IAItB,OAAO7K,MAKbR,QAAQC,OAAO,UAIX+Q,QAAQ,SAAA,YAAA,eAAA,UAAA,KAAA,SAAS,SAAUiO,EAAWuD,EAAc5P,EAASvS,EAAIyG,GAE/D,GAAI8E,IAIFia,KAAM,WACJ,MAAO5G,GACJ0B,UAAU7Z,EAAOyC,aAAaC,QAC9BnI,KAAKuR,EAAQC,eACbxR,KAAKuR,EAAQO,UACb9R,KAAKuR,EAAQ2E,qBACblW,KAAKuR,EAAQkG,aACbzX,KAAKuR,EAAQkE,sBACbzV,KAAKuR,EAAQ6D,gBAPTwI,SAQEuD,IAGXzU,KAAM,SAAUgL,GACd,MAAOkG,GACJ8B,UAAUja,EAAOyC,aAAaC,OAAQuP,GACtC1X,KAAKuR,EAAQC,eACbxR,KAAKuR,EAAQM,aACb7R,KAAKuR,EAAQO,UACb9R,KAAKuR,EAAQ2E,qBACblW,KAAKuR,EAAQkG,aACbzX,KAAKuR,EAAQkE,sBACbzV,KAAKuR,EAAQ6D,gBARTwI,SASEuD,IAGXuD,OAAQ,SAAUna,GAChB,MAAOqT,GACJ4B,YAAYjV,GACZvK,KAAKuR,EAAQC,eAFToM,SAGEuD,IAeXzb,QAAS,SAAU6E,GACjB,MAAOqT,GACJ6B,aAAaha,EAAOyC,aAAaC,OAAQoC,EAAMkO,QAC/CzY,KAAKuR,EAAQC,eACbxR,KAAK,WACJ,MAAOuK,KAERvK,KAAKuR,EAAQiH,aACbxY,KAAKuR,EAAQkE,sBACbzV,KAAKuR,EAAQ6D,gBARTwI,SASEuD,IAGX0E,WAAY,SAAUiE,GACpB,GAAIvK,KAiBJ,OAhBG5gB,SAAQ+I,UAAUoiB,EAASxoB,QAAOie,EAAUwL,WAAajB,EAASxoB,MAClE3C,QAAQ+I,UAAUoiB,EAASkB,WAAUzL,EAAU0L,cAAgBnB,EAASkB,QAAQ/f,IAChFtM,QAAQ+I,UAAUoiB,EAAS7qB,WAAUsgB,EAAU2L,cAAgBpB,EAAS7qB,QAAQgM,IAChFtM,QAAQ+I,UAAUoiB,EAASpmB,WAAU6b,EAAU4L,cAAgBrB,EAASpmB,QAAQuH,IAChFtM,QAAQ+I,UAAUoiB,EAASsB,eAAc7L,EAAU8L,kBAAoBvB,EAASsB,YAAYngB,IAC5FtM,QAAQ+I,UAAUoiB,EAASwB,WAAU/L,EAAUgM,cAAgBzB,EAASwB,QAAQrgB,IAChFtM,QAAQ+I,UAAUoiB,EAAStS,mBAAkB+H,EAAUiM,sBAAwB1B,EAAStS,gBAAgBvM,IACxGtM,QAAQ+I,UAAUoiB,EAAS2B,UAASlM,EAAUmM,aAAe5B,EAAS2B,OAAOxgB,IAC7EtM,QAAQoD,QAAQ+nB,EAAStiB,UAC1B+X,EAAUoM,gBACVhtB,QAAQqD,QAAQ8nB,EAAStiB,OAAQ,SAAUoE,GACzC2T,EAAUoM,aAAazpB,MACrB0pB,aAAc,GAAGhgB,EAAMzD,YAItBoX,GAIX,OAAOhV,MAKb5L,QAAQC,OAAO,UAIZ+Q,QAAQ,UAAA,iBAAU,SAAU0B,GAE3B,GAAI5L,IACDmL,MAAO,WACLnL,EAAO+B,OAAS6J,EAAeyI,SAAS,cACxCrU,EAAOyO,QAAU7C,EAAeyI,SAAS,eACzCrU,EAAO6M,YAAcjB,EAAeyI,SAAS,mBAC7CrU,EAAOyC,aAAezC,EAAO+B,OAAOpG,OAAO,GAAKiQ,EAAeyI,SAAS,iBAAmB+R,QAMhG,OAFApmB,GAAOmL,QAEAnL,KAKX9G,QAAQC,OAAO,UAIX+Q,QAAQ,WAAA,YAAA,eAAA,UAAA,SAAA,QAAA,KAAW,SAAUiO,EAAWuD,EAAc5P,EAAS9L,EAAQ1G,EAAOC,GAE5E,GAAIC,IAKFwN,eAAgB,SAAUyQ,GACxB,MAAOU,GACJyC,sBAAsBnD,GADlBU,SAEEuD,IAMXqD,KAAM,WACJ,MAAO5G,GACJ0C,YAAY7a,EAAOyC,aAAaC,OAAQ1C,EAAOyC,aAAa4E,WAAWxD,WACvEtJ,KAAKuR,EAAQC,eACbxR,KAAKuR,EAAQO,UACb9R,KAAKuR,EAAQsE,qBACb7V,KAAKuR,EAAQmE,eACb1V,KAAKuR,EAAQkE,sBACbzV,KAAKuR,EAAQ6D,gBAPTwI,SAQEuD,IAMX2K,YAAa,SAAU3rB,GACrB,MAAOyd,GACJ6C,iBAAiBhb,EAAOyC,aAAaC,OAAQhI,GAC7CH,KAAKuR,EAAQC,eACbxR,KAAKuR,EAAQO,UACb9R,KAAK,SAAUN,GACd,MAAO6R,GAAQqE,mBAAmBzV,EAAST,KAE5CM,KAAKuR,EAAQkE,sBACbzV,KAAKuR,EAAQ6D,gBARTwI,SASEuD,IAMX/d,aAAc,SAAUjD,EAASmD,EAAYC,GAC3C,MAAOqa,GACJxa,aAAaqC,EAAOyC,aAAaC,OAAQhI,EAASmD,GAClDtD,KAAKuR,EAAQC,eACbxR,KAAKuR,EAAQM,aACb7R,KAAKuR,EAAQO,UACb9R,KAAK,SAAUN,GAEd,MADA6R,GAAQwG,aAAa5X,EAAST,EAAK6D,GAC5B7D,IAERM,KAAKuR,EAAQkE,sBACbzV,KAAKuR,EAAQ6D,gBAVTwI,SAWEuD,IAMXrhB,WAAY,SAAUK,EAASD,EAAUE,GACvC,MAAOwd,GACJ9d,WAAW2F,EAAOyC,aAAaC,OAAQhI,EAASD,GAChDF,KAAKuR,EAAQC,eACbxR,KAAKuR,EAAQM,aACb7R,KAAKuR,EAAQO,UACb9R,KAAKuR,EAAQ0E,qBACbjW,KAAK,SAAUN,GAEd,MADA6R,GAAQ0G,WAAW9X,EAAST,EAAKU,GAC1BV,IAERM,KAAKuR,EAAQkE,sBACbzV,KAAKuR,EAAQ6D,gBAXTwI,SAYEuD,IAMX3d,cAAe,SAAUrD,EAASgY,EAAU5U,GAC1C,MAAOqa,GAAUjV,mBAAmBlD,EAAOyC,aAAaC,OAAQgQ,EAAUhY,GACvEH,KAAKuR,EAAQC,eACbxR,KAAK,WACJ,MAAOuR,GAAQ2G,aAAa/X,EAASgY,EAAU5U,KAEhDvD,KAAKuR,EAAQkE,sBACbzV,KAAKuR,EAAQ6D,gBANTwI,SAOEuD,IAMX3gB,iBAAkB,SAAUL,EAASM,EAAQL,GAC3C,MAAOwd,GAAUtd,YAAYmF,EAAOyC,aAAaC,OAAQhI,EAASM,GAC/DT,KAAKuR,EAAQC,eACbxR,KAAK,WACJ,MAAOuR,GAAQuH,gBAAgB3Y,EAASM,EAAQL,KAEjDJ,KAAKuR,EAAQkE,sBACbzV,KAAKuR,EAAQ6D,gBANTwI,SAOEuD,IAMX7R,iBAAkB,SAAUnP,EAASgY,EAAU1X,EAAQL,EAAUiP,GAC/D,MAAOuO,GACJtd,YAAYmF,EAAOyC,aAAaC,OAAQhI,EAASM,GACjDT,KAAKuR,EAAQC,eACbxR,KAAK,WACJ,MAAOuR,GAAQ8G,gBAAgBlY,EAASgY,EAAU1X,EAAQL,EAAUiP,KAErErP,KAAKuR,EAAQkE,sBACbzV,KAAKuR,EAAQ6D,gBAPTwI,SAQEuD,IAMXjS,gBAAiB,SAAU/O,EAASgY,EAAU1X,EAAQL,EAAUiP,EAAcnP,GAC5E,MAAO0d,GACJiD,WAAWpb,EAAOyC,aAAaC,OAAQhI,EAASM,EAAQP,GACxDF,KAAKuR,EAAQC,eACbxR,KAAKuR,EAAQM,aACb7R,KAAKuR,EAAQO,UACb9R,KAAKuR,EAAQ0E,qBACbjW,KAAK,SAAUN,GACd,MAAO6R,GAAQrC,gBAAgB/O,EAASgY,EAAU1X,EAAQL,EAAUiP,EAAc3P,KAEnFM,KAAKuR,EAAQkE,sBACbzV,KAAKuR,EAAQ6D,gBAVTwI,SAWEuD,IAMX3a,OAAQ,SAAUua,EAAY1X,GAC5B,MAAOuU,GACJjI,YAAYlQ,EAAOyC,aAAaC,OAAQkB,GACxCrJ,KAAKuR,EAAQC,eACbxR,KAAKuR,EAAQM,aACb7R,KAAKuR,EAAQO,UACb9R,KAAKuR,EAAQsE,qBACb7V,KAAK,SAAUN,GAEd,MADAA,GAAI4J,UAAYyX,EACTrhB,IAERM,KAAKuR,EAAQoE,aACb3V,KAAKuR,EAAQkE,sBACbzV,KAAKuR,EAAQ6D,gBAZTwI,SAaEuD,IAMXuD,OAAQ,SAAUrb,GAChB,MAAOuU,GACJkD,YAAYrb,EAAOyC,aAAaC,OAAQ1C,EAAOyC,aAAa4E,WAAWxD,UAAWD,GAClFrJ,KAAKuR,EAAQC,eACbxR,KAAKuR,EAAQyH,KAHT4E,SAIEuD,IAMXH,UAAW,SAAUC,GACnB,MAAOrD,GACJoD,UAAUvb,EAAOyC,aAAaC,OAAQ8Y,GACtCjhB,KAAKuR,EAAQC,eACbxR,KAAKuR,EAAQM,aACb7R,KAAKuR,EAAQO,UACb9R,KAAKuR,EAAQuF,gBACb9W,KAAKuR,EAAQkE,sBACbzV,KAAKuR,EAAQ6D,gBAPTwI,SAQEuD,IAMXzb,QAAS,SAAU2D,GACjB,MAAOuU,GACJsD,aAAazb,EAAOyC,aAAaC,OAAQ1C,EAAOyC,aAAa4E,WAAWxD,UAAWD,EAAUhB,QAC7FrI,KAAKuR,EAAQC,eACbxR,KAAK,WACJ,MAAOqJ,KAERrJ,KAAKuR,EAAQwH,aACb/Y,KAAKuR,EAAQkE,sBACbzV,KAAKuR,EAAQ6D,gBARTwI,SASEuD,IAMVzU,KAAM,SAAUvM,GACd,MAAOyd,GACL4C,UAAU/a,EAAOyC,aAAaC,OAAQhI,GACtCH,KAAKuR,EAAQC,eACbxR,KAAKuR,EAAQM,aACb7R,KAAKuR,EAAQO,UACb9R,KAAKuR,EAAQoE,aACb3V,KAAKuR,EAAQsE,qBACb7V,KAAKuR,EAAQkE,sBACbzV,KAAKuR,EAAQ6D,gBARRwI,SASCuD,IAQV/X,WAAY,SAAU0gB,GACpB,GAAIzgB,MACA0iB,EAAYhtB,EAAM0R,SAASqZ,EAASG,MACpC+B,EAAYjtB,EAAMkR,SAAS6Z,EAAS1Z,KAexC,OAdGzR,SAAQ+I,UAAUoiB,EAAS3pB,WAAUkJ,EAAU4iB,QAAUnC,EAAS3pB,SAClE2pB,EAAShc,OAASnP,QAAQ+I,UAAUoiB,EAAShc,MAAMnN,UAAS0I,EAAU6iB,eAAiBpC,EAAShc,MAAMnN,QACtGmpB,EAAS9b,OAASrP,QAAQ+I,UAAUoiB,EAAS9b,MAAMrN,UAAS0I,EAAU8iB,eAAiBrC,EAAS9b,MAAMrN,QACtGhC,QAAQ+I,UAAUoiB,EAAStc,UAASnE,EAAU+iB,iBAAmBtC,EAAStc,QAC1E7O,QAAQ+I,UAAUoiB,EAASrc,UAASpE,EAAUgjB,iBAAmBvC,EAASrc,QAC1E9O,QAAQ0C,SAASyoB,EAASwC,gBAAejjB,EAAUkjB,mBAAqBzC,EAASwC,cACjF3tB,QAAQ0C,SAAS2qB,KAAY3iB,EAAUmjB,gBAAkBR,GACzDrtB,QAAQ0C,SAAS0qB,KAAY1iB,EAAUojB,UAAYV,GACnDptB,QAAQ0C,SAASyoB,EAAS4C,WAAUrjB,EAAUsjB,aAAe7C,EAAS4C,SACtE/tB,QAAQ0C,SAASyoB,EAASxB,SAAQjf,EAAUujB,iBAAmB9C,EAASxB,OACxEwB,EAAS5b,QAAUvP,QAAQ+I,UAAUoiB,EAAS5b,OAAOC,SAAQ9E,EAAUwjB,cAAgB/C,EAAS5b,OAAOC,OACvGxP,QAAQ+I,UAAUoiB,EAASgD,aAAYzjB,EAAU0jB,qBAAuBjD,EAASgD,WACjFnuB,QAAQ+I,UAAUoiB,EAASkD,aAAY3jB,EAAU4jB,qBAAuBnD,EAASkD,WACjFruB,QAAQ0C,SAASyoB,EAASU,SAAQnhB,EAAU6jB,WAAapD,EAASU,OAC9DxrB,EAAGY,QAAQyJ,IAQpBhG,YAAa,SAAUymB,GACrB,GAAIxmB,KAOJ,OANG3E,SAAQ+I,UAAUoiB,EAASnpB,UAAS2C,EAAW6pB,QAAU,GAAGrD,EAASnpB,QACrEhC,QAAQ+I,UAAUoiB,EAASjpB,QAASyC,EAAW8pB,QAAU,GAAGtD,EAASjpB,OACnEyC,EAAW8pB,QAAU,IACvBzuB,QAAQ+I,UAAUoiB,EAASlpB,SAAQ0C,EAAWmF,KAAOqhB,EAASlpB,OAC9DjC,QAAQ+I,UAAUoiB,EAASxoB,QAAOgC,EAAW+pB,UAAYvD,EAASxoB,MAClE3C,QAAQ+I,UAAUoiB,EAASpoB,WAAU4B,EAAWgqB,aAAexD,EAASpoB,SACpE1C,EAAGY,QAAQ0D,IAQpB2L,eAAgB,SAAU6a,GACxB,GAAI5pB,KAMJ,OALGvB,SAAQ+I,UAAUoiB,EAASjpB,UAASX,EAASktB,QAAUtD,EAASjpB,QAChElC,QAAQ+I,UAAUoiB,EAASlT,uBAAsB1W,EAASqtB,UAAYzD,EAASlT,oBAAoBzI,OACnGxP,QAAQ+I,UAAUoiB,EAASlC,sBAAqB1nB,EAASstB,mBAAqB1D,EAASlC,mBAAmBzZ,OAC1GxP,QAAQ+I,UAAUoiB,EAAShC,QAAO5nB,EAAS4nB,KAAOgC,EAAShC,MAC3DnpB,QAAQ+I,UAAUoiB,EAASjC,wBAAuB3nB,EAASutB,sBAAwB3D,EAASjC,qBAAqB1Z,OAC7GnP,EAAGY,QAAQM,IAQpBD,UAAW,SAAU6pB,GACnB,GAAI5pB,KASJ,OARGvB,SAAQ+I,UAAUoiB,EAASnpB,UAAST,EAASitB,QAAU,GAAGrD,EAASnpB,QACnEhC,QAAQ+I,UAAUoiB,EAASjpB,QAASX,EAASktB,QAAU,GAAGtD,EAASjpB,OACjEX,EAASktB,QAAU,IACrBzuB,QAAQ+I,UAAUoiB,EAAS4D,WAAa/uB,QAAQ+I,UAAUoiB,EAAS4D,SAASziB,MAAK/K,EAASqtB,UAAY,GAAGzD,EAAS4D,SAASziB,IAC3HtM,QAAQ+I,UAAUoiB,EAASvqB,wBAAuBW,EAASstB,mBAAqB,GAAG1D,EAASvqB,sBAC5FZ,QAAQ+I,UAAUoiB,EAAShC,QAAO5nB,EAAS4nB,KAAO,GAAGgC,EAAShC,MAC9DnpB,QAAQ+I,UAAUoiB,EAASxoB,QAAOpB,EAASmtB,UAAY,GAAGvD,EAASxoB,MACnE3C,QAAQ+I,UAAUoiB,EAASpoB,WAAUxB,EAASotB,aAAe,GAAGxD,EAASpoB,SACrE1C,EAAGY,QAAQM,IAQnB4mB,SAAU,SAAUgD,GACnB,GAAI7I,KAGJ,OAFGtiB,SAAQ+I,UAAUoiB,EAASxoB,QAAO2f,EAAQ0M,UAAY7D,EAASxoB,MAC/D3C,QAAQ+I,UAAUoiB,EAASa,QAAO1J,EAAQ2M,iBAAmB9D,EAASa,MAClE3rB,EAAGY,QAAQqhB,IAIvB,OAAOhiB,MAKbN,QAAQC,OAAO,UAIX+Q,QAAQ,eAAA,YAAA,eAAA,UAAA,SAAe,SAAUiO,EAAWuD,EAAc5P,EAAS9L,GAEjE,GAAI2F,IAIFE,SAAU,WACR,MAAOsS,GACJY,sBACAxe,KAAKuR,EAAQC,eACbxR,KAAKuR,EAAQO,UACb9R,KAAKuR,EAAQoD,2BACb3U,KAAKuR,EAAQgB,uBACbvS,KAAKuR,EAAQ2B,qBANT0K,SAOEuD,IAMXqF,aAAc,WACZ,MAAO5I,GACJa,0BACAze,KAAKuR,EAAQC,eACbxR,KAAKuR,EAAQO,UACb9R,KAAKuR,EAAQoD,2BACb3U,KAAKuR,EAAQkB,2BACbzS,KAAKuR,EAAQ2B,qBANT0K,SAOEuD,IAGXuD,OAAQ,SAAU/F,GAChB,MAAOf,GACJc,iBAAiBC,GACjB3e,KAAKuR,EAAQC,eAFToM,SAGEuD,IAGXzb,QAAS,SAAUiZ,GACjB,GAAIkP,IACFC,cAAe,GAAKnP,EAAeoP,aACnCC,WAAYrP,EAAesP,UAC3BC,QAASvP,EAAexW,OACxByM,OAAQ,IAEV,OAAOgJ,GACJgB,iBAAiBiP,GACjB7tB,KAAKuR,EAAQC,eAFToM,SAGEuD,IAGXoF,OAAQ,SAAU5H,GAChB,GAAIkP,IACFC,cAAe,GAAKnP,EAAeoP,aACnCC,WAAYrP,EAAesP,UAC3BC,QAASvP,EAAexW,OACxByM,OAAQ,IAEV,OAAOgJ,GACJgB,iBAAiBiP,GACjB7tB,KAAKuR,EAAQC,eAFToM,SAGEuD,IAGXuF,QAAS,SAAU/H,GACjB,GAAIkP,IACFC,cAAe,GAAKnP,EAAeoP,aACnCC,WAAYrP,EAAesP,UAC3BC,QAASvP,EAAexW,OACxByM,OAAQ,IAEV,OAAOgJ,GACJgB,iBAAiBiP,GACjB7tB,KAAKuR,EAAQC,eAFToM,SAGEuD,IAGX8E,gBAAiB,SAAU6D,GACzB,GAAInL,KAWJ,OAVGhgB,SAAQoD,QAAQ+nB,EAAStiB,SAAW7I,QAAQ+I,UAAUoiB,EAASqE,cAChExP,EAAeoL,SACfprB,QAAQqD,QAAQ8nB,EAAStiB,OAAQ,SAAUoE,GACzC+S,EAAeoL,MAAM7nB,MACnBksB,oBAAqB3oB,EAAO6M,YAAYF,MACxC4b,WAAYlE,EAASqE,WACrBD,QAAStiB,EAAMzD,YAIdwW,GAgIX,OAAOvT,MAKbzM,QAAQC,OAAO,UAIX+Q,QAAQ,UAAA,YAAA,eAAA,UAAA,KAAA,QAAU,SAAUiO,EAAWuD,EAAc5P,EAASvS,EAAID,GAEhE,GAAIyI,IAIDgd,KAAM,WACL,MAAO5G,GACJiB,aACA7e,KAAKuR,EAAQC,eACbxR,KAAKuR,EAAQO,UACb9R,KAAKuR,EAAQ6B,sBACbpT,KAAKuR,EAAQyD,cACbhV,KAAKuR,EAAQ6D,gBANTwI,SAOEuD,IAMXqE,YAAa,WACX,MAAO5H,GACJkB,oBACA9e,KAAKuR,EAAQC,eACbxR,KAAKuR,EAAQO,UACb9R,KAAKuR,EAAQ6B,sBACbpT,KAAKuR,EAAQ0D,qBACbjV,KAAKuR,EAAQ2B,qBANT0K,SAOEuD,IAMXuD,OAAQ,SAAUtY,GAChB,MAAOwR,GACJmB,YAAY3S,GACZpM,KAAKuR,EAAQC,eACbxR,KAAKuR,EAAQM,aACb7R,KAAKuR,EAAQO,UACb9R,KAAKuR,EAAQ6B,sBACbpT,KAAKuR,EAAQgE,oBACbvV,KAAKuR,EAAQkE,sBAPTmI,SAQEuD,IAMXzU,KAAM,SAAUwQ,GACd,MAAOU,GACJsB,UAAUhC,GACVld,KAAKuR,EAAQC,eACbxR,KAAKuR,EAAQM,aACb7R,KAAKuR,EAAQO,UACb9R,KAAKuR,EAAQ6B,sBACbpT,KAAKuR,EAAQgE,oBACbvV,KAAKuR,EAAQkE,sBACbzV,KAAKuR,EAAQ6D,gBARTwI,SASEuD,IAMXkE,eAAgB,SAAUzZ,GACxB,GAAIyiB,EAQJ,OALEA,GADoB,IAAnBziB,EAAM2H,SACGqK,EAAUwB,yBAAyBxT,EAAMzD,QAGzCyV,EAAUuB,oBAAoBvT,EAAMzD,QAEzCkmB,EACJruB,KAAKuR,EAAQC,eACbxR,KAAKuR,EAAQO,UACb9R,KAAKuR,EAAQyF,kBACbhX,KAAKuR,EAAQkE,sBACbzV,KAAKuR,EAAQ6D,gBALTiZ,SAMElN,IAMXzY,YAAa,SAAUwU,GACrB,MAAOU,GAAUlV,YAAYwU,GAC1Bld,KAAKuR,EAAQC,eACbxR,KAAKuR,EAAQO,UACb9R,KAAKuR,EAAQ2F,eACblX,KAAKuR,EAAQkE,sBACbzV,KAAKuR,EAAQ6D,gBALTwI,SAMEuD,IAGXxY,mBAAoB,SAAUuU,EAAS/E,EAAU/P,GAC/C,MAAOwV,GAAUjV,mBAAmBuU,EAAS/E,EAAU/P,EAAYC,QAChErI,KAAKuR,EAAQC,eACbxR,KAAK,WACJ,MAAOuR,GAAQmH,kBAAkBP,EAAU/P,KAE5CpI,KAAKuR,EAAQkE,sBACbzV,KAAKuR,EAAQ6D,gBANTwI,SAOEuD,IAGXlZ,kBAAmB,SAAUiV,EAAS/c,EAASkf,GAC7C,MAAOzB,GAAU3V,kBAAkBiV,EAAS/c,EAASkf,GAClDrf,KAAKuR,EAAQC,eACbxR,KAAK,WACJ,OACEqI,OAAQlI,EACRmuB,eAAgBjP,EAAgB7W,aAGnCxI,KAAK,SAAUN,GACd,MAAO6R,GAAQtJ,kBAAkBoX,EAAgB/W,aAAc5I,KAEhEM,KAAKuR,EAAQkE,sBACbzV,KAAKuR,EAAQ6D,gBAZTwI,SAaEuD,IAMXzb,QAAS,SAAUkG,GACjB,MAAOgS,GACJqB,aAAarT,GACb5L,KAAKuR,EAAQC,eACbxR,KAAK,WACJ,MAAO4L,KAER5L,KAAKuR,EAAQ4D,aACbnV,KAAKuR,EAAQ6D,gBAPTwI,SAQEuD,IAMX3a,OAAQ,SAAU0W,EAAS9Q,GACzB,MAAOwR,GACJoB,YAAY9B,EAAS9Q,GACrBpM,KAAKuR,EAAQC,eACbxR,KAAKuR,EAAQM,aACb7R,KAAKuR,EAAQO,UACb9R,KAAKuR,EAAQ6B,sBACbpT,KAAKuR,EAAQgE,oBACbvV,KAAKuR,EAAQkE,sBACbzV,KAAKuR,EAAQ6D,gBARTwI,SASEuD,IAMXtU,YAAa,WACX,MAAO+Q,GACJ/Q,cACA7M,KAAKuR,EAAQC,eACbxR,KAAKuR,EAAQO,UACb9R,KAAKuR,EAAQ8D,eACbrV,KAAKuR,EAAQ+D,iBALTsI,SAMEuD,IAMX8F,YAAa,SAAU/J,GACrB,MAAOU,GACJ8C,gBAAgBxD,GAChBld,KAAKuR,EAAQC,eACbxR,KAAKuR,EAAQO,UACb9R,KAAKuR,EAAQgF,0BACbvW,KAAKuR,EAAQ4F,eACbnX,KAAKuR,EAAQkE,sBACbzV,KAAKuR,EAAQ6D,gBACbpV,KAAKuR,EAAQyH,KART4E,SASEuD,IAMXR,aAAc,SAAUzD,GACtB,MAAOU,GACJ+C,aAAazD,GACbld,KAAKuR,EAAQC,eACbxR,KAAKuR,EAAQO,UACb9R,KAAKuR,EAAQgF,0BACbvW,KAAKuR,EAAQ8F,gBACbrX,KAAKuR,EAAQkE,sBACbzV,KAAKuR,EAAQ6D,gBACbpV,KAAKuR,EAAQyH,KART4E,SASEuD,IAMXP,oBAAqB,SAAU1D,GAC7B,MAAOU,GACJgD,oBAAoB1D,GACpBld,KAAKuR,EAAQC,eACbxR,KAAKuR,EAAQO,UACb9R,KAAKuR,EAAQgF,0BACbvW,KAAKuR,EAAQgG,uBACbvX,KAAKuR,EAAQkE,sBACbzV,KAAKuR,EAAQ6D,gBACbpV,KAAKuR,EAAQyH,KART4E,SASEuD,IAQXhV,WAAY,SAAU2d,GACpB,GAAI1d,MACAmiB,EAAYxvB,EAAMkR,SAAS6Z,EAASrW,MAmBxC,OAlBG9U,SAAQ+I,UAAUoiB,EAASxoB,QAAO8K,EAAUoiB,UAAY1E,EAASxoB,MACjE3C,QAAQ+I,UAAUoiB,EAASa,QAAOve,EAAUqiB,iBAAmB3E,EAASa,MACxEhsB,QAAQ+I,UAAUoiB,EAAS1X,SAAQhG,EAAUsiB,WAAa5E,EAAS1X,OACnEzT,QAAQ+I,UAAUoiB,EAAS4C,WAAUtgB,EAAUuiB,aAAe7E,EAAS4C,SACvE/tB,QAAQ+I,UAAUoiB,EAASzL,QAAOjS,EAAUwiB,UAAY,GAAK9E,EAASzL,MACtE1f,QAAQ+I,UAAUoiB,EAAS+E,aAAYziB,EAAU0iB,iBAAmBhF,EAAS+E,WAC7ElwB,QAAQ+I,UAAUoiB,EAASiF,WAAU3iB,EAAU4iB,aAAe,GAAKlF,EAASiF,SAC5EpwB,QAAQ+I,UAAUoiB,EAASmF,aAAY7iB,EAAU8iB,kBAAoBpF,EAASmF,WAC9EtwB,QAAQ+I,UAAUoiB,EAASqF,gBAAe/iB,EAAUgjB,mBAAqBtF,EAASqF,cAClFxwB,QAAQ+I,UAAUoiB,EAASuF,aAAYjjB,EAAUkjB,gBAAkBxF,EAASuF,WAC5E1wB,QAAQ+I,UAAUoiB,EAASyF,iBAAgBnjB,EAAUojB,oBAAsB1F,EAASyF,eACpF5wB,QAAQ+I,UAAUoiB,EAAS2F,kBAAiBrjB,EAAUsjB,qBAAuB5F,EAAS2F,gBACtF9wB,QAAQoD,QAAQwsB,IAAcA,EAAUntB,OAAS,GAAKmtB,EAAU,KAAIniB,EAAUujB,gBAAkBpB,EAAU,IAC1G5vB,QAAQoD,QAAQwsB,IAAcA,EAAUntB,OAAS,GAAKmtB,EAAU,KAAIniB,EAAUwjB,cAAgBrB,EAAU,IACxGzE,EAAS+F,QAAU/F,EAAS+F,OAAOC,OAAQ1jB,EAAU2jB,QAAUjG,EAAS+F,OAAOC,OAE7E1jB,EAAU2jB,QAAU,EACtBjG,EAAShd,YAAcgd,EAAShd,WAAWxD,YAAW8C,EAAU4jB,gBAAkBlG,EAAShd,WAAWxD,WAClGtK,EAAGY,QAAQwM,IAKtB,OAAO5E,MAGb,WACE,YAOA,SAASyoB,GACPC,EACAnf,EACAof,EACA1qB,EACAye,GAGEgM,EAAWnf,QAAUA,CAGrB,IAAIqf,GAAqBF,EAAWtM,IAAI,sBAAuB,SAAUhY,EAAOykB,GAC9E,GAAIC,GAAMD,EAAQE,UAClBxf,GAAQyf,YAAcF,EAAIE,aAAeL,GAIxC1qB,GAAO6M,aAAe7M,EAAO6M,YAAYiM,WAC1C2F,EAAMjL,OAIRiX,EAAWtM,IAAI,WAAY,WACzBwM,MAgDNH,EAAS3tB,SAAW,aAAc,UAAW,qBAAsB,SAAU,SA5E7E3D,QACGC,OAAO,UACP6xB,IAAIR,MA+BT,WACE,YAOA,SAASS,GAAaC,EAAgBC,GACpC,GAAIC,GAAkB,SAAUxW,EAAUE,EAAQ9U,GAC5CA,EAAO6M,aAAgB7M,EAAO6M,YAAYiM,WAC5ClE,EAAS,WACPE,EAAO6G,GAAG,iBAkFhByP,GAAgBvuB,SAAW,WAAY,SAAU,UA7EjDquB,EACGnW,MAAM,QACLsW,YAAU,EACVruB,YAAa,6BAEd+X,MAAM,cACLsW,YAAU,EACVruB,YAAa,6BACbsuB,QAASF,IAEVrW,MAAM,eACLgC,IAAK,IACL/Z,YAAa,+BACbC,WAAY,mBACZC,aAAc,OAEf6X,MAAM,sBACLgC,IAAK,WACL/Z,YAAa,iCACbC,WAAY,oBACZC,aAAc,KACdouB,QAASF,IAEVrW,MAAM,0BACLgC,IAAK,gBACL/Z,YAAa,yCACbC,WAAY,wBACZC,aAAc,KACdouB,QAASF,IAEVrW,MAAM,qBACLgC,IAAK,UACL/Z,YAAa,+BACbC,WAAY,mBACZC,aAAc,KACdouB,QAASF,IAEVrW,MAAM,oBACLgC,IAAK,SACL/Z,YAAa,6BACbC,WAAY,kBACZC,aAAc,KACdouB,QAASF,IAEVrW,MAAM,sBACLgC,IAAK,WACL/Z,YAAa,iCACbC,WAAY,oBACZC,aAAc,KACdouB,QAASF,IAEVrW,MAAM,uBACLgC,IAAK,YACL/Z,YAAa,mCACbC,WAAY,qBACZC,aAAc,KACdouB,QAASF,IAEVrW,MAAM,yBACLgC,IAAK,cACL/Z,YAAa,uCACbC,WAAY,uBACZC,aAAc,KACdouB,QAASF,IAEVrW,MAAM,sBACLgC,IAAK,WACL/Z,YAAa,iCACbC,WAAY,oBACZC,aAAc,KACdouB,QAASF,IAEVrW,MAAM,oBACLgC,IAAK,SACL/Z,YAAa,6BACbC,WAAY,kBACZC,aAAc,KACdouB,QAASF,IAEVrW,MAAM,0BACLgC,IAAK,eACL/Z,YAAa,yCACbC,WAAY,wBACZC,aAAc,KACdouB,QAASF,IAEVrW,MAAM,2BACLgC,IAAK,gBACL/Z,YAAa,2CACbC,WAAY,yBACZC,aAAc,KACdouB,QAASF,IAEVrW,MAAM,4BACLgC,IAAK,kBACL/Z,YAAa,6CACbC,WAAY,0BACZC,aAAc,KACdouB,QAASF,IAEVrW,MAAM,6BACLgC,IAAK,mBACL/Z,YAAa,+CACbC,WAAY,2BACZC,aAAc,KACdouB,QAASF,IAEVrW,MAAM,cACLgC,IAAK,SACL/Z,YAAa,6BACbC,WAAY,kBACZC,aAAc,KACd4tB,QACEC,YAAa,8BAEfO,SAAA,WAAA,SAAA,UAAS,SAAU1W,EAAUE,EAAQxJ,GAChCA,EAAQuY,UACTjP,EAAS,WACPE,EAAO6G,GAAG,qBAKjB5G,MAAM,iBACLgC,IAAK,YACL/Z,YAAa,mCACbC,WAAY,qBACZC,aAAc,KACd4tB,QACEC,YAAa,iCAEfO,SAAA,WAAA,SAAA,UAAS,SAAU1W,EAAUE,EAAQxJ,GAChCA,EAAQuY,UACTjP,EAAS,WACPE,EAAO6G,GAAG,qBAKjB5G,MAAM,eACLgC,IAAK,UACLuU,SAAA,WAAA,QAAS,SAAS1W,EAAU6J,GAC1B7J,EAAS,WACP6J,EAAM5F,eAIdsS,EAAmBI,UAAU,KApF/BN,EAAapuB,SAAW,iBAAkB,sBA7E1C3D,QACGC,OAAO,UACPgQ,OAAO8hB,MAqKZ,WACE,YAEA/xB,SACGC,OAAO,UACPqyB,SAAS,WAAYC,UACrBD,SAAS,SAAUE,QACnBF,SAAS,qBAAsB,iCAC/BA,SAAS,qBAAsB,oEAC/BA,SAAS,eAAgB,wDACzBA,SAAS,cAAe,yDACxBA,SAAS,cAAe,uDACxBA,SAAS,gBAAiB,2DAC1BA,SAAS,cAAe,yDACxBA,SAAS,gBAAiB,2DAC1BA,SAAS,gBAAiB,2DAC1BA,SAAS,aAAc,uDACvBA,SAAS,gBAAiB,+CAC1BA,SAAS,iBAAkB,uCAGhC,WACE,YAOA,SAASriB,GAAOwiB,EAAcC,EAAcC,EAAkBC,EAAmBC,GAE/EJ,EAAaK,cAAa,GAG1BH,EAAiBI,gBAAgB,WAGjCL,EAAaM,WAAY,EACzBN,EAAaO,QAAU,IACvBP,EAAaQ,cAAgB,mBAC7BR,EAAaS,mBAAoB,EACjCT,EAAaU,aAAc,EAG3BR,EAAkBS,WAAU,GAC5BT,EAAkBU,WAAW,KAG7BT,EAAaU,UAAU,SACvBV,EAAaW,eACXC,MAAO,qBAqDXxjB,EAAOtM,SAAW,eAAgB,eAAgB,mBAAoB,oBAAqB,gBA/E3F3D,QACGC,OAAO,UACPgQ,OAAOA,MA8BZjQ,QAAQC,OAAO,UAAU6xB,KAAK,iBAAkB,SAAS4B,GAAiBA,EAAeC,IAAI,gDAAgD,kNAC7ID,EAAeC,IAAI,gDAAgD,81CACnED,EAAeC,IAAI,kDAAkD;AACrED,EAAeC,IAAI,+BAA+B,wGAClDD,EAAeC,IAAI,6BAA6B,gLAChDD,EAAeC,IAAI,mCAAmC,y0DACtDD,EAAeC,IAAI,yCAAyC,62ZAC5DD,EAAeC,IAAI,2CAA2C,4pDAC9DD,EAAeC,IAAI,+BAA+B,umEAClDD,EAAeC,IAAI,yCAAyC,q3BAC5DD,EAAeC,IAAI,6BAA6B,uxDAChDD,EAAeC,IAAI,2BAA2B,qCAC9CD,EAAeC,IAAI,6CAA6C,irCAChED,EAAeC,IAAI,+CAA+C,skDAClED,EAAeC,IAAI,iCAAiC,+gDACpDD,EAAeC,IAAI,6BAA6B,kpCAChDD,EAAeC,IAAI,iCAAiC,gqCACpDD,EAAeC,IAAI,mCAAmC;AACtDD,EAAeC,IAAI,uCAAuC,iqEAC1DD,EAAeC,IAAI,iCAAiC,kgCACpDD,EAAeC,IAAI,6BAA6B,0wCAChDD,EAAeC,IAAI,2DAA2D,uTAC9ED,EAAeC,IAAI,yDAAyD,ulBAC5ED,EAAeC,IAAI,wCAAwC,iuJAC3DD,EAAeC,IAAI,2CAA2C,uiDAC9DD,EAAeC,IAAI,0CAA0C,qcAC7DD,EAAeC,IAAI,oCAAoC,swLACvDD,EAAeC,IAAI,oDAAoD,uqJACvED,EAAeC,IAAI,oCAAoC,wkCACvDD,EAAeC,IAAI,2CAA2C,ycAC9DD,EAAeC,IAAI,qCAAqC,g+CACxDD,EAAeC,IAAI,wCAAwC,ygBAC3DD,EAAeC,IAAI,wCAAwC,4jBAC3DD,EAAeC,IAAI,wCAAwC,qjBAC3DD,EAAeC,IAAI,kCAAkC;AACrDD,EAAeC,IAAI,8CAA8C,khBACjED,EAAeC,IAAI,kCAAkC,mqBACrDD,EAAeC,IAAI,2CAA2C,whEAC9DD,EAAeC,IAAI,6CAA6C,sdAChED,EAAeC,IAAI,uCAAuC,sgBAC1DD,EAAeC,IAAI,0CAA0C,0uKAC7DD,EAAeC,IAAI,0CAA0C,k2BAC7DD,EAAeC,IAAI,uCAAuC,smDAC1DD,EAAeC,IAAI,yCAAyC,qcAC5DD,EAAeC,IAAI,mCAAmC,m4DACtDD,EAAeC,IAAI,mCAAmC,+fACtDD,EAAeC,IAAI,qCAAqC,0/EACxDD,EAAeC,IAAI,uCAAuC,wcAC1DD,EAAeC,IAAI,iCAAiC,onBACpDD,EAAeC,IAAI,6CAA6C,ydAChED,EAAeC,IAAI,uCAAuC,yyBAC1DD,EAAeC,IAAI,mCAAmC,kcACtDD,EAAeC,IAAI,qCAAqC,6wHACxDD,EAAeC,IAAI,mCAAmC,kfACtDD,EAAeC,IAAI,uCAAuC,kcAC1DD,EAAeC,IAAI,iCAAiC,stHACpDD,EAAeC,IAAI,iCAAiC,yrBACpDD,EAAeC,IAAI,yDAAyD;AAC5ED,EAAeC,IAAI,6DAA6D","file":"scripts/app-df2e75355c.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular\n    .module('frispo', [\n      'ngAnimate',\n      'ngCookies',\n      'ngSanitize',\n      'ngMessages',\n      'ui.router',\n      'puigcerber.camelize',\n      'toastr',\n      'ezfb',\n      'ui.bootstrap',\n      'isteven-multi-select'\n    ]);\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('cardsBox', cardsBox);\n\n  /** @ngInject */\n  function cardsBox() {\n    var directive = {\n      restrict: 'EA',\n      templateUrl: 'app/pages/calendar/advancedEdit/cardsBox/cardsBox.html',\n      controller: CardsBoxController,\n      controllerAs: 'cardsBox',\n      bindToController: true,\n      replace: true,\n      scope: {\n        cards: '=',\n        teamName: '=',\n        teamId: '=',\n        matchId: '=',\n        cardsKey: '@',\n        autocomplete: '='\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function CardsBoxController(utils, $q, matches, $scope, teams) {\n      var vm = this;\n\n      vm.cardTypes = utils.cardTypes();\n      vm.disqualificationDays = utils.scores();\n\n      vm.setLoading = function (res) {\n        vm.loading = true;\n        return $q.resolve(res);\n      }\n\n      vm.unsetLoading = function (res) {\n        vm.loading = false;\n        return $q.resolve(res);\n      }\n\n      vm.createCard = function () {\n        vm.setLoading(vm.form)\n          .then(matches.form2Card)\n          .then(function (cardData) {\n            return matches.createCard(vm.matchId, cardData, vm.cardsKey);\n          })\n          .then(vm.resetForm)\n          .finally(vm.unsetLoading);\n      }\n\n      vm.destroyCard = function (card) {\n        vm.setLoading()\n          .then(function () {\n            return matches.destroyMatchCard(vm.matchId, card.cardId, vm.cardsKey)\n          })\n          .finally(vm.unsetLoading);\n      }\n\n      vm.resetFormModel = function () {\n        vm.form = { teamId: vm.teamId, goals: 1, playId: 0 }\n      }\n\n      vm.resetFormFields = function () {\n        $scope['createCardForm' + vm.teamId].$setPristine();\n        $scope['createCardForm' + vm.teamId].$setUntouched();\n      }\n\n      vm.resetForm = function (res) {\n        vm.resetFormModel();\n        vm.resetFormFields();\n        return res;\n      }\n\n      // GetterSetter function - see angular docs for ng-model-options\n      vm.typeaheadName = function (val) {\n        if(arguments.length){\n          if(angular.isString(val)){\n            vm.form.name = val;\n            vm.form.playId = 0;\n          }\n          else if(angular.isObject(val)){\n            vm.populateForm(val);\n          }\n        }\n        else{\n          return vm.form.name;\n        }\n      }\n\n      // GetterSetter function - see angular docs for ng-model-options\n      vm.typeaheadSurname = function (val) {\n        if(arguments.length){\n          if(angular.isString(val)){\n            vm.form.surname = val;\n            vm.form.playId = 0;\n          }\n          else if(angular.isObject(val)){\n            vm.populateForm(val);\n          }\n        }\n        else{\n          return vm.form.surname;\n        }\n      }\n\n      vm.populateForm = function (obj) {\n        if(angular.isString(obj.name)) vm.form.name = obj.name;\n        if(angular.isString(obj.surname)) vm.form.surname = obj.surname;\n        if(angular.isNumber(obj.teamId)) vm.form.teamId = obj.teamId;\n        if(angular.isNumber(obj.playId)) vm.form.playId = obj.playId;\n      }\n\n      teams.listPlayers(vm.teamId)\n        .then(function (res) {\n          vm.autocomplete = [];\n          if(angular.isArray(res)){\n            angular.forEach(res, function (el) {\n              vm.autocomplete.push({\n                playId: el.playId,\n                name: el.playFirstname,\n                surname: el.playSurname,\n                teamId: el.playTeamId\n              });\n            });\n          }\n        });\n\n      vm.resetFormModel();\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('scorersBox', scorersBox);\n\n  /** @ngInject */\n  function scorersBox() {\n    var directive = {\n      restrict: 'EA',\n      templateUrl: 'app/pages/calendar/advancedEdit/scorersBox/scorersBox.html',\n      controller: ScorersBoxController,\n      controllerAs: 'scorersBox',\n      bindToController: true,\n      replace: true,\n      scope: {\n        scorers: '=',\n        teamName: '=',\n        teamId: '=',\n        matchId: '=',\n        autocomplete: '=',\n        scorersKey: '@'\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function ScorersBoxController(utils, $q, matches, teams, $scope) {\n      var vm = this;\n      vm.scores = utils.scores();\n      vm.scores.splice(0,1);\n\n      vm.setLoading = function (res) {\n        vm.loading = true;\n        return $q.resolve(res);\n      }\n\n      vm.unsetLoading = function (res) {\n        vm.loading = false;\n        return $q.resolve(res);\n      }\n\n      vm.createScorer = function () {\n        vm.setLoading(vm.form)\n          .then(matches.form2Scorer)\n          .then(function (scorerData) {\n            return matches.createScorer(vm.matchId, scorerData, vm.scorersKey);\n          })\n          .then(vm.resetForm)\n          .finally(vm.unsetLoading);\n      }\n\n      vm.destroyScorer = function (scorer) {\n        vm.setLoading()\n          .then(function () {\n            return matches.destroyScorer(vm.matchId, scorer.playId, vm.scorersKey)\n          })\n          .finally(vm.unsetLoading);\n      }\n\n      vm.resetFormModel = function () {\n        vm.form = { teamId: vm.teamId, goals: 1, playId: 0 }\n      }\n\n      vm.resetFormFields = function () {\n        $scope['createScorerForm' + vm.teamId].$setPristine();\n        $scope['createScorerForm' + vm.teamId].$setUntouched();\n      }\n\n      vm.resetForm = function (res) {\n        vm.resetFormModel();\n        vm.resetFormFields();\n        return res;\n      }\n\n      // GetterSetter function - see angular docs for ng-model-options\n      vm.typeaheadName = function (val) {\n        if(arguments.length){\n          if(angular.isString(val)){\n            vm.form.name = val;\n            vm.form.playId = 0;\n          }\n          else if(angular.isObject(val)){\n            vm.populateForm(val);\n          }\n        }\n        else{\n          return vm.form.name;\n        }\n      }\n\n      // GetterSetter function - see angular docs for ng-model-options\n      vm.typeaheadSurname = function (val) {\n        if(arguments.length){\n          if(angular.isString(val)){\n            vm.form.surname = val;\n            vm.form.playId = 0;\n          }\n          else if(angular.isObject(val)){\n            vm.populateForm(val);\n          }\n        }\n        else{\n          return vm.form.surname;\n        }\n      }\n\n      vm.populateForm = function (obj) {\n        if(angular.isString(obj.name)) vm.form.name = obj.name;\n        if(angular.isString(obj.surname)) vm.form.surname = obj.surname;\n        if(angular.isNumber(obj.teamId)) vm.form.teamId = obj.teamId;\n        if(angular.isNumber(obj.playId)) vm.form.playId = obj.playId;\n      }\n\n      vm.resetFormModel();\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('wizardStepBox', wizardStepBox);\n\n  /** @ngInject */\n  function wizardStepBox() {\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/components/wizard/wizardStepBox/wizardStepBox.html',\n      controller: WizardStepBoxController,\n      controllerAs: 'wizardStepBox',\n      bindToController: true,\n      scope: {\n        wizard: '=',\n        step: '=',\n        title: '@'\n      },\n      link: WizardStepBoxLink,\n      transclude: true\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function WizardStepBoxController() {\n    }\n\n    function WizardStepBoxLink(scope, el, attrs, vm) {\n      if(vm.step === vm.wizard.currentStep){\n        vm.active = true;\n      }\n      else{\n        el.find('.wizard-step-box').first().addClass('collapsed-box');\n        el.find('.box-body').first().hide();\n      }\n\n      scope.$watch('wizardStepBox.wizard.currentStep', function (newVal, oldVal) {\n        if(newVal === oldVal) return;\n        // Activate the box\n        if(newVal === vm.step && !vm.active){\n          vm.active = true;\n          angular.element.AdminLTE.boxWidget.collapse(el.find('[data-widget]'));\n        }\n        // Deactivate the box\n        else if(newVal !== vm.step && vm.active){\n          vm.active = false;\n          angular.element.AdminLTE.boxWidget.collapse(el.find('[data-widget]'));\n        }\n      })\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('wizardProgress', wizardProgress);\n\n  /** @ngInject */\n  function wizardProgress() {\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/components/wizard/wizardProgress/wizardProgress.html',\n      controller: WizardProgressController,\n      controllerAs: 'wizardProgress',\n      bindToController: true,\n      scope: {\n        wizard: '='\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function WizardProgressController() {\n      var vm = this;\n\n      vm.range = function (n) {\n        return new Array(n);\n      }\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('teamShow', teamShow);\n\n  /** @ngInject */\n  function teamShow() {\n    var directive = {\n      restrict: 'EA',\n      templateUrl: 'app/pages/teams/show/show.html',\n      controller: TeamShowController,\n      controllerAs: 'teamShow',\n      bindToController: true,\n      replace: true,\n      link: TeamShowLink,\n      scope: {\n        team: '=teamShow'\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function TeamShowController($uibModal, teams, models) {\n      var vm = this;\n\n      vm.destroy = function() {\n\n        $uibModal.open({\n            templateUrl: 'app/pages/teams/destroy/destroy.html',\n            controller: 'TeamDestroyController',\n            controllerAs: 'teamDestroy',\n            windowClass: 'modal-danger'\n          }).result\n          .then(function (res) {\n            if(res === true){\n              teams.destroy(vm.team);\n            }\n          })\n      }\n\n      vm.models = models;\n    }\n\n    /** @ngInject */\n    function TeamShowLink(scope, el, attrs, vm){\n      el.hover(\n        function () {\n          scope.$apply(function () {\n            vm.showControls = true;\n          })\n        },\n        function () {\n          scope.$apply(function () {\n            vm.showControls = false;\n          })\n        }\n      );\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('teamEdit', teamEdit);\n\n  /** @ngInject */\n  function teamEdit() {\n    var directive = {\n      restrict: 'EA',\n      templateUrl: 'app/pages/teams/edit/edit.html',\n      controller: TeamEditController,\n      controllerAs: 'teamEdit',\n      link: TeamEditLink,\n      bindToController: true,\n      replace: true,\n      scope: {\n        team: '=teamEdit'\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function TeamEditController(models, $q, teams) {\n      var vm = this;\n\n      vm.models = models;\n\n      vm.setLoading = function (res) {\n        vm.loading = true;\n        return $q.resolve(res);\n      }\n\n      vm.unsetLoading = function (res) {\n        vm.loading = false;\n        return $q.resolve(res);\n      }\n\n      vm.submit = function () {\n        return vm.setLoading(vm.form)\n          .then(teams.form2Team)\n          .then(function (teamData) {\n            return teams.update(vm.team.teamId, teamData);\n          })\n          .finally(vm.unsetLoading);\n      }\n    }\n\n    function TeamEditLink(scope, el, attrs, vm) {\n      vm.cancel = function () {\n        el.find('.accordion-body').collapse('hide');\n      }\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('TeamDestroyController', TeamDestroyController);\n\n  /** @ngInject */\n  function TeamDestroyController($uibModalInstance) {\n    var vm = this;\n\n    vm.ok = function () {\n      $uibModalInstance.close(true);\n    }\n\n    vm.cancel = function () {\n      $uibModalInstance.dismiss();\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('TeamCreateController', TeamCreateController);\n\n  /** @ngInject */\n  function TeamCreateController($uibModalInstance, models, utils) {\n    var vm = this;\n\n    vm.roundNames = utils.alphabetChars();\n    vm.models = models;\n\n    vm.ok = function () {\n      vm.loading = true;\n      $uibModalInstance.close(vm.form);\n    }\n\n    vm.cancel = function () {\n      $uibModalInstance.dismiss();\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('scorerShow', scorerShow);\n\n  /** @ngInject */\n  function scorerShow() {\n    var directive = {\n      restrict: 'EA',\n      templateUrl: 'app/pages/scorers/show/show.html',\n      controller: ScorerShowController,\n      controllerAs: 'scorerShow',\n      bindToController: true,\n      replace: true,\n      link: ScorerShowLink,\n      scope: {\n        scorer: '=scorerShow'\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function ScorerShowController($uibModal, models) {\n      var vm = this;\n      vm.models = models;\n    }\n\n    /** @ngInject */\n    function ScorerShowLink(scope, el, attrs, vm){\n      el.hover(\n        function () {\n          scope.$apply(function () {\n            vm.showControls = true;\n          })\n        },\n        function () {\n          scope.$apply(function () {\n            vm.showControls = false;\n          })\n        }\n      );\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('scorerEdit', scorerEdit);\n\n  /** @ngInject */\n  function scorerEdit() {\n    var directive = {\n      restrict: 'EA',\n      templateUrl: 'app/pages/scorers/edit/edit.html',\n      controller: ScorerEditController,\n      controllerAs: 'scorerEdit',\n      link: ScorerEditLink,\n      bindToController: true,\n      replace: true,\n      scope: {\n        scorer: '=scorerEdit'\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function ScorerEditController(models, $q, $uibModal, events) {\n      var vm = this;\n\n      vm.models = models;\n\n      vm.setLoading = function (res) {\n        vm.loading = true;\n        return $q.resolve(res);\n      }\n\n      vm.unsetLoading = function (res) {\n        vm.loading = false;\n        return $q.resolve(res);\n      }\n\n      vm.createNewScorerMatch = function () {\n        $uibModal.open({\n            templateUrl: 'app/pages/scorerMatch/create/create.html',\n            controller: 'ScorerMatchCreateController',\n            controllerAs: 'scorerMatchCreate',\n            windowClass: 'modal-success'\n          }).result\n          .then(function (res) {\n            if(angular.isDefined(res)){\n              vm.setLoading(res)\n                .then(events.form2ScorerMatch)\n                .then(events.createScorerMatch)\n                .finally(vm.unsetLoading);\n            }\n          })\n      }\n    }\n\n    function ScorerEditLink(scope, el, attrs, vm) {\n      vm.cancel = function () {\n        el.find('.accordion-body').collapse('hide');\n      }\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('scorerMatchShow', scorerMatchShow);\n\n  /** @ngInject */\n  function scorerMatchShow() {\n    var directive = {\n      restrict: 'EA',\n      templateUrl: 'app/pages/scorerMatch/show/show.html',\n      controller: ScorerMatchShowController,\n      controllerAs: 'scorerMatchShow',\n      bindToController: true,\n      replace: true,\n      link: ScorerMatchShowLink,\n      scope: {\n        scorerMatch: '=scorerMatchShow',\n        scorerMatchPlayerId: '=scorerMatchPlayerId'\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function ScorerMatchShowController($uibModal, models, utils, events) {\n      var vm = this;\n      vm.scores = utils.scores();\n\n      vm.submitGoal = function (){\n        return events\n          .updateScorerMatch(models.currentEvent.evenId, vm.scorerMatch.matcId, {\n            scor_play_id: vm.scorerMatchPlayerId,\n            scor_goal: vm.form.goal\n          })\n          .then(function () {\n            return vm.models.currentEvent.evenId;\n          })\n          .then(events.showScorers)\n          .finally(vm.unsetLoading);\n      }\n\n      vm.destroy = function() {\n\n        $uibModal.open({\n            templateUrl: 'app/pages/scorerMatch/destroy/destroy.html',\n            controller: 'ScorerMatchDestroyController',\n            controllerAs: 'scorerMatchDestroy',\n            windowClass: 'modal-danger'\n          }).result\n          .then(function (res) {\n            if(res === true){\n              events.destroyScorerMatch(models.currentEvent.evenId, vm.scorerMatchPlayerId, vm.scorerMatch);\n            }\n          })\n      }\n\n      vm.models = models;\n    }\n\n    /** @ngInject */\n    function ScorerMatchShowLink(scope, el, attrs, vm){\n      el.hover(\n        function () {\n          scope.$apply(function () {\n            vm.showControls = true;\n          })\n        },\n        function () {\n          scope.$apply(function () {\n            vm.showControls = false;\n          })\n        }\n      );\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('ScorerMatchDestroyController', ScorerMatchDestroyController);\n\n  /** @ngInject */\n  function ScorerMatchDestroyController($uibModalInstance) {\n    var vm = this;\n\n    vm.ok = function () {\n      $uibModalInstance.close(true);\n    }\n\n    vm.cancel = function () {\n      $uibModalInstance.dismiss();\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('managerMatchShow', managerMatchShow);\n\n  /** @ngInject */\n  function managerMatchShow() {\n    var directive = {\n      restrict: 'EA',\n      templateUrl: 'app/pages/managerMatches/show/show.html',\n      controller: ManagerMatchShowController,\n      controllerAs: 'managerMatchShow',\n      bindToController: true,\n      replace: true,\n      link: ManagerMatchShowLink,\n      scope: {\n        match: '=managerMatchShow'\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function ManagerMatchShowController($uibModal, matches, models) {\n      var vm = this;\n      vm.models = models;\n    }\n\n    /** @ngInject */\n    function ManagerMatchShowLink(scope, el, attrs, vm){\n      el.hover(\n        function () {\n          scope.$apply(function () {\n            vm.showControls = true;\n          })\n        },\n        function () {\n          scope.$apply(function () {\n            vm.showControls = false;\n          })\n        }\n      );\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('managerMatchEdit', managerMatchEdit);\n\n  /** @ngInject */\n  function managerMatchEdit() {\n    var directive = {\n      restrict: 'EA',\n      templateUrl: 'app/pages/managerMatches/edit/edit.html',\n      controller: ManagerMatchEditController,\n      controllerAs: 'managerMatchEdit',\n      link: ManagerMatchEditLink,\n      bindToController: true,\n      replace: true,\n      scope: {\n        match: '=managerMatchEdit'\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function ManagerMatchEditController(models, $q, matches, utils) {\n      var vm = this;\n\n      vm.models = models;\n\n      vm.setLoading = function (res) {\n        vm.loading = true;\n        return $q.resolve(res);\n      }\n\n      vm.unsetLoading = function (res) {\n        vm.loading = false;\n        return $q.resolve(res);\n      }\n\n      vm.submit = function () {\n        return vm.setLoading(vm.form)\n          .then(matches.form2Match)\n          .then(function (matchData) {\n            return matches.update(vm.match.matcDayId, matchData);\n          })\n          .finally(vm.unsetLoading);\n      }\n\n      vm.scores = utils.scores();\n\n      vm.form = { matchId: vm.match.matcId };\n    }\n\n    function ManagerMatchEditLink(scope, el, attrs, vm) {\n      vm.cancel = function () {\n        el.find('.accordion-body').collapse('hide');\n      }\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('playerShow', playerShow);\n\n  /** @ngInject */\n  function playerShow() {\n    var directive = {\n      restrict: 'EA',\n      templateUrl: 'app/pages/players/show/show.html',\n      controller: PlayerShowController,\n      controllerAs: 'playerShow',\n      bindToController: true,\n      replace: true,\n      link: PlayerShowLink,\n      scope: {\n        player: '=playerShow'\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function PlayerShowController($uibModal, teams, models) {\n      var vm = this;\n\n      vm.destroy = function() {\n\n        $uibModal.open({\n            templateUrl: 'app/pages/players/destroy/destroy.html',\n            controller: 'PlayerDestroyController',\n            controllerAs: 'playerDestroy',\n            windowClass: 'modal-danger'\n          }).result\n          .then(function (res) {\n            if(res === true){\n              teams.destroyPlayer(vm.player);\n            }\n          });\n      }\n\n      vm.models = models;\n    }\n\n    /** @ngInject */\n    function PlayerShowLink(scope, el, attrs, vm){\n      el.hover(\n        function () {\n          scope.$apply(function () {\n            vm.showControls = true;\n          })\n        },\n        function () {\n          scope.$apply(function () {\n            vm.showControls = false;\n          })\n        }\n      );\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('playerEdit', playerEdit);\n\n  /** @ngInject */\n  function playerEdit() {\n    var directive = {\n      restrict: 'EA',\n      templateUrl: 'app/pages/players/edit/edit.html',\n      controller: PlayerEditController,\n      controllerAs: 'playerEdit',\n      link: PlayerEditLink,\n      bindToController: true,\n      replace: true,\n      scope: {\n        player: '=playerEdit'\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function PlayerEditController(models, $q, teams, utils) {\n      var vm = this;\n\n      vm.models = models;\n\n      vm.setLoading = function (res) {\n        vm.loading = true;\n        return $q.resolve(res);\n      }\n\n      vm.unsetLoading = function (res) {\n        vm.loading = false;\n        return $q.resolve(res);\n      }\n\n      vm.submit = function () {\n        return vm.setLoading(vm.form)\n          .then(teams.form2Player)\n          .then(function (playerData) {\n            return teams.updatePlayer(vm.player.playId, playerData);\n          })\n          .finally(vm.unsetLoading);\n      }\n\n      vm.scores = utils.scores();\n\n      vm.form = { };\n    }\n\n    function PlayerEditLink(scope, el, attrs, vm) {\n      vm.cancel = function () {\n        el.find('.accordion-body').collapse('hide');\n      }\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('MatchDestroyController', MatchDestroyController);\n\n  /** @ngInject */\n  function MatchDestroyController($uibModalInstance) {\n    var vm = this;\n\n    vm.ok = function () {\n      $uibModalInstance.close(true);\n    }\n\n    vm.cancel = function () {\n      $uibModalInstance.dismiss();\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('PlayerCreateController', PlayerCreateController);\n\n  /** @ngInject */\n  function PlayerCreateController($uibModalInstance, models, utils) {\n    var vm = this;\n\n    vm.scores = utils.scores();\n    vm.models = models;\n\n    vm.ok = function () {\n      vm.loading = true;\n      $uibModalInstance.close(vm.form);\n    }\n\n    vm.cancel = function () {\n      $uibModalInstance.dismiss();\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('pressShow', pressShow);\n\n  /** @ngInject */\n  function pressShow() {\n    var directive = {\n      restrict: 'EA',\n      templateUrl: 'app/pages/press/show/show.html',\n      controller: PressShowController,\n      controllerAs: 'pressShow',\n      bindToController: true,\n      replace: true,\n      link: PressShowLink,\n      scope: {\n        press: '=pressShow'\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function PressShowController($uibModal, press, models) {\n      var vm = this;\n\n      vm.destroy = function() {\n\n        $uibModal.open({\n            templateUrl: 'app/pages/press/destroy/destroy.html',\n            controller: 'PressDestroyController',\n            controllerAs: 'pressDestroy',\n            windowClass: 'modal-danger'\n          }).result\n          .then(function (res) {\n            if(res === true){\n              press.destroy(vm.press);\n            }\n          })\n      }\n\n      vm.models = models;\n    }\n\n    /** @ngInject */\n    function PressShowLink(scope, el, attrs, vm){\n      el.hover(\n        function () {\n          scope.$apply(function () {\n            vm.showControls = true;\n          })\n        },\n        function () {\n          scope.$apply(function () {\n            vm.showControls = false;\n          })\n        }\n      );\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('PressDestroyController', PressDestroyController);\n\n  /** @ngInject */\n  function PressDestroyController($uibModalInstance) {\n    var vm = this;\n\n    vm.ok = function () {\n      $uibModalInstance.close(true);\n    }\n\n    vm.cancel = function () {\n      $uibModalInstance.dismiss();\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('PressCreateController', PressCreateController);\n\n  /** @ngInject */\n  function PressCreateController($uibModalInstance, models, utils) {\n    var vm = this;\n    vm.models = models;\n\n    vm.events = angular.copy(models.events);\n    vm.multiSelectTranslation = utils.istevenMultiSelectTranslation();\n\n    vm.ok = function () {\n      vm.loading = true;\n      $uibModalInstance.close(vm.form);\n    }\n\n    vm.cancel = function () {\n      $uibModalInstance.dismiss();\n    }\n\n    vm.selectFields = [\n      {\n        key: 'ranking',\n        name: 'Mostra classifica',\n        options: [\n          {\n            id: 0,\n            name: 'No'\n          },\n          {\n            id: 1,\n            name: 'Sì'\n          }\n        ]\n      },\n      {\n        key: 'matches',\n        name: 'Mostra giornate',\n        options: [\n          {\n            id: 1,\n            name: 'Corrente + 2 successive'\n          },\n          {\n            id: 2,\n            name: 'Precedente + Corrente + Successiva'\n          },\n          {\n            id: 3,\n            name: 'Tutto il calendario'\n          }\n        ]\n      },\n      {\n        key: 'scorers',\n        name: 'Mostra marcatori',\n        options: [\n          {\n            id: 1,\n            name: 'Solo i primi 10'\n          },\n          {\n            id: 2,\n            name: 'Solo i primi 3'\n          },\n          {\n            id: 3,\n            name: 'Tutti i marcatori'\n          }\n        ]\n      },\n      {\n        key: 'yellowcards',\n        name: 'Mostra ammoniti',\n        options: [\n          {\n            id: 0,\n            name: 'No'\n          },\n          {\n            id: 1,\n            name: 'Sì'\n          }\n        ]\n      },\n      {\n        key: 'diffide',\n        name: 'Mostra diffide',\n        options: [\n          {\n            id: 0,\n            name: 'No'\n          },\n          {\n            id: 1,\n            name: 'Sì'\n          }\n        ]\n      },\n      {\n        key: 'squalifications',\n        name: 'Mostra squalifiche',\n        options: [\n          {\n            id: 0,\n            name: 'No'\n          },\n          {\n            id: 1,\n            name: 'Sì'\n          }\n        ]\n      },\n      {\n        key: 'amends',\n        name: 'Mostra ammende',\n        options: [\n          {\n            id: 0,\n            name: 'No'\n          },\n          {\n            id: 1,\n            name: 'Sì'\n          }\n        ]\n      }\n    ];\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('invitationShow', invitationShow);\n\n  /** @ngInject */\n  function invitationShow() {\n    var directive = {\n      restrict: 'EA',\n      templateUrl: 'app/pages/invitations/show/show.html',\n      controller: InvitationShowController,\n      controllerAs: 'invitationShow',\n      bindToController: true,\n      replace: true,\n      link: InvitationShowLink,\n      scope: {\n        invitation: '=invitationShow'\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function InvitationShowController($uibModal, invitations, models) {\n      var vm = this;\n\n      vm.destroy = function() {\n\n        $uibModal.open({\n            templateUrl: 'app/pages/invitations/destroy/destroy.html',\n            controller: 'InvitationDestroyController',\n            controllerAs: 'invitationDestroy',\n            windowClass: 'modal-danger'\n          }).result\n          .then(function (res) {\n            if(res === true){\n              invitations\n                .destroy(vm.invitation)\n                .then(invitations.listSent);\n            }\n          })\n      }\n\n      vm.models = models;\n    }\n\n    /** @ngInject */\n    function InvitationShowLink(scope, el, attrs, vm){\n      el.hover(\n        function () {\n          scope.$apply(function () {\n            vm.showControls = true;\n          })\n        },\n        function () {\n          scope.$apply(function () {\n            vm.showControls = false;\n          })\n        }\n      );\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('InvitationDestroyController', InvitationDestroyController);\n\n  /** @ngInject */\n  function InvitationDestroyController($uibModalInstance) {\n    var vm = this;\n\n    vm.ok = function () {\n      $uibModalInstance.close(true);\n    }\n\n    vm.cancel = function () {\n      $uibModalInstance.dismiss();\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('InvitationCreateController', InvitationCreateController);\n\n  /** @ngInject */\n  function InvitationCreateController($uibModalInstance, models, utils) {\n    var vm = this;\n    vm.events = angular.copy(models.events);\n    vm.multiSelectTranslation = utils.istevenMultiSelectTranslation();\n\n    vm.ok = function () {\n      vm.loading = true;\n      $uibModalInstance.close(vm.form);\n    }\n\n    vm.cancel = function () {\n      $uibModalInstance.dismiss();\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('eventShow', eventShow);\n\n  /** @ngInject */\n  function eventShow(events) {\n    var directive = {\n      restrict: 'EA',\n      templateUrl: 'app/pages/events/show/show.html',\n      controller: EventShowController,\n      controllerAs: 'eventShow',\n      bindToController: true,\n      replace: true,\n      link: EventShowLink,\n      scope: {\n        event: '=eventShow',\n        hideControls: '='\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function EventShowController(models, $uibModal) {\n      var vm = this;\n\n      vm.destroy = function() {\n\n        $uibModal.open({\n            templateUrl: 'app/pages/events/destroy/destroy.html',\n            controller: 'EventDestroyController',\n            controllerAs: 'eventDestroy',\n            windowClass: 'modal-danger'\n          }).result\n          .then(function (res) {\n            if(res === true){\n              events.destroy(vm.event);\n            }\n          })\n      }\n\n      vm.models = models;\n    }\n\n    /** @ngInject */\n    function EventShowLink(scope, el, attrs, vm){\n      el.hover(\n        function () {\n          scope.$apply(function () {\n            vm.showControls = true;\n          })\n        },\n        function () {\n          scope.$apply(function () {\n            vm.showControls = false;\n          })\n        }\n      );\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('EventRecreateCalendarController', EventRecreateCalendarController);\n\n  /** @ngInject */\n  function EventRecreateCalendarController($uibModalInstance) {\n    var vm = this;\n\n    vm.ok = function () {\n      $uibModalInstance.close(true);\n    }\n\n    vm.cancel = function () {\n      $uibModalInstance.dismiss();\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('eventEdit', eventEdit);\n\n  /** @ngInject */\n  function eventEdit(events) {\n    var directive = {\n      restrict: 'EA',\n      templateUrl: 'app/pages/events/edit/edit.html',\n      controller: EventEditController,\n      controllerAs: 'eventEdit',\n      link: EventEditLink,\n      bindToController: true,\n      replace: true,\n      scope: {\n        event: '=eventEdit'\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function EventEditController(models, matches, $uibModal, $q, utils) {\n      var vm = this;\n\n      vm.models = models;\n      vm.pointsOptions = utils.scores();\n\n      vm.setLoading = function (res) {\n        vm.loading = true;\n        return $q.resolve(res);\n      }\n\n      vm.unsetLoading = function (res) {\n        vm.loading = false;\n        return $q.resolve(res);\n      }\n\n      vm.submit = function () {\n        return vm.setLoading(vm.form)\n          .then(events.form2Event)\n          .then(function (eventData) {\n            return events.update(vm.event.evenId, eventData);\n          })\n          .finally(vm.unsetLoading);\n      }\n\n      vm.publish = function () {\n        return vm.setLoading()\n          .then(function () {\n            return events.update(vm.event.evenId, {even_stato_evento: 1});\n          })\n          .finally(vm.unsetLoading);\n      }\n\n      vm.unpublish = function () {\n        return vm.setLoading()\n          .then(function () {\n            return events.update(vm.event.evenId, {even_stato_evento: 0});\n          })\n          .finally(vm.unsetLoading);\n      }\n\n      vm.recreateCalendar = function () {\n        $uibModal.open({\n          templateUrl: 'app/pages/events/edit/recreateCalendar.html',\n          controller: 'EventRecreateCalendarController',\n          controllerAs: 'eventRecreateCalendar',\n          windowClass: 'modal-warning'\n        }).result\n        .then(function (res) {\n          if(res === true){\n            return vm.setLoading(vm.event.evenId)\n              .then(matches.createCalendar)\n              .then(function () {\n                return events.show(vm.event.evenId);\n              })\n              .finally(vm.unsetLoading);\n          }\n        })\n\n      }\n    }\n\n    function EventEditLink(scope, el, attrs, vm) {\n\n      el.find('.accordion-body').on('show.bs.collapse', function () {\n        events.show(vm.event.evenId);\n        events.listRegions();\n      });\n\n      vm.cancel = function () {\n        el.find('.accordion-body').collapse('hide');\n      }\n\n      scope.$watch('eventEdit.event.evenCurrentDay', function (newVal, oldVal) {\n        if(angular.isDefined(newVal) && newVal !== oldVal){\n          vm.form.currentDay = vm.event.evenCurrentDay;\n        }\n      });\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('EventDestroyController', EventDestroyController);\n\n  /** @ngInject */\n  function EventDestroyController($uibModalInstance) {\n    var vm = this;\n\n    vm.ok = function () {\n      $uibModalInstance.close(true);\n    }\n\n    vm.cancel = function () {\n      $uibModalInstance.dismiss();\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('matchShow', matchShow);\n\n  /** @ngInject */\n  function matchShow() {\n    var directive = {\n      restrict: 'EA',\n      templateUrl: 'app/pages/calendar/show/show.html',\n      controller: MatchShowController,\n      controllerAs: 'matchShow',\n      bindToController: true,\n      replace: true,\n      link: MatchShowLink,\n      scope: {\n        match: '=matchShow'\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function MatchShowController($uibModal, matches, models) {\n      var vm = this;\n\n      vm.destroy = function() {\n\n        $uibModal.open({\n            templateUrl: 'app/pages/calendar/destroy/destroy.html',\n            controller: 'MatchDestroyController',\n            controllerAs: 'matchDestroy',\n            windowClass: 'modal-danger'\n          }).result\n          .then(function (res) {\n            if(res === true){\n              matches.destroy(vm.match);\n            }\n          });\n      }\n\n      vm.advancedEdit = function () {\n        $uibModal.open({\n              templateUrl: 'app/pages/calendar/advancedEdit/advancedEdit.html',\n              controller: 'MatchAdvancedEditController',\n              controllerAs: 'matchAdvEdit',\n              windowClass: 'modal-default',\n              size: 'lg',\n              resolve: {match: vm.match}\n          }).result\n          .then();\n      }\n\n      vm.models = models;\n    }\n\n    /** @ngInject */\n    function MatchShowLink(scope, el, attrs, vm){\n      el.hover(\n        function () {\n          scope.$apply(function () {\n            vm.showControls = true;\n          })\n        },\n        function () {\n          scope.$apply(function () {\n            vm.showControls = false;\n          })\n        }\n      );\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('matchEdit', matchEdit);\n\n  /** @ngInject */\n  function matchEdit() {\n    var directive = {\n      restrict: 'EA',\n      templateUrl: 'app/pages/calendar/edit/edit.html',\n      controller: MatchEditController,\n      controllerAs: 'matchEdit',\n      link: MatchEditLink,\n      bindToController: true,\n      replace: true,\n      scope: {\n        match: '=matchEdit'\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function MatchEditController(models, $q, matches, utils, $scope) {\n      var vm = this;\n\n      vm.models = models;\n\n      vm.setLoading = function (res) {\n        vm.loading = true;\n        return $q.resolve(res);\n      }\n\n      vm.unsetLoading = function (res) {\n        vm.loading = false;\n        return $q.resolve(res);\n      }\n\n      vm.submit = function () {\n        return vm.setLoading(vm.form)\n          .then(matches.form2Match)\n          .then(function (matchData) {\n            return matches.update(vm.match.matcDayId, matchData);\n          })\n          .finally(vm.unsetLoading);\n      }\n\n      vm.scores = utils.scores();\n\n      vm.form = { matchId: vm.match.matcId };\n\n      $scope.$watch('matchEdit.match.matcScoreTeamA', function (newVal, oldVal) {\n        if(newVal !== oldVal) {\n          vm.form.scoreA = newVal;\n        }\n      });\n      $scope.$watch('matchEdit.match.matcScoreTeamB', function (newVal, oldVal) {\n        if(newVal !== oldVal) {\n          vm.form.scoreB = newVal;\n        }\n      });\n    }\n\n    function MatchEditLink(scope, el, attrs, vm) {\n      vm.cancel = function () {\n        el.find('.accordion-body').collapse('hide');\n      }\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('MatchDestroyController', MatchDestroyController);\n\n  /** @ngInject */\n  function MatchDestroyController($uibModalInstance) {\n    var vm = this;\n\n    vm.ok = function () {\n      $uibModalInstance.close(true);\n    }\n\n    vm.cancel = function () {\n      $uibModalInstance.dismiss();\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('DayCreateController', DayCreateController);\n\n  /** @ngInject */\n  function DayCreateController($uibModalInstance, models) {\n    var vm = this;\n\n    vm.models = models;\n\n    vm.ok = function () {\n      vm.loading = true;\n      $uibModalInstance.close(vm.form);\n    }\n\n    vm.cancel = function () {\n      $uibModalInstance.dismiss();\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('MatchCreateController', MatchCreateController);\n\n  /** @ngInject */\n  function MatchCreateController($uibModalInstance, models, utils) {\n    var vm = this;\n\n    vm.scores = utils.scores();\n    vm.models = models;\n\n    vm.ok = function () {\n      vm.loading = true;\n      $uibModalInstance.close(vm.form);\n    }\n\n    vm.cancel = function () {\n      $uibModalInstance.dismiss();\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('MatchAdvancedEditController', MatchAdvancedEditController);\n\n  /** @ngInject */\n  function MatchAdvancedEditController($q, $uibModalInstance, match, utils, matches, teams) {\n    var vm = this;\n    vm.match = match;\n    vm.scores = utils.scores();\n\n    vm.ok = function () {\n      $uibModalInstance.close(true);\n    }\n\n    vm.cancel = function () {\n      $uibModalInstance.dismiss();\n    }\n\n    vm.submit = function () {\n      return vm.setLoading(vm.form)\n        .then(matches.form2Match)\n        .then(function (matchData) {\n          return matches.update(vm.match.matcDayId, matchData);\n        })\n    }\n\n    vm.setLoading = function (res) {\n      vm.loading = true;\n      return $q.resolve(res);\n    }\n\n    vm.unsetLoading = function (res) {\n      vm.loading = false;\n      return $q.resolve(res);\n    }\n\n    vm.form = {\n      matchId: vm.match.matcId,\n      teamA: { teamId: vm.match.matcTeamIdA },\n      teamB: { teamId: vm.match.matcTeamIdB },\n      played: { value: vm.match.matcFlgPlay }\n    }\n\n    vm.createAutocompleteObj = function (players) {\n      var autocomplete = [];\n      if(angular.isArray(players)){\n        angular.forEach(players, function (player) {\n          autocomplete.push({\n            playId: player.playId,\n            name: player.playFirstname,\n            surname: player.playSurname,\n            teamId: player.playTeamId\n          });\n        });\n      }\n      return autocomplete;\n    }\n\n    vm.autocompleteA = [];\n    vm.autocompleteB = [];\n\n    matches.show(vm.match.matcId)\n      .then(function () { // Retrieve players for autocomplete\n        teams\n          .listPlayers(vm.match.matcTeamIdA)\n          .then(vm.createAutocompleteObj)\n          .then(function (res) {\n            vm.autocompleteA = res;\n          })\n        teams\n          .listPlayers(vm.match.matcTeamIdB)\n          .then(vm.createAutocompleteObj)\n          .then(function (res) {\n            vm.autocompleteB = res;\n          })\n      });\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('cardShow', cardShow);\n\n  /** @ngInject */\n  function cardShow() {\n    var directive = {\n      restrict: 'EA',\n      templateUrl: 'app/pages/disciplinary/show/show.html',\n      controller: CardShowController,\n      controllerAs: 'cardShow',\n      bindToController: true,\n      replace: true,\n      link: CardShowLink,\n      scope: {\n        card: '=cardShow',\n        config: '='\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function CardShowController($uibModal, matches, models) {\n      var vm = this;\n\n      vm.destroy = function() {\n\n        $uibModal.open({\n            templateUrl: 'app/pages/disciplinary/destroy/destroy.html',\n            controller: 'CardDestroyController',\n            controllerAs: 'cardDestroy',\n            windowClass: 'modal-danger'\n          }).result\n          .then(function (res) {\n            if(res === true){\n              matches.destroy(vm.card);\n            }\n          })\n      }\n\n      vm.models = models;\n    }\n\n    /** @ngInject */\n    function CardShowLink(scope, el, attrs, vm){\n      el.hover(\n        function () {\n          scope.$apply(function () {\n            vm.showControls = true;\n          })\n        },\n        function () {\n          scope.$apply(function () {\n            vm.showControls = false;\n          })\n        }\n      );\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('cardEdit', cardEdit);\n\n  /** @ngInject */\n  function cardEdit() {\n    var directive = {\n      restrict: 'EA',\n      templateUrl: 'app/pages/disciplinary/edit/edit.html',\n      controller: CardEditController,\n      controllerAs: 'cardEdit',\n      link: CardEditLink,\n      bindToController: true,\n      replace: true,\n      scope: {\n        card: '=cardEdit',\n        config: '='\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function CardEditController(models, $q) {\n      var vm = this;\n\n      vm.models = models;\n\n      vm.setLoading = function (res) {\n        vm.loading = true;\n        return $q.resolve(res);\n      }\n\n      vm.unsetLoading = function (res) {\n        vm.loading = false;\n        return $q.resolve(res);\n      }\n    }\n\n    function CardEditLink(scope, el, attrs, vm) {\n      vm.cancel = function () {\n        el.find('.accordion-body').collapse('hide');\n      }\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('cardMatchShow', cardMatchShow);\n\n  /** @ngInject */\n  function cardMatchShow() {\n    var directive = {\n      restrict: 'EA',\n      templateUrl: 'app/pages/cardMatch/show/show.html',\n      controller: ScorerMatchShowController,\n      controllerAs: 'cardMatchShow',\n      bindToController: true,\n      replace: true,\n      link: ScorerMatchShowLink,\n      scope: {\n        cardMatch: '=cardMatchShow',\n        config: '=',\n        cardMatchPlayerId: '=cardMatchPlayerId'\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function ScorerMatchShowController($uibModal, models, utils, matches) {\n      var vm = this;\n      vm.scores = utils.scores();\n\n      vm.submit = function (){\n        return matches\n          .form2CardMatch(vm.form)\n          .then(function (cardData) {\n            return matches.updateEventCard(\n              vm.cardMatch.matcId,\n              vm.cardMatchPlayerId,\n              vm.cardMatch.cardId,\n              vm.cardsKey,\n              vm.cardMatchKey,\n              cardData\n            );\n          })\n      }\n\n      vm.destroy = function() {\n\n        $uibModal.open({\n            templateUrl: 'app/pages/cardMatch/destroy/destroy.html',\n            controller: 'CardMatchDestroyController',\n            controllerAs: 'cardMatchDestroy',\n            windowClass: 'modal-danger'\n          }).result\n          .then(function (res) {\n            if(res === true){\n              matches.destroyEventCard(vm.cardMatch.matcId, vm.cardMatchPlayerId, vm.cardMatch.cardId, vm.config.cardsKey, vm.config.cardMatchKey);\n            }\n          })\n      }\n\n      vm.models = models;\n    }\n\n    /** @ngInject */\n    function ScorerMatchShowLink(scope, el, attrs, vm){\n      el.hover(\n        function () {\n          scope.$apply(function () {\n            vm.showControls = true;\n          })\n        },\n        function () {\n          scope.$apply(function () {\n            vm.showControls = false;\n          })\n        }\n      );\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('CardMatchDestroyController', CardMatchDestroyController);\n\n  /** @ngInject */\n  function CardMatchDestroyController($uibModalInstance) {\n    var vm = this;\n\n    vm.ok = function () {\n      $uibModalInstance.close(true);\n    }\n\n    vm.cancel = function () {\n      $uibModalInstance.dismiss();\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .filter('wizardTextProgress', wizardTextProgressFilter);\n\n  /** @ngInject */\n  function wizardTextProgressFilter() {\n    return function(wizard) {\n      return 'Step ' + wizard.currentStep + ' di ' + wizard.totalSteps;\n    };\n  }\n\n})();\n\n'use strict';\n\nangular.module('frispo')\n  /**\n   * A wizard\n   */\n  .factory('Wizard', function () {\n    var defaults = {\n      totalSteps: 1,\n      startFromStep: 1\n    }\n\n    return function Wizard (options) {\n      this.options = angular.merge(defaults, options);\n\n      this.totalSteps = this.options.totalSteps;\n      this.currentStep = this.options.startFromStep;\n\n      this.next = function () {\n        if(this.currentStep < this.totalSteps){\n          this.currentStep++;\n        }\n      }\n\n      this.prev = function () {\n        if(this.currentStep > 1){\n          this.currentStep--;\n        }\n      }\n    };\n  });\n\n'use strict';\n\nangular.module('frispo')\n  /**\n   * Utilities functions.\n   */\n  .factory('utils', function () {\n    var utils = {\n      str2Date: function (str) {\n        if(!str) return;\n\n        var res = [];\n        var range = str.split('->');\n        angular.forEach(range, function (date) {\n          var split = date.split('/');\n          if(split.length !== 3) return;\n          res.push(split[2].trim() + '-' + split[1].trim() + '-' + split[0].trim())\n        })\n        if(res.length === 1){\n          return res[0];\n        }\n        else{\n          return res;\n        }\n      },\n      date2Str: function (dateStart, dateEnd) {\n        if(!dateStart) return;\n\n        var split = dateStart.split('-');\n        if(split.length !== 3) return;\n        var res = split[2].trim() + '/' + split[1].trim() + '/' + split[0].trim();\n\n        if(dateEnd){\n          res +=  ' -> ' + utils.date2Str(dateEnd);\n        }\n        return res;\n      },\n      str2Time: function (str) {\n        return str;\n        // if(!str) return;\n        //\n        // var res = null;\n        // var splitted = str.trim().split(' ');\n        // if(splitted.length == 2){\n        //   var hm = splitted[0].trim().split(':');\n        //   var pmAdd = (splitted[1] == 'PM' ? 12 : 0);\n        //   if(hm.length == 2){\n        //     res = (+hm[0] + pmAdd) + ':' + hm[1];\n        //   }\n        // }\n        // return res;\n      },\n      alphabetChars: function () {\n        return ['A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z'];\n      },\n      scores: function () {\n        return [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20];\n      },\n      istevenMultiSelectTranslation: function () {\n        return {\n            selectAll       : \"Seleziona tutti\",\n            selectNone      : \"Deseleziona tutti\",\n            reset           : \"Reset\",\n            search          : \"Cerca...\",\n            nothingSelected : \"Nessuno selezionato\"\n        };\n      },\n      cardTypes: function () {\n        return [\n          {\n            id: 0,\n            name: 'Ammonizione'\n          },\n          {\n            id: 1,\n            name: 'Espulsione per somma ammonizioni'\n          },\n          {\n            id: 2,\n            name: 'Espulsione diretta'\n          }\n        ]\n      }\n    };\n\n    return utils;\n  });\n\n'use strict';\n\nangular.module('frispo')\n  /**\n   * UI state service.\n   * Keep application-wide shared variables\n   */\n  .factory('uiState', function () {\n    var uiState = {};\n\n    return uiState;\n  });\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('timepicker', timepicker);\n\n  /** @ngInject */\n  function timepicker() {\n    var directive = {\n      restrict: 'A',\n      link: timepickerLink\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function timepickerLink(scope, el) {\n      el.clockpicker({autoclose: true});\n    }\n  }\n\n})();\n\n'use strict';\n\nangular.module('frispo')\n  /**\n   * Response management pipeline.\n   * Utilities to process a response from the moment it arrives to the models update.\n   * To use in a promise chain as a pipeline\n   */\n  .factory('resPipe', function ($q, $filter, models, longTermMemory, $log, utils) {\n    var resPipe = {\n\n      /**\n       * Parse the initial response from the Frispo API\n       */\n      parseResponse: function(res) {\n        // Look for the response status_code\n        switch (res.status_code) {\n          case 200:\n            return res.data;\n          default:\n            return $q.reject({error: res.error});\n        }\n      },\n\n      /**\n       * Unwrap the response from a single element array\n       */\n      unwrapArray: function (res) {\n        if(angular.isArray(res) && res.length === 1) return res[0];\n        return res;\n      },\n\n      /**\n       * Camelize the response\n       */\n      camelize: function (res) {\n        var newRes;\n        if(angular.isArray(res)){\n          newRes = [];\n          angular.forEach(res, function (el) {\n            newRes.push(resPipe.camelize(el));\n          })\n          return newRes;\n        }\n        else if(angular.isObject(res)){\n          newRes = {};\n          angular.forEach(res, function(v,k){\n            newRes[$filter('camelize')(k)] = resPipe.camelize(v);\n          });\n          return newRes;\n        }\n        else {\n          return res;\n        }\n      },\n\n      /**\n       * Inject default fields to User objects\n       */\n      injectUserDefaults: function (res) {\n        res.displayName = res.displayName || res.email || res.name || 'Profilo';\n        return res;\n      },\n\n      /**\n       * Update the current user\n       */\n      updateCurrentUser: function (res) {\n        models.currentUser = res;\n        return res;\n      },\n\n      updateSentInvitations: function (res) {\n        models.currentUser.sentInvitations = res;\n        return res;\n      },\n\n      updateReceivedInvitations: function (res) {\n        models.currentUser.receivedInvitations = res;\n        return res;\n      },\n\n      /**\n       * Update the current user, merging data instead of replacing\n       */\n      updateMergeCurrentUser: function (res) {\n        if(res.permissions){ models.currentUser.permissions = []; }\n        return angular.merge(models.currentUser, res);\n      },\n\n      /**\n       * Update the preferences current user\n       */\n      updatePreferences: function (res) {\n        models.currentUser.preferences = res;\n        return res;\n      },\n\n      /**\n       * Mock an anonymous user for testing APIs\n       */\n      mockAnonymousUser: function (res) {\n        res.accessToken = '4e66c966e021918f0b088ddc929847f7';\n        res.uuid = '';\n        return res;\n      },\n\n      /**\n      * Memorize the current user in long term memory\n      */\n      memorizeCurrentUser: function (res) {\n        longTermMemory.memorize('currentUser', models.currentUser);\n        return res;\n      },\n\n      /**\n       * Inject default fields to events\n       */\n      injectEventsDefaults: function (res) {\n        // If the resource is an array, recurse for each element\n        if(angular.isArray(res)){\n          var newRes = [];\n          angular.forEach(res, function (el) {\n            newRes.push(resPipe.injectEventsDefaults(el));\n          })\n          return newRes;\n        }\n\n        // Prettify evenFormula\n        if(res.evenFormula === 0)\n          res.evenFormulaPretty = 'Andata e ritorno';\n        else if(res.evenFormula === 1)\n          res.evenFormulaPretty = 'Solo andata';\n\n        // Prettify evenType\n        if(res.evenType === 0)\n          res.evenTypePretty = 'Campionato italiana';\n        else if(res.evenType === 1)\n          res.evenTypePretty = 'Torneo a giorni';\n\n        // Make a dateRangePicker compliant field\n        if(!res.dates && res.evenDateStart && res.evenDateEnd){\n          res.dates = utils.date2Str(res.evenDateStart, res.evenDateEnd);\n        }\n\n        // Initialize a default published status\n        if(angular.isUndefined(res.evenStatoEvento)){\n          res.evenStatoEvento = 0; // Set as unpublished\n        }\n\n        // Initialize the currentDay based on its ID\n        if(angular.isNumber(res.evenDayActive) && angular.isArray(res.matchDays)){\n          for (var i = 0; i < res.matchDays.length; i++) {\n            if(res.matchDays[i].matcDayId === res.evenDayActive){\n              res.evenCurrentDay = res.matchDays[i];\n              break;\n            }\n          }\n        }\n\n        // Make a search field\n        res.search = [\n          res.evenName,\n          res.evenTypePretty,\n          res.evenFormulaPretty,\n          res.regions && res.regions.regiName || '',\n          res.evenCode,\n          res.evenSeason\n        ].join(' ');\n\n        // Sort the match days by prog number\n        if(angular.isArray(res.matchDays)){\n          res.matchDays.sort(function (a,b) {\n            return a.matcProg > b.matcProg;\n          });\n        }\n\n        return res;\n      },\n\n      /**\n       * Inject default fields to invitations\n       */\n      injectInvitationsDefaults: function (res) {\n        // If the resource is an array, recurse for each element\n        if(angular.isArray(res)){\n          var newRes = [];\n          angular.forEach(res, function (el) {\n            newRes.push(resPipe.injectInvitationsDefaults(el));\n          })\n          return newRes;\n        }\n\n        // Prettify status\n        switch (res.status) {\n          case '0':\n            res.statusPretty = 'In attesa';\n            break;\n          case '1':\n            res.statusPretty = 'Accettato';\n            break;\n          case '2':\n            res.statusPretty = 'Rifiutato';\n            break;\n          case '3':\n            res.statusPretty = 'Cancellato';\n            break;\n          default:\n            break;\n        }\n\n        // Translate date format\n        if(!res.dateInvitationPretty && res.dateInvitation){\n          res.dateInvitationPretty = utils.date2Str(res.dateInvitation);\n        }\n\n        return res;\n      },\n\n      /**\n       * Update the events\n       */\n      updateEvents: function (res) {\n        models.events = res;\n        return res;\n      },\n\n      /**\n       * Update the managed events\n       */\n      updateManagedEvents: function (res) {\n        models.currentUser.managedEvents = res;\n        return res;\n      },\n\n      /**\n       * Remove an event from the cache\n       */\n      removeEvent: function (res) {\n        // Look for the event in cache\n        var i = -1;\n        for (i=0; i < models.events.length; i++) {\n          if(models.events[i].evenId === res.evenId){\n            break;\n          }\n        }\n        // The event was found -> remove it\n        if(i >= 0 && i < models.events.length){\n          models.events.splice(i,1);\n        }\n        return res;\n      },\n\n      /**\n       * Memorize the events user in long term memory\n       */\n      memorizeEvents: function (res) {\n        longTermMemory.memorize('events', models.events);\n        return res;\n      },\n\n      /**\n      * Update the regions\n      */\n      updateRegions: function (res) {\n        models.regions = res;\n        return res;\n      },\n\n      /**\n      * Memorize the regions user in long term memory\n      */\n      memorizeRegions: function (res) {\n        longTermMemory.memorize('regions', models.regions);\n        return res;\n      },\n\n      /**\n       * Update the current event\n       */\n      updateCurrentEvent: function (res) {\n        var currentEventMerged = false;\n        if(models.currentEvent && models.currentEvent.evenId === res.evenId){\n          angular.merge(models.currentEvent, res);\n          currentEventMerged = true;\n        }\n\n        var i = 0;\n        if(angular.isArray(models.events)){\n          for (; i < models.events.length; i++) {\n            if(models.events[i].evenId === res.evenId){\n              if(currentEventMerged){\n                models.events[i] = models.currentEvent;\n              }\n              else{\n                angular.merge(models.events[i], res);\n                models.currentEvent = models.events[i];\n              }\n              break;\n            }\n          }\n        }\n\n        if(i === models.events.length){\n          models.currentEvent = res;\n          if(!angular.isArray(models.events)){\n            models.events = [];\n          }\n          models.events.push(models.currentEvent);\n        }\n\n        return models.currentEvent;\n      },\n\n      /**\n      * Memorize the events user in long term memory\n      */\n      memorizeCurrentEvent: function (res) {\n        longTermMemory.memorize('currentEvent', models.currentEvent);\n        return res;\n      },\n\n\n      /**\n       * Update the matches\n       */\n      updateMatches: function (res) {\n        if(!models.currentEvent || !models.currentEvent.currentDay) return res;\n        models.currentEvent.currentDay.matches = res;\n        return res;\n      },\n\n      /**\n       * Update a match\n       */\n      updateMatch: function (res) {\n        if(!models.currentEvent || !models.currentEvent.currentDay || !angular.isArray(models.currentEvent.currentDay.matches)){\n          return res;\n        }\n\n        for (var i = 0; i < models.currentEvent.currentDay.matches.length; i++) {\n          if(models.currentEvent.currentDay.matches[i].matcId === res.matcId){\n            return angular.merge(models.currentEvent.currentDay.matches[i], res);\n          }\n        }\n      },\n\n      /**\n       * Update the scorers of a match\n       */\n      updateMatchScorers: function (matchId, res) {\n        if(!models.currentEvent || !models.currentEvent.currentDay || !angular.isArray(models.currentEvent.currentDay.matches)){\n          return res;\n        }\n\n        for (var i = 0; i < models.currentEvent.currentDay.matches.length; i++) {\n          if(models.currentEvent.currentDay.matches[i].matcId == matchId){\n            models.currentEvent.currentDay.matches[i].scorers = res;\n            return res;\n          }\n        }\n      },\n\n      injectMatchDefaults: function (res) {\n        if(angular.isArray(res)){\n          angular.forEach(res, resPipe.injectMatchDefaults);\n        }\n\n        else{\n          if(res.matcDateMatch){\n            res.matcDateMatchPretty = utils.date2Str(res.matcDateMatch);\n          }\n\n          if(angular.isArray(res.matchCardsTeamA)){\n            resPipe.injectCardsDefaults(res.matchCardsTeamA);\n          }\n        }\n\n        return res;\n      },\n\n      injectPressDefaults: function (res) {\n        if(angular.isArray(res)){\n          angular.forEach(res, resPipe.injectPressDefaults);\n        }\n\n        else{\n          switch (res.pressStato) {\n            case '0':\n              res.pressStatoPretty = 'Non pubblicato';\n              break;\n            case '1':\n              res.pressStatoPretty = 'Pubblicato';\n              break;\n            default:\n              break;\n          }\n\n          if(res.pressDate){\n            res.pressDatePretty = utils.date2Str(res.pressDate);\n          }\n        }\n\n        return res;\n      },\n\n      injectEventCardsDefaults: function (res) {\n        if(angular.isArray(res)){\n          angular.forEach(res, resPipe.injectEventCardsDefaults);\n        }\n\n        else{\n          if(res.matcRedCards) resPipe.injectCardsDefaults(res.matcRedCards);\n          if(res.matcYellowCards) resPipe.injectCardsDefaults(res.matcYellowCards);\n        }\n\n        return res;\n      },\n\n      injectCardsDefaults: function (res) {\n        if(angular.isArray(res)){\n          angular.forEach(res, resPipe.injectCardsDefaults);\n        }\n        else{\n          switch (res.flgCards) {\n            case 0:\n              res.flgCardsPretty = 'Ammonizione';\n              break;\n            case 1:\n              res.flgCardsPretty = 'Espulsione per somma ammonizioni';\n              break;\n            case 2:\n              res.flgCardsPretty = 'Espulsione diretta';\n              break;\n            case 3:\n              res.flgCardsPretty = 'Squalifica da diffida';\n              break;\n            default:\n              break;\n          }\n          switch (res.typeSqualifications) {\n            case 0:\n              res.typeSqualificationsPretty = 'Ammonizione';\n              break;\n            case 1:\n              res.typeSqualificationsPretty = 'Espulsione per somma ammonizioni';\n              break;\n            case 2:\n              res.typeSqualificationsPretty = 'Espulsione diretta';\n              break;\n            case 3:\n              res.typeSqualificationsPretty = 'Squalifica da diffida';\n              break;\n            default:\n              break;\n          }\n        }\n\n        return res;\n      },\n\n      /**\n       * Insert a match day into current event\n       */\n      insertMatchDay: function (res) {\n        if(models.currentEvent && angular.isArray(models.currentEvent.matchDays)) {\n          models.currentEvent.matchDays.push(res);\n        }\n        return res;\n      },\n\n      /**\n       * Update the teams of current event\n       */\n      updateTeams: function (res) {\n        if(models.currentEvent){\n          models.currentEvent.teams = res;\n        }\n        return res;\n      },\n\n      /**\n       * Update the scoreboard of current event\n       */\n      updateScoreboard: function (res) {\n        if(models.currentEvent){\n          models.currentEvent.scoreboard = res;\n        }\n        return res;\n      },\n\n      /**\n       * Update the scorers of current event\n       */\n      updateScorers: function (res) {\n        if(models.currentEvent){\n          models.currentEvent.scorers = res;\n        }\n        return res;\n      },\n\n      updateYellows: function (res) {\n        if(models.currentEvent){\n          models.currentEvent.yellows = res;\n        }\n        return res;\n      },\n\n      updateDiffides: function (res) {\n        if(models.currentEvent){\n          models.currentEvent.diffides = res;\n        }\n        return res;\n      },\n\n      updateSqualifications: function (res) {\n        if(models.currentEvent){\n          models.currentEvent.squalifications = res;\n        }\n        return res;\n      },\n\n      updatePress: function (res) {\n        if(models.currentEvent){\n          if(angular.isArray(res)){\n            models.currentEvent.press = res;\n          }\n          else if(angular.isDefined(res.pressId) && angular.isArray(models.currentEvent.press)){\n            for (var i = 0; i < models.currentEvent.press.length; i++) {\n              if(models.currentEvent.press[i].pressId === res.pressId){\n                return angular.merge(models.currentEvent.press[i], res);\n              }\n            }\n          }\n        }\n        return res;\n      },\n\n      updateTeam: function (res) {\n        if(models.currentEvent && res.teamId && angular.isArray(models.currentEvent.teams)){\n          for (var i = 0; i < models.currentEvent.teams.length; i++) {\n            if(models.currentEvent.teams[i].teamId === res.teamId){\n              return angular.merge(models.currentEvent.teams[i], res);\n            }\n          }\n        }\n        return res;\n      },\n\n      updatePlayers: function (res) {\n        if(models.currentEvent && models.currentEvent.currentTeam){\n          models.currentEvent.currentTeam.players = res;\n        }\n        return res;\n      },\n\n      updatePlayer: function (res) {\n        if(models.currentEvent && models.currentEvent.currentTeam && angular.isArray(models.currentEvent.currentTeam.players)){\n          for (var i = 0; i < models.currentEvent.currentTeam.players.length; i++) {\n            if(models.currentEvent.currentTeam.players[i].playId === res.playId){\n              return angular.merge(models.currentEvent.currentTeam.players[i], res);\n            }\n          }\n        }\n        return res;\n      },\n\n      insertPlayer: function (res) {\n        if(models.currentEvent && models.currentEvent.currentTeam){\n          if(!angular.isArray(models.currentEvent.currentTeam.players)){\n            models.currentEvent.currentTeam.players = [];\n          }\n          models.currentEvent.currentTeam.players.push(res);\n        }\n        return res;\n      },\n\n      insertScorer: function (matchId, res, scorersKey) {\n        if(!scorersKey) scorersKey = 'scorers';\n        if(models.currentEvent && angular.isArray(models.currentEvent.currentDay.matches)){\n          for (var i = 0; i < models.currentEvent.currentDay.matches.length; i++) {\n            var curMatch = models.currentEvent.currentDay.matches[i];\n            if(curMatch.matcId === matchId){\n              if(!angular.isArray(curMatch[scorersKey])){\n                curMatch[scorersKey] = [];\n              }\n              curMatch[scorersKey].push(res);\n              break;\n            }\n          }\n        }\n        return res;\n      },\n\n      insertCard: function (matchId, res, cardsKey) {\n        if(!cardsKey) cardsKey = 'cards';\n        if(models.currentEvent && angular.isArray(models.currentEvent.currentDay.matches)){\n          for (var i = 0; i < models.currentEvent.currentDay.matches.length; i++) {\n            var curMatch = models.currentEvent.currentDay.matches[i];\n            if(curMatch.matcId === matchId){\n              if(!angular.isArray(curMatch[cardsKey])){\n                curMatch[cardsKey] = [];\n              }\n              curMatch[cardsKey].push(res);\n              break;\n            }\n          }\n        }\n        return res;\n      },\n\n      removeScorer: function (matchId, playerId, scorersKey) {\n        if(!scorersKey) scorersKey = 'scorers';\n        if(models.currentEvent && angular.isArray(models.currentEvent.currentDay.matches)){\n          for (var i = 0; i < models.currentEvent.currentDay.matches.length; i++) {\n            var curMatch = models.currentEvent.currentDay.matches[i];\n            if(curMatch.matcId === matchId){\n              if(!angular.isArray(curMatch[scorersKey])) break;\n              var j = 0;\n              for (; j < curMatch[scorersKey].length; j++) {\n                if(curMatch[scorersKey][j].playId === playerId) break;\n              }\n              if(j < curMatch[scorersKey].length){\n                curMatch[scorersKey].splice(j,1);\n                break;\n              }\n            }\n          }\n        }\n      },\n\n      /**\n       * Remove a card from the cache\n       */\n      removeEventCard: function (matchId, playerId, cardId, cardsKey, cardMatchKey) {\n        if(!models.currentEvent || !angular.isArray(models.currentEvent[cardsKey])) return;\n\n        // Look for the right player\n        for (var i = 0; i < models.currentEvent[cardsKey].length; i++) {\n          var curPlayer = models.currentEvent[cardsKey][i]\n          if(curPlayer.playId === playerId && angular.isArray(curPlayer[cardMatchKey])){\n            var j = 0;\n            // Look for the right scorerMatch and remove it\n            for (; j < curPlayer[cardMatchKey].length; j++) {\n              if(curPlayer[cardMatchKey][j].matcId === matchId){\n                curPlayer[cardMatchKey].splice(j,1);\n                return;\n              }\n            }\n          }\n        }\n      },\n\n      /**\n       * Update a card in cache\n       */\n      updateEventCard: function (matchId, playerId, cardId, cardsKey, cardMatchKey, cardData) {\n        if(!models.currentEvent || !angular.isArray(models.currentEvent[cardsKey])) return;\n\n        // Look for the right player\n        for (var i = 0; i < models.currentEvent[cardsKey].length; i++) {\n          var curPlayer = models.currentEvent[cardsKey][i]\n          if(curPlayer.playId === playerId && angular.isArray(curPlayer[cardMatchKey])){\n            var j = 0;\n            // Look for the right scorerMatch and remove it\n            for (; j < curPlayer[cardMatchKey].length; j++) {\n              if(curPlayer[cardMatchKey][j].matcId === matchId){\n                return angular.merge(curPlayer[cardMatchKey][j], cardData);\n              }\n            }\n          }\n        }\n      },\n\n      /**\n       * Remove a team from the cache\n       */\n      removeTeam: function (res) {\n        if(!res.teamId || !models.currentEvent || !angular.isArray(models.currentEvent.teams)) return res;\n\n        // Look for the team in cache\n        var i = -1;\n        for (i=0; i < models.currentEvent.teams.length; i++) {\n          if(models.currentEvent.teams[i].teamId === res.teamId){\n            break;\n          }\n        }\n        // The team was found -> remove it\n        if(i >= 0 && i < models.currentEvent.teams.length){\n          models.currentEvent.teams.splice(i,1);\n        }\n        return res;\n      },\n\n      /**\n       * Remove a press from the cache\n       */\n      removePress: function (res) {\n        if(!res.presId || !models.currentEvent || !angular.isArray(models.currentEvent.press)) return res;\n\n        // Look for the press in cache\n        var i = -1;\n        for (i=0; i < models.currentEvent.press.length; i++) {\n          if(models.currentEvent.press[i].presId === res.presId){\n            break;\n          }\n        }\n        // The team was found -> remove it\n        if(i >= 0 && i < models.currentEvent.press.length){\n          models.currentEvent.press.splice(i,1);\n        }\n        return res;\n      },\n\n      /**\n       * Remove a ScorerMatch from the cache\n       */\n      removeScorerMatch: function (playerId, res) {\n        if(!res.matcId || !models.currentEvent || !angular.isArray(models.currentEvent.scorers)) return res;\n\n        // Look for the right scorer\n        for (var i = 0; i < models.currentEvent.scorers.length; i++) {\n          var curScorer = models.currentEvent.scorers[i]\n          if(curScorer.scorPlayId === playerId && angular.isArray(curScorer.matcScorers)){\n            var j = 0;\n            // Look for the right scorerMatch and remove it\n            for (; j < curScorer.matcScorers.length; j++) {\n              if(curScorer.matcScorers[j].matcId === res.matcId){\n                curScorer.matcScorers.splice(j,1);\n                return res;\n              }\n            }\n          }\n        }\n\n        return res;\n      },\n\n       /**\n        * Remove a card from a match\n        */\n      removeMatchCard: function (matchId, cardId, cardsKey) {\n        if(!cardsKey) cardsKey = 'scorers';\n        if(models.currentEvent && angular.isArray(models.currentEvent.currentDay.matches)){\n          for (var i = 0; i < models.currentEvent.currentDay.matches.length; i++) {\n            var curMatch = models.currentEvent.currentDay.matches[i];\n            if(curMatch.matcId === matchId){\n              if(!angular.isArray(curMatch[cardsKey])) break;\n              var j = 0;\n              for (; j < curMatch[cardsKey].length; j++) {\n                if(curMatch[cardsKey][j].cardId === cardId) break;\n              }\n              if(j < curMatch[cardsKey].length){\n                curMatch[cardsKey].splice(j,1);\n                break;\n              }\n            }\n          }\n        }\n      },\n\n      /**\n      * Update a ScorerMatch in cache\n      */\n      updateScorerMatch: function (playerId, res) {\n        if(!res.matcId || !models.currentEvent || !angular.isArray(models.currentEvent.scorers)) return res;\n\n        // Look for the right scorer\n        for (var i = 0; i < models.currentEvent.scorers.length; i++) {\n          var curScorer = models.currentEvent.scorers[i]\n          if(curScorer.scorPlayId === playerId && angular.isArray(curScorer.matcScorers)){\n            var j = 0;\n            // Look for the right scorerMatch and update it\n            for (; j < curScorer.matcScorers.length; j++) {\n              if(curScorer.matcScorers[j].matcId === res.matcId){\n                return angular.merge(curScorer.matcScorers[j], res);\n              }\n            }\n          }\n        }\n\n        return res;\n      },\n\n      /**\n       * Remove a match from the cache\n       */\n      removeMatch: function (res) {\n        if(!res.matcId || !models.currentEvent || !models.currentEvent.currentDay || !angular.isArray(models.currentEvent.currentDay.matches)) return res;\n\n        // Look for the match in cache\n        var i = -1;\n        for (i=0; i < models.currentEvent.currentDay.matches.length; i++) {\n          if(models.currentEvent.currentDay.matches[i].matcId === res.matcId){\n            break;\n          }\n        }\n        // The team was found -> remove it\n        if(i >= 0 && i < models.currentEvent.currentDay.matches.length){\n          models.currentEvent.currentDay.matches.splice(i,1);\n        }\n        return res;\n      },\n\n      log: function (res) {\n        $log.info(res);\n        return res;\n      },\n\n      debugger: function (res) {\n        debugger; // eslint-disable-line no-debugger\n        return res;\n      }\n    };\n\n    return resPipe;\n  });\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('showOnHover', showOnHover);\n\n  /** @ngInject */\n  function showOnHover() {\n    var directive = {\n      restrict: 'A',\n      link: linkFunc,\n      scope: {\n        showOnHover: '@',\n        showAnimate: '='\n      }\n    };\n\n    return directive;\n\n    function linkFunc(scope, el) {\n      var visible = false;\n      var target = angular.element(scope.showOnHover);\n\n      scope.$watch('showOnHover', function () {\n        target.removeClass('show-on-hover-target').removeClass('not-visible').removeClass('show-animate');\n        target = angular.element(scope.showOnHover);\n        target.addClass('show-on-hover-target');\n        if(scope.showAnimate){\n          target.addClass('show-animate');\n        }\n        scope.updateVisibility();\n      })\n\n      scope.updateVisibility = function () {\n        if(visible){\n          target.removeClass('not-visible');\n        }\n        else{\n          target.addClass('not-visible');\n        }\n      }\n\n      el.hover(function() {\n          if(!visible){\n            visible = true;\n            scope.updateVisibility();\n          }\n        },\n        function() {\n          if(visible){\n            visible = false;\n            scope.updateVisibility();\n          }\n        }\n      );\n    }\n  }\n\n})();\n\n'use strict';\n\nangular.module('frispo')\n  /**\n   * Long Term Memory\n   * Persist data to make it available after the browser is closed\n   */\n  .factory('longTermMemory', function () {\n    var allowedKeys = [\n      'currentUser',\n      'events',\n      'regions',\n      'currentEvent'\n    ];\n\n    var longTermMemory = {\n      memorize: function(key, val) {\n        if(allowedKeys.indexOf(key) < 0){\n          return;\n        }\n\n        localStorage[key] = angular.toJson(val);\n      },\n\n      remember: function(key) {\n        if(allowedKeys.indexOf(key) < 0){\n          return null;\n        }\n\n        try {\n          return angular.fromJson(localStorage[key]);\n        }\n        catch(e){\n          delete localStorage[key];\n          return null;\n        }\n      },\n\n      forget: function(key) {\n        if(allowedKeys.indexOf(key) < 0){\n          return null;\n        }\n\n        delete localStorage[key];\n      },\n\n      oblivion: function() {\n        angular.forEach(allowedKeys, function(key) {\n          delete localStorage[key];\n        });\n        localStorage.clear();\n      }\n    };\n\n    return longTermMemory;\n  });\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('frispoSidebar', frispoSidebar);\n\n  /** @ngInject */\n  function frispoSidebar($timeout) {\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/components/frispoSidebar/frispoSidebar.html',\n      controller: SidebarController,\n      controllerAs: 'sidebar',\n      link: SidebarLink,\n      bindToController: true\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function SidebarController(models, $state) {\n      var vm = this;\n\n      vm.models = models;\n      vm.state = $state;\n\n      vm.manageMenuEntries = [\n        'main.admin.createEvent',\n        'main.admin.events',\n        'main.admin.teams',\n        'main.admin.calendar',\n        'main.admin.scoreboard'\n      ]\n    }\n\n    function SidebarLink(){\n      $timeout(function () {\n        angular.element(window).trigger('resize'); // Trigger a resize event to adjust AdminLTE height\n      });\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('frispoHeader', frispoHeader);\n\n  /** @ngInject */\n  function frispoHeader($timeout) {\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/components/frispoHeader/frispoHeader.html',\n      controller: HeaderController,\n      controllerAs: 'header',\n      link: HeaderLink,\n      bindToController: true\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function HeaderController(models) {\n      var vm = this;\n\n      vm.models = models;\n    }\n\n    function HeaderLink(){\n      $timeout(function () {\n        angular.element(window).trigger('resize'); // Trigger a resize event to adjust AdminLTE height\n      });\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('frispoFooter', frispoFooter);\n\n  /** @ngInject */\n  function frispoFooter($timeout) {\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/components/frispoFooter/frispoFooter.html',\n      controller: FooterController,\n      controllerAs: 'footer',\n      link: FooterLink,\n      bindToController: true\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function FooterController(models) {\n      var vm = this;\n\n      vm.models = models;\n    }\n\n    function FooterLink(){\n      $timeout(function () {\n        angular.element(window).trigger('resize'); // Trigger a resize event to adjust AdminLTE height\n      });\n    }\n  }\n\n})();\n\n'use strict';\n\nangular.module('frispo')\n  /**\n   * My Project Overview API service\n   */\n   .factory('frispoApi', function (\n      $q,\n      $http,\n      provisioningApiUrl,\n      eventsApiUrl,\n      teamsApiUrl,\n      pressApiUrl,\n      matchesApiUrl,\n      cardsApiUrl,\n      scorersApiUrl,\n      rankingApiUrl,\n      authorization,\n      anonymousToken,\n      toastr,\n      models,\n      userApiUrl\n    ) {\n      // Cache the promises (just to avoid to call the same API before the previous has finished)\n      var cache = {};\n\n      // Api Helpers (accessible only from this factory)\n      var helpers = {\n        /**\n         * Try to retrieve the result from cache, or make HTTP call\n         * @param  {String} method  The HTTP method\n         * @param  {String} fullUrl The API url\n         * @param  {Object} data    The body\n         * @param  {Object} headers The headers\n         * @param  {Boolean} keep   If true, the promise is cached even after it's been fulfilled\n         * @return {Promise}        A promise of the response\n         */\n        cacheOrHttp: function(method, fullUrl, data, headers, keep) {\n          var key = method + fullUrl + (data ? angular.toJson(data) : '');\n\n          var config = {};\n          if(method) config.method = method.toUpperCase();\n          if(fullUrl) config.url = fullUrl;\n          if(data) config.data = data;\n          if(headers) config.headers = headers;\n\n          if (!cache[key]) {\n            var promise;\n            var err = false;\n            switch(method){\n              case 'get':\n              case 'GET':\n              case 'post':\n              case 'POST':\n              case 'put':\n              case 'PUT':\n              case 'patch':\n              case 'PATCH':\n              case 'delete':\n              case 'DELETE':\n                promise = $http(config);\n                break;\n              default:\n                err = true;\n                promise = $q.reject();\n                break;\n            }\n            if(!err){\n              cache[key] = promise.finally(function(response,err) {\n                if(!keep){\n                  delete cache[key]; // delete the cache, so the next call will be fresh\n                }\n                if(err) { return $q.reject(err); }\n                if(response) { return response; }\n              });\n            }\n          }\n\n          return cache[key];\n        },\n\n        /**\n         * Perform an API call to the Users endpoint, using preset headers and required data\n         * @param  {String} method  The HTTP method\n         * @param  {String} url The API url\n         * @param  {Object} data    The body\n         * @param  {Object} headers The headers\n         * @return {Promise}        A promise of the response\n         */\n        provisioningApiCall: function (method, url, data, headers) {\n          url = url || '/';\n          return helpers.cacheOrHttp(\n            method,\n            provisioningApiUrl + url,\n            angular.merge({},\n              data\n            ),\n            angular.merge({\n                Authorization: authorization\n              },\n              headers\n            )\n          );\n        },\n\n        /**\n         * Perform an API call to the Events endpoint, using preset headers\n         * @param  {String} method  The HTTP method\n         * @param  {String} url     The API url\n         * @param  {Object} data    The body\n         * @param  {Object} headers The headers\n         * @return {Promise}        A promise of the response\n         */\n        eventsApiCall: function (method, url, data, headers, keep) {\n          url = url || '/';\n          return helpers.cacheOrHttp(\n            method,\n            eventsApiUrl + url,\n            data,\n            angular.merge({\n                Authorization: authorization\n              },\n              headers\n            ),\n            keep\n          );\n        },\n\n        /**\n         * Perform an API call to the Teams endpoint, using preset headers\n         * @param  {String} method  The HTTP method\n         * @param  {String} url     The API url\n         * @param  {Object} data    The body\n         * @param  {Object} headers The headers\n         * @return {Promise}        A promise of the response\n         */\n        teamsApiCall: function (method, url, data, headers) {\n          url = url || '/';\n          return helpers.cacheOrHttp(\n            method,\n            teamsApiUrl + url,\n            data,\n            angular.merge({\n                Authorization: authorization\n              },\n              headers\n            )\n          );\n        },\n\n        /**\n         * Perform an API call to the Press endpoint, using preset headers\n         * @param  {String} method  The HTTP method\n         * @param  {String} url     The API url\n         * @param  {Object} data    The body\n         * @param  {Object} headers The headers\n         * @return {Promise}        A promise of the response\n         */\n        pressApiCall: function (method, url, data, headers) {\n          url = url || '/';\n          return helpers.cacheOrHttp(\n            method,\n            pressApiUrl + url,\n            data,\n            angular.merge({\n                Authorization: authorization\n              },\n              headers\n            )\n          );\n        },\n\n        /**\n         * Perform an API call to the Match endpoint, using preset headers\n         * @param  {String} method  The HTTP method\n         * @param  {String} url     The API url\n         * @param  {Object} data    The body\n         * @param  {Object} headers The headers\n         * @return {Promise}        A promise of the response\n         */\n        matchesApiCall: function (eventId, method, url, data, headers) {\n          url = url || '/';\n          return helpers.cacheOrHttp(\n            method,\n            matchesApiUrl + '/event/' + eventId + url,\n            data,\n            angular.merge({\n                Authorization: authorization\n              },\n              headers\n            )\n          );\n        },\n\n        /**\n         * Perform an API call to the Cards endpoint, using preset headers\n         * @param  {String} method  The HTTP method\n         * @param  {String} url     The API url\n         * @param  {Object} data    The body\n         * @param  {Object} headers The headers\n         * @return {Promise}        A promise of the response\n         */\n        cardsApiCall: function (eventId, method, url, data, headers) {\n          url = url || '/';\n          return helpers.cacheOrHttp(\n            method,\n            cardsApiUrl + '/events/' + eventId + url,\n            data,\n            angular.merge({\n                Authorization: authorization\n              },\n              headers\n            )\n          );\n        },\n\n        /**\n         * Perform an API call to the Scorers endpoint, using preset headers\n         * @param  {String} method  The HTTP method\n         * @param  {String} url     The API url\n         * @param  {Object} data    The body\n         * @param  {Object} headers The headers\n         * @return {Promise}        A promise of the response\n         */\n        scorersApiCall: function (eventId, matchId, method, url, data, headers) {\n          url = url || '/';\n          return helpers.cacheOrHttp(\n            method,\n            scorersApiUrl + '/events/' + eventId + '/match/' + matchId + url,\n            data,\n            angular.merge({\n                Authorization: authorization\n              },\n              headers\n            )\n          );\n        },\n\n        /**\n         * Perform an API call to the Ranking endpoint, using preset headers\n         * @param  {String} method  The HTTP method\n         * @param  {String} url     The API url\n         * @param  {Object} data    The body\n         * @param  {Object} headers The headers\n         * @return {Promise}         A promise of the response\n         */\n        rankingApiCall: function (eventId, method, url, data, headers) {\n          url = url || '/';\n          return helpers.cacheOrHttp(\n            method,\n            rankingApiUrl + '/event/' + eventId + url,\n            data,\n            angular.merge({\n                Authorization: authorization\n              },\n              headers\n            )\n          );\n        },\n\n        /**\n         * Perform an API call to the Preferences endpoint, using preset headers\n         * @param  {String} method  The HTTP method\n         * @param  {String} url     The API url\n         * @param  {Object} data    The body\n         * @param  {Object} headers The headers\n         * @return {Promise}         A promise of the response\n         */\n        userApiCall: function (method, url, data, headers) {\n          url = url || '/';\n          return helpers.cacheOrHttp(\n            method,\n            userApiUrl + url,\n            data,\n            angular.merge({\n                Authorization: authorization\n              },\n              headers\n            )\n          );\n        },\n\n        /**\n         * Expect a 200 response and return data.\n         * Otherwise, return a rejected promise.\n         */\n        expect200: function (response) {\n          if(response.status === 200){\n            return response.data;\n          }\n          else{\n            return $q.reject(response);\n          }\n        },\n\n        notification: function (response) {\n          if(response.msg && response.status_code === 200){\n            toastr.success(response.msg);\n          }\n          return response;\n        },\n\n        unwrapData: function (response) {\n          return response.data;\n        }\n      };\n\n      var frispoApi = {\n        /** USER API **/\n\n        /**\n         * Register a new user\n         */\n        register: function(userData) {\n          return helpers\n            .provisioningApiCall('post', '/register?user_token=' + anonymousToken, {\n              email: userData.email,\n              password: userData.password\n            })\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * Authenticate the user\n         */\n        login: function(userData) {\n          return helpers\n            .provisioningApiCall('post', '/login?user_token=' + anonymousToken, {\n              email: userData.email,\n              password: userData.password\n            })\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * Authenticate the user using facebook\n         */\n        loginFacebook: function (facebookData) {\n          return helpers\n            .provisioningApiCall('post', '/login_facebook?user_token=' + anonymousToken, {\n              facebook_token: facebookData.authResponse.accessToken,\n              type: 0\n            })\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * Logout the user\n         * @return {Promise}          A promise with the response\n         */\n        logout: function () {\n          return helpers\n            .provisioningApiCall('post', '/logout?user_token=' + models.currentUser.userToken)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /* INVITATION API */\n\n        listSentInvitations: function () {\n          return helpers\n            .userApiCall('get', '/user/admininvitation/listinvitingmember?user_token=' + models.currentUser.userToken)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        listReceivedInvitations: function () {\n          return helpers\n            .userApiCall('get', '/user/admininvitation/listguest?user_token=' + models.currentUser.userToken)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        createInvitation: function (invitationData) {\n          return helpers\n            .userApiCall('post', '/user/admininvitation/send?user_token=' + models.currentUser.userToken, invitationData)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        updateInvitation: function (invitationData) {\n          return helpers\n            .userApiCall('post', '/user/admininvitation/edit?user_token=' + models.currentUser.userToken, invitationData)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /* EVENTS API */\n\n        /**\n         * List the events of the current user\n         * @return {Promise} A promise fulfilled with the event list\n         */\n        listEvents: function () {\n          return helpers\n            .eventsApiCall('get', '/events/origin?user_token=' + models.currentUser.userToken)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * List the events managed by current user\n         */\n        listManagedEvents: function () {\n          return helpers\n            .eventsApiCall('get', '/events/guest?user_token=' + models.currentUser.userToken)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * Create a new event\n         * @return {Promise} A promise fulfilled with the event created\n         */\n        createEvent: function (eventData) {\n          return helpers\n            .eventsApiCall('post', '/events/add?user_token=' + models.currentUser.userToken, eventData)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * Update an event\n         */\n        updateEvent: function (eventId, eventData) {\n          return helpers\n            .eventsApiCall('post', '/events/' + eventId + '/edit?user_token=' + models.currentUser.userToken, eventData)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * Destroy an event\n         */\n        destroyEvent: function (eventData) {\n          return helpers\n            .eventsApiCall('delete', '/events/' + eventData.evenId + '/remove?user_token=' + models.currentUser.userToken)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * Show an event\n         * @return {Promise} A promise fulfilled with the event requested\n         */\n        showEvent: function (eventId) {\n          return helpers\n            .eventsApiCall('get', '/event/' + eventId + '?user_token=' + models.currentUser.userToken)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * List the active regions\n         */\n        listRegions: function () {\n          return helpers\n            .eventsApiCall('get', '/regions?user_token=' + models.currentUser.userToken, null, null, true)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /** RANKING API **/\n\n        /**\n         * Show the scoreboard of an event\n         */\n        showEventScoreboard: function (eventId) {\n          return helpers\n            .rankingApiCall(eventId, 'get', '/ranking?user_token=' + models.currentUser.userToken)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * Show the scoreboard of a tournament event\n         */\n        showTournamentScoreboard: function (eventId) {\n          return helpers\n            .rankingApiCall(eventId, 'get', '/rankingtournament?user_token=' + models.currentUser.userToken)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * Show the players' scores of the event\n         */\n        showScorers: function (eventId) {\n          return helpers\n            .rankingApiCall(eventId, 'get', '/scorers_matches?user_token=' + models.currentUser.userToken)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * Create a new scorer\n         */\n        createScorer: function (eventId, matchId, scorerData) {\n          return helpers\n            .scorersApiCall(eventId, matchId, 'post', '/scorers/add?user_token=' + models.currentUser.userToken, scorerData)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * Destroy a ScorerMatch\n         */\n        destroyScorerMatch: function(eventId, playerId, matchId) {\n          return helpers\n            .scorersApiCall(eventId, matchId, 'delete', '/player/' + playerId + '/scorers/remove?user_token=' + models.currentUser.userToken)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * Destroy a card\n         */\n        destroyCard: function (eventId, matchId, cardId) {\n          return helpers\n            .cardsApiCall(eventId, 'delete', '/match/' + matchId + '/cards/' + cardId + '/remove?user_token=' + models.currentUser.userToken)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * Update a ScorerMatch\n         */\n        updateScorerMatch: function (eventId, matchId, scorerMatchData) {\n          return helpers\n            .scorersApiCall(eventId, matchId, 'post', '/scorers/edit?user_token=' + models.currentUser.userToken, scorerMatchData)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /* PRESS API */\n\n        /**\n         * List the press of an event\n         * @param  {Number} eventId The id of the event\n         */\n        listPress: function (eventId) {\n          return helpers\n            .pressApiCall('get', '/event/' + eventId + '/press?user_token=' + models.currentUser.userToken)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * update a press\n         */\n        updatePress: function (eventId, pressId, pressData) {\n          return helpers\n            .pressApiCall('post', '/event/' + eventId + '/press/' + pressId + '/edit?user_token=' + models.currentUser.userToken, pressData)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * update a press\n         */\n        createPress: function (pressData) {\n          return helpers\n            .pressApiCall('post', '/press/create?user_token=' + models.currentUser.userToken, pressData)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * destroy a press\n         */\n        destroyPress: function (eventId, pressId) {\n          return helpers\n            .pressApiCall('delete', '/event/' + eventId + '/press/' + pressId + '/remove?user_token=' + models.currentUser.userToken)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * show a press\n         */\n        showPress: function (eventId, pressId) {\n          return helpers\n            .pressApiCall('get', '/event/' + eventId + '/press/' + pressId + '?user_token=' + models.currentUser.userToken)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /* TEAMS API */\n\n        /**\n         * List the teams of an event\n         * @param  {Number} eventId The id of the event\n         */\n        listTeams: function (eventId) {\n          return helpers\n            .teamsApiCall('get', '/events/' + eventId + '/teams?user_token=' + models.currentUser.userToken)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * update a team\n         */\n        updateTeam: function (eventId, teamId, teamData) {\n          return helpers\n            .teamsApiCall('post', '/events/' + eventId + '/teams/' + teamId + '/edit?user_token=' + models.currentUser.userToken, teamData)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * update a team\n         */\n        createTeam: function (eventId, teamData) {\n          return helpers\n            .teamsApiCall('post', '/events/' + eventId + '/teams/add?user_token=' + models.currentUser.userToken, teamData)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * destroy a team\n         */\n        destroyTeam: function (eventId, teamId) {\n          return helpers\n            .teamsApiCall('post', '/events/' + eventId + '/teams/' + teamId + '/remove?user_token=' + models.currentUser.userToken)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * show a team\n         */\n        showTeam: function (eventId, teamId) {\n          return helpers\n            .teamsApiCall('get', '/events/' + eventId + '/teams/' + teamId + '?user_token=' + models.currentUser.userToken)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * Add a group of teams to an event\n         * @param {Number} eventId   The id of the event to add the teams to\n         * @param {Object} teamsData An object containing the informations about the teams we want to create\n         */\n        addGroupTeams: function (eventId, teamsData) {\n          return helpers\n            .teamsApiCall('post', '/events/' + eventId + '/teams/add_group_teams?user_token=' + models.currentUser.userToken, teamsData)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * List the players of a team\n         */\n        listPlayers: function (teamId) {\n          return helpers\n            .teamsApiCall('get', '/teams/' + teamId + '/players/list?user_token=' + models.currentUser.userToken)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        updatePlayer: function (teamId, playerId, playerData) {\n          return helpers\n            .teamsApiCall('post', '/teams/' + teamId + '/players/' + playerId + '/edit?user_token=' + models.currentUser.userToken, playerData)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        createPlayer: function (teamId, playerData) {\n          return helpers\n            // TODO: check this call\n            .teamsApiCall('post', '/teams/' + teamId + '/players/add?user_token=' + models.currentUser.userToken, playerData)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /* PREFERENCES API */\n\n\n        /**\n         * Get the preferences of the current user\n         */\n        showPreferences: function () {\n          return helpers\n            .userApiCall('get', '/preferences/list?user_token=' + models.currentUser.userToken)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * Get the basic info of the current user\n         */\n        showUser: function () {\n          return helpers\n            .userApiCall('get', '/user/find?user_token=' + models.currentUser.userToken)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * Update the basic info of the current user\n         */\n        updateUser: function (userData) {\n            return helpers\n              .userApiCall('post', '/user/edit?user_token=' + models.currentUser.userToken, userData)\n              .then(helpers.expect200)\n              .then(helpers.notification);\n        },\n\n\n        /* MATCHES API */\n\n\n        /**\n         * Create a new event\n         * @return {Promise} A promise fulfilled with the event created\n         */\n        createMatchesCalendar: function (eventId) {\n          return helpers\n            .matchesApiCall(eventId, 'post', '/match/create_calendar?user_token=' + models.currentUser.userToken)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * List the matches of an event for a given day\n         * @return {Promise} A promise fulfilled with the matches data\n         */\n        listMatches: function (eventId, day) {\n          return helpers\n            .matchesApiCall(eventId, 'get', '/day/' + day + '/matches?user_token=' + models.currentUser.userToken)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * Show a match\n         */\n        showMatch: function (eventId, matchId) {\n          return helpers\n            .matchesApiCall(eventId, 'get', '/match/' + matchId + '?user_token=' + models.currentUser.userToken)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * List the scorers of a match for a given event\n         * @return {Promise} A promise fulfilled with the matches data\n         */\n        listMatchScorers: function (eventId, matchId) {\n          return helpers\n            .matchesApiCall(eventId, 'get', '/match/' + matchId + '/scorers?user_token=' + models.currentUser.userToken)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * List the yellow cards of an event\n         */\n        listYellowCards: function (eventId) {\n          return helpers\n            .cardsApiCall(eventId, 'get', '/cards/listyellow?user_token=' + models.currentUser.userToken)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * List the diffides of an event\n         */\n        listDiffides: function (eventId) {\n          return helpers\n            .cardsApiCall(eventId, 'get', '/cards/listdiffide?user_token=' + models.currentUser.userToken)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * List the squalifications of an event\n         */\n        listSqualifications: function (eventId) {\n          return helpers\n            .cardsApiCall(eventId, 'get', '/cards/listsqualifications?user_token=' + models.currentUser.userToken)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * Create a new card\n         */\n        createCard: function (eventId, matchId, cardData) {\n          return helpers\n            .cardsApiCall(eventId, 'post', '/match/' + matchId + '/cards/add?user_token=' + models.currentUser.userToken, cardData)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * Update a card\n         */\n        updateCard: function (eventId, matchId, cardId, cardData) {\n          return helpers\n            .cardsApiCall(eventId, 'post', '/match/' + matchId + '/cards/' + cardId + '/edit?user_token=' + models.currentUser.userToken, cardData)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * Update a match\n         */\n        updateMatch: function (eventId, matchData) {\n          return helpers\n            .matchesApiCall(eventId, 'post', '/matches/update?user_token=' + models.currentUser.userToken, matchData)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * Create a match\n         */\n        createMatch: function (eventId, matchDayId, matchData) {\n          return helpers\n            .matchesApiCall(eventId, 'post', '/day/' + matchDayId + '/matches/add?user_token=' + models.currentUser.userToken, matchData)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * Create a match day\n         */\n        createDay: function (eventId, dayData) {\n          return helpers\n            .matchesApiCall(eventId, 'post', '/matches_day/add?user_token=' + models.currentUser.userToken, dayData)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        },\n\n        /**\n         * Destroy a match\n         */\n        destroyMatch: function (eventId, matchDayId, matchId) {\n          return helpers\n            .matchesApiCall(eventId, 'delete', '/match_day/' + matchDayId + '/matches/' + matchId + '/remove?user_token=' + models.currentUser.userToken)\n            .then(helpers.expect200)\n            .then(helpers.notification);\n        }\n      };\n\n      return frispoApi;\n   });\n\n'use strict';\n\nangular.module('frispo')\n  /**\n   * Error Manager.\n   * Handles common HTTP error messages\n   */\n  .factory('errorManager', function (toastr, $log, $state, $q, longTermMemory, models) {\n    var errorManager = function(err) {\n      // log every errors\n      $log.error(err);\n\n      // Unwrap HTTP errors and take actions if needed\n      if(angular.isObject(err) && err.status){\n        switch(err.status){\n          case 401:\n            $state.go('main.logout');\n            err = err.data;\n            break;\n          case 403:\n            $state.go('main.home');\n            err = err.data;\n            break;\n          case 422:\n            err = err.data;\n            break;\n          case 404:\n            err = err.data;\n            break;\n          case 413:\n            err = 'Il file che stai cercando di caricare è troppo grande';\n            break;\n          case -1:\n            err = 'Il server non è raggiungibile o non sei connesso ad Internet';\n            break;\n          default:\n            break;\n        }\n      }\n\n      var getErrorString = function (err) {\n        if(angular.isString(err)){\n          return err;\n        }\n        else if(angular.isObject(err) && (err.full_messages || err.error_description || err.errors || err.data || err.msg || err.error)){\n          return getErrorString(err.full_messages || err.error_description || err.errors || err.data || err.msg || err.error );\n        }\n        else if(angular.isArray(err)){\n          var myErr = [];\n          for (var i = 0; i < err.length; i++) {\n            myErr[i] = getErrorString(err[i]);\n          }\n          return getErrorString(myErr.join('<br>'));\n        }\n        // Don't manage different kinds of error\n        else{\n          longTermMemory.oblivion(); // Forget everything. We don't want the app to be broken forever!\n          models.reset(); // Reset all the models. We don't want the app to be broken forever!\n          return 'Si è verificato un errore imprevisto. Si prega di riprovare più tardi.';\n        }\n      }\n\n      toastr.error(getErrorString(err), 'Errore');\n\n      return $q.reject(err);\n    };\n\n    return errorManager;\n  });\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('datepicker', datepicker);\n\n  /** @ngInject */\n  function datepicker() {\n    var directive = {\n      restrict: 'A',\n      link: datepickerLink,\n      scope: {\n        datepicker: '@',\n        model: '='\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function datepickerLink(scope, el) {\n      scope.watchInput = function () {\n        scope.$watch('model', function () {\n          scope.drp.elementChanged();\n        });\n      }\n\n      if(scope.datepicker === 'range'){\n        scope.drp = el.daterangepicker({\n          autoUpdateInput: false,\n          locale: {\n            format: 'DD/MM/YYYY',\n            separator: ' -> '\n          }\n        }).data('daterangepicker');\n        el.on('apply.daterangepicker', function (ev, picker) {\n          scope.$apply(function () {\n            scope.model = picker.startDate.format('DD/MM/YYYY') + ' -> ' + picker.endDate.format('DD/MM/YYYY');\n          })\n        })\n        el.on('cancel.daterangepicker', function () {\n          scope.$apply(function () {\n            scope.model = '';\n          })\n        })\n        scope.watchInput();\n      }\n      else{\n        scope.drp = el.daterangepicker({\n          autoUpdateInput: false,\n          singleDatePicker: true,\n          locale: {\n            format: 'DD/MM/YYYY',\n            separator: ' -> '\n          }\n        }).data('daterangepicker');\n        el.on('apply.daterangepicker', function (ev, picker) {\n          scope.$apply(function () {\n            scope.model = picker.startDate.format('DD/MM/YYYY');\n          })\n        })\n        el.on('cancel.daterangepicker', function () {\n          scope.$apply(function () {\n            scope.model = '';\n          })\n        })\n        scope.watchInput();\n      }\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('compareTo', compareTo);\n\n  /** @ngInject */\n  function compareTo() {\n    var directive = {\n      restrict: 'A',\n      require: 'ngModel',\n      scope: {\n        otherModelValue: '=compareTo'\n      },\n      link: compareToLink\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function compareToLink(scope, element, attrs, ngModel) {\n      ngModel.$validators.compareTo = function (modelvalue) {\n        return modelvalue == scope.otherModelValue;\n      }\n      scope.$watch('otherModelValue', function () {\n        ngModel.$validate();\n      })\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('can', canDirective);\n\n  /** @ngInject */\n  function canDirective($log, models) {\n    var directive = {\n      restrict: 'A',\n      link: linkFunc,\n      scope: {\n        can: '@'\n      }\n    };\n\n    return directive;\n\n    function linkFunc(scope, el) {\n      var watcher;\n      var shown;\n      var negative;\n      var permission;\n      scope.models = models;\n\n      // Update the visibility of the element\n      var updateVisibility = function() {\n        var toShow = false;\n        if(angular.isArray(models.currentUser.permissions)){ // look for permission\n            for (var i = 0; i < models.currentUser.permissions.length; i++) {\n              if(models.currentUser.permissions[i].permName === permission){\n                toShow = true;\n                break;\n              }\n            }\n        }\n        if(negative){ toShow = !toShow; } // invert the condition if needed\n\n        // Show the element if not shown\n        if(toShow && !shown){\n          el.removeClass('can-hide');\n          shown = true;\n        }\n\n        // Hide the element if shown\n        else if(!toShow && shown){\n          el.addClass('can-hide');\n          shown = false;\n        }\n      };\n\n      // If the action starts with \"!\", the action is negative\n      negative = scope.can.slice(0, 1) === '!';\n\n\n      // In that case, remove ! from the string\n      if(negative){\n        permission = scope.can.substr(1);\n      }\n      else{\n        permission = scope.can;\n      }\n\n      // Update the visibility for the first time\n      shown = true;\n      updateVisibility();\n\n      // Update the visibility as soon as the permissions change\n      watcher = scope.$watch('models.currentUser.permissions', function(newVal, oldVal) {\n        if(newVal && oldVal !== newVal){\n          updateVisibility();\n        }\n      });\n\n      scope.$on('$destroy', function () {\n        watcher();\n      });\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .directive('bootstrapMultiselect', bootstrapMultiselect);\n\n  /** @ngInject */\n  function bootstrapMultiselect() {\n    var directive = {\n      restrict: 'A',\n      link: bootstrapMultiselectLink,\n      terminal: true\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function bootstrapMultiselectLink(scope, el) {\n      el.multiselect();\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('LoginController', LoginController);\n\n  /** @ngInject */\n  function LoginController(users, $state, ezfb) {\n    var vm = this;\n\n    users.onLoggedOut(); // ensure the user is logged out\n\n    vm.user = vm.user || {};\n\n    // Login with username and password\n    vm.login = function () {\n      users\n        .login(vm.user)\n        .then(function () {\n          $state.go('main.access');\n        });\n    }\n\n    // Login with facebook\n    vm.loginFacebook = function () {\n      users.configureFacebookCallbacks();\n      ezfb.login(null,{scope: 'email,public_profile'});\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('TeamsController', TeamsController);\n\n  /** @ngInject */\n  function TeamsController(models, events, teams, $q, $uibModal) {\n    var vm = this;\n    vm.models = models;\n\n    // Update the current event (it's been selected now)\n    vm.updateCurrentEvent = function () {\n      // No current event selected -> noop\n      if(!models.currentEvent) return;\n\n      // Current event selected -> manually find and copy the real event from models (ng-options creates a new object)\n      for (var i = 0; i < models.events.length; i++) {\n        if(models.events[i].evenId === models.currentEvent.evenId){\n          models.events[i] = models.currentEvent;\n          break;\n        }\n      }\n\n      return vm\n        .setLoading(models.currentEvent.evenId) // Set a spinning loader on the page\n        .then(teams.list)                       // List the teams of the event\n        .finally(vm.unsetLoading)               // Remove the loader from the page\n    }\n\n    vm.setLoading = function (res) {\n      vm.loading = true;\n      return $q.resolve(res);\n    }\n\n    vm.unsetLoading = function (res) {\n      vm.loading = false;\n      return $q.resolve(res);\n    }\n\n    vm.createNewTeam = function () {\n      $uibModal.open({\n          templateUrl: 'app/pages/teams/create/create.html',\n          controller: 'TeamCreateController',\n          controllerAs: 'teamCreate',\n          windowClass: 'modal-success'\n        }).result\n        .then(function (res) {\n          if(angular.isDefined(res)){\n            vm.setLoading(res)\n              .then(teams.form2Team)\n              .then(teams.create)\n              .then(teams.list)\n              .finally(vm.unsetLoading);\n          }\n        })\n    }\n    // API call to retrieve all the events\n    events\n      .list()\n      .then(vm.updateCurrentEvent);\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('ScorersController', ScorersController);\n\n  /** @ngInject */\n  function ScorersController(models, events, $q) {\n    var vm = this;\n    vm.models = models;\n\n    // Update the current event (it's been selected now)\n    vm.updateCurrentEvent = function () {\n      // No current event selected -> noop\n      if(!models.currentEvent) return;\n\n      // Current event selected -> manually find and copy the real event from models (ng-options creates a new object)\n      for (var i = 0; i < models.events.length; i++) {\n        if(models.events[i].evenId === models.currentEvent.evenId){\n          models.events[i] = models.currentEvent;\n          break;\n        }\n      }\n\n      return vm\n        .setLoading(models.currentEvent.evenId) // Set a spinning loader on the page\n        .then(events.showScorers)               // List the scorers of the event\n        .finally(vm.unsetLoading)               // Remove the loader from the page\n    }\n\n    vm.setLoading = function (res) {\n      vm.loading = true;\n      return $q.resolve(res);\n    }\n\n    vm.unsetLoading = function (res) {\n      vm.loading = false;\n      return $q.resolve(res);\n    }\n\n    // API call to retrieve all the events\n    events\n      .list()\n      .then(vm.updateCurrentEvent);\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('RegisterController', RegisterController);\n\n  /** @ngInject */\n  function RegisterController(users, $state) {\n    var vm = this;\n\n    users.onLoggedOut(); // ensure the user is logged out\n\n    vm.user = vm.user || {};\n\n    vm.register = function () {\n      users\n        .register(vm.user)\n        .then(users.onLoggedIn)\n        .then(function () {\n          $state.go('main.access');\n        });\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('ProfileController', ProfileController);\n\n  /** @ngInject */\n  function ProfileController(models, users, $q) {\n    var vm = this;\n    vm.models = models;\n\n    vm.userTypes = [\n      { num: 0, name: 'Giocatore'},\n      { num: 1, name: 'Organizzatore'}\n    ];\n\n    vm.userSubscriptions = [\n      { num: 0, name: 'Gratuito' },\n      { num: 1, name: 'Standard'},\n      { num: 2, name: 'Premium'}\n    ];\n\n    vm.submit = function () {\n      vm.setLoading(vm.form)\n        .then(users.update)\n        .then(vm.updateForm)\n        .finally(vm.unsetLoading)\n    }\n\n    vm.setLoading = function (res) {\n      vm.loading = true;\n      return $q.resolve(res);\n    }\n\n    vm.unsetLoading = function (res) {\n      vm.loading = false;\n      return $q.resolve(res);\n    }\n\n    vm.updateForm = function (res) {\n      vm.form = {\n        type: models.currentUser.type,\n        subscription: models.currentUser.subscription\n      }\n      return $q.resolve(res);\n    }\n\n    vm.setLoading()\n      .then(users.info)\n      .then(vm.updateForm)\n      .then(vm.unsetLoading);\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('ScoreboardController', ScoreboardController);\n\n  /** @ngInject */\n  function ScoreboardController(models, events, $q) {\n    var vm = this;\n    vm.models = models;\n\n    // Update the current event (it's been selected now)\n    vm.updateCurrentEvent = function () {\n      // No current event selected -> noop\n      if(!models.currentEvent) return;\n\n      // Current event selected -> manually find and copy the real event from models (ng-options creates a new object)\n      for (var i = 0; i < models.events.length; i++) {\n        if(models.events[i].evenId === models.currentEvent.evenId){\n          models.events[i] = models.currentEvent;\n          break;\n        }\n      }\n\n      return vm\n        .setLoading(models.currentEvent)        // Set a spinning loader on the page\n        .then(events.showScoreboard)            // Get the scoreboard for given event\n        .finally(vm.unsetLoading);              // Remove the loader from the page\n    }\n\n    vm.setLoading = function (res) {\n      vm.loading = true;\n      return $q.resolve(res);\n    }\n\n    vm.unsetLoading = function (res) {\n      vm.loading = false;\n      return $q.resolve(res);\n    }\n\n    // API call to retrieve all the events\n    events\n      .list()\n      .then(vm.updateCurrentEvent);\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('ManagerMatchesController', ManagerMatchesController);\n\n  /** @ngInject */\n  function ManagerMatchesController(models, events, matches, $q, $uibModal, teams) {\n    var vm = this;\n    vm.models = models;\n\n    // Update the current event (it's been selected now)\n    vm.updateCurrentEvent = function () {\n      // No current event selected -> noop\n      if(!models.currentEvent) return;\n\n      // Current event selected -> manually find and copy the real event from models (ng-options creates a new object)\n      for (var i = 0; i < models.currentUser.managedEvents.length; i++) {\n        if(models.currentUser.managedEvents[i].evenId === models.currentEvent.evenId){\n          models.currentEvent = models.currentUser.managedEvents[i];\n          break;\n        }\n      }\n\n      return vm\n        .setLoading(models.currentEvent.evenId) // Set a spinning loader on the page\n        .then(events.show)                      // Get the event info (API call)\n        .then(teams.list)                       // Get the event teams (API call), needed for filling up the select options\n        .then(vm.updateMatchDay)                // Update the match day\n        .finally(vm.unsetLoading);              // Remove the loader from the page\n    }\n\n    // Update the match day (it's been selected now)\n    vm.updateMatchDay = function () {\n      // No current event selected, or no match days yet -> noop\n      if(!models.currentEvent || !models.currentEvent.matchDays || models.currentEvent.matchDays.length === 0){\n        return;\n      }\n\n      // No day selected - check if the event has just changed\n      if(!models.currentEvent.currentDay){\n        // An event has been selected -> use it's first available day\n        models.currentEvent.currentDay = models.currentEvent.matchDays[0];\n      }\n      // Current day selected -> manually find and copy the real day from models (ng-options creates a new object)\n      else{\n        for (var i = 0; i < models.currentEvent.matchDays.length; i++) {\n          if(models.currentEvent.matchDays[i].matcDayId === vm.models.currentEvent.currentDay.matcDayId){\n            vm.models.currentEvent.currentDay = models.currentEvent.matchDays[i];\n            break;\n          }\n        }\n      }\n\n      return vm\n        .setLoading()\n        .then(matches.list)\n        .finally(vm.unsetLoading);\n    }\n\n    vm.setLoading = function (res) {\n      vm.loading = true;\n      return $q.resolve(res);\n    }\n\n    vm.unsetLoading = function (res) {\n      vm.loading = false;\n      return $q.resolve(res);\n    }\n\n    // API call to retrieve all the events\n    events\n      .listManaged()\n      .then(vm.updateCurrentEvent);\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('PlayersController', PlayersController);\n\n  /** @ngInject */\n  function PlayersController(models, events, $q, $uibModal, teams) {\n    var vm = this;\n    vm.models = models;\n\n    // Update the current event (it's been selected now)\n    vm.updateCurrentEvent = function () {\n      // No current event selected -> noop\n      if(!models.currentEvent) return;\n\n      // Current event selected -> manually find and copy the real event from models (ng-options creates a new object)\n      for (var i = 0; i < models.events.length; i++) {\n        if(models.events[i].evenId === models.currentEvent.evenId){\n          models.events[i] = models.currentEvent;\n          break;\n        }\n      }\n\n      return vm\n        .setLoading(models.currentEvent.evenId) // Set a spinning loader on the page\n        .then(events.show)                      // Get the event info (API call)\n        .then(teams.list)                       // Get the event teams (API call), needed for filling up the select options\n        .then(vm.updateTeam)                    // Update the match day\n        .finally(vm.unsetLoading);              // Remove the loader from the page\n    }\n\n    // Update the team (it's been selected now)\n    vm.updateTeam = function () {\n      // No current event selected, or no teams yet -> noop\n      if(!models.currentEvent || !models.currentEvent.teams || models.currentEvent.teams.length === 0){\n        return;\n      }\n\n      // No day selected - check if the event has just changed\n      if(!models.currentEvent.currentTeam){\n        // An event has been selected -> use it's first available team\n        models.currentEvent.currentTeam = models.currentEvent.teams[0];\n      }\n      // Current day selected -> manually find and copy the real team from models (ng-options creates a new object)\n      else{\n        for (var i = 0; i < models.currentEvent.teams.length; i++) {\n          if(models.currentEvent.teams[i].teamId === vm.models.currentEvent.currentTeam.teamId){\n            vm.models.currentEvent.currentTeam = models.currentEvent.teams[i];\n            break;\n          }\n        }\n      }\n\n      return vm\n        .setLoading()\n        .then(teams.listPlayers)\n        .finally(vm.unsetLoading);\n    }\n\n    vm.setLoading = function (res) {\n      vm.loading = true;\n      return $q.resolve(res);\n    }\n\n    vm.unsetLoading = function (res) {\n      vm.loading = false;\n      return $q.resolve(res);\n    }\n\n    vm.createNewPlayer = function () {\n      $uibModal.open({\n          templateUrl: 'app/pages/players/create/create.html',\n          controller: 'PlayerCreateController',\n          controllerAs: 'playerCreate',\n          windowClass: 'modal-success'\n        }).result\n        .then(function (res) {\n          if(angular.isDefined(res)){\n            vm.setLoading(res)\n              .then(teams.form2Player)\n              .then(teams.createPlayer)\n              .finally(vm.unsetLoading);\n          }\n        })\n    }\n\n    // API call to retrieve all the events\n    events\n      .list()\n      .then(vm.updateCurrentEvent);\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('PressController', PressController);\n\n  /** @ngInject */\n  function PressController(models, events, press, $q, $uibModal) {\n    var vm = this;\n    vm.models = models;\n\n    // Update the current event (it's been selected now)\n    vm.updateCurrentEvent = function () {\n      // No current event selected -> noop\n      if(!models.currentEvent) return;\n\n      // Current event selected -> manually find and copy the real event from models (ng-options creates a new object)\n      for (var i = 0; i < models.events.length; i++) {\n        if(models.events[i].evenId === models.currentEvent.evenId){\n          models.events[i] = models.currentEvent;\n          break;\n        }\n      }\n\n      return vm\n        .setLoading(models.currentEvent.evenId) // Set a spinning loader on the page\n        .then(press.list)                       // List the press of the event\n        .finally(vm.unsetLoading)               // Remove the loader from the page\n    }\n\n    vm.setLoading = function (res) {\n      vm.loading = true;\n      return $q.resolve(res);\n    }\n\n    vm.unsetLoading = function (res) {\n      vm.loading = false;\n      return $q.resolve(res);\n    }\n\n    vm.createNewPress = function () {\n      $uibModal.open({\n          templateUrl: 'app/pages/press/create/create.html',\n          controller: 'PressCreateController',\n          controllerAs: 'pressCreate',\n          windowClass: 'modal-success'\n        }).result\n        .then(function (res) {\n          if(angular.isDefined(res)){\n            vm.setLoading(res)\n              .then(press.form2Press)\n              .then(press.create)\n              .then(press.list)\n              .finally(vm.unsetLoading);\n          }\n        })\n    }\n    // API call to retrieve all the events\n    events\n      .list()\n      .then(vm.updateCurrentEvent);\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('ManagerEventsController', ManagerEventsController);\n\n  /** @ngInject */\n  function ManagerEventsController(models, events) {\n    var vm = this;\n\n    // Bind models to controller\n    vm.models = models;\n\n    // API call\n    events.listManaged();\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('InvitationsController', InvitationsController);\n\n  /** @ngInject */\n  function InvitationsController(models, events, invitations, $q, $uibModal) {\n    var vm = this;\n    vm.models = models;\n\n    vm.createNewInvitation = function () {\n      $uibModal.open({\n          templateUrl: 'app/pages/invitations/create/create.html',\n          controller: 'InvitationCreateController',\n          controllerAs: 'invitationCreate',\n          windowClass: 'modal-success'\n        }).result\n        .then(function (res) {\n          if(angular.isDefined(res)){\n            vm.setLoading(res)\n              .then(invitations.form2Invitation)\n              .then(invitations.create)\n              .then(invitations.listSent)\n              .finally(vm.unsetLoading);\n          }\n        })\n    }\n\n    vm.setLoading = function (res) {\n      vm.loading = true;\n      return $q.resolve(res);\n    }\n\n    vm.unsetLoading = function (res) {\n      vm.loading = false;\n      return $q.resolve(res);\n    }\n\n    events.list();\n    invitations.listSent();\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('EventsController', EventsController);\n\n  /** @ngInject */\n  function EventsController(models, events, invitations, users) {\n    var vm = this;\n\n    // Bind models to controller\n    vm.models = models;\n\n    // Create filter objects to split events into published and not published\n    vm.tableFilters = [\n      // published events\n      {\n        eventFilter: { evenStatoEvento: '0' },\n        title: 'Eventi non pubblicati',\n        boxClass: 'box-warning'\n      },\n      {\n        eventFilter: { evenStatoEvento: '1' },\n        title: 'Eventi pubblicati',\n        boxClass: 'box-success'\n      }\n    ];\n\n    vm.acceptInvitation = function (invitation) {\n      invitations\n        .accept(invitation)\n        .then(invitations.listReceived)\n        .then(users.show); // Update user data because permissions may change\n    }\n\n    vm.declineInvitation = function (invitation) {\n      invitations\n        .decline(invitation)\n        .then(invitations.listReceived);\n    }\n\n    // API call\n    events.list();\n    invitations.listReceived();\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('CalendarController', CalendarController);\n\n  /** @ngInject */\n  function CalendarController(models, events, matches, $q, $uibModal, teams) {\n    var vm = this;\n    vm.models = models;\n\n    // Update the current event (it's been selected now)\n    vm.updateCurrentEvent = function () {\n      // No current event selected -> noop\n      if(!models.currentEvent) return;\n\n      // Current event selected -> manually find and copy the real event from models (ng-options creates a new object)\n      for (var i = 0; i < models.events.length; i++) {\n        if(models.events[i].evenId === models.currentEvent.evenId){\n          models.events[i] = models.currentEvent;\n          break;\n        }\n      }\n\n      return vm\n        .setLoading(models.currentEvent.evenId) // Set a spinning loader on the page\n        .then(events.show)                      // Get the event info (API call)\n        .then(teams.list)                       // Get the event teams (API call), needed for filling up the select options\n        .then(vm.updateMatchDay)                // Update the match day\n        .finally(vm.unsetLoading);              // Remove the loader from the page\n    }\n\n    // Update the match day (it's been selected now)\n    vm.updateMatchDay = function () {\n      // No current event selected, or no match days yet -> noop\n      if(!models.currentEvent || !models.currentEvent.matchDays || models.currentEvent.matchDays.length === 0){\n        return;\n      }\n\n      // No day selected - check if the event has just changed\n      if(!models.currentEvent.currentDay){\n        // An event has been selected -> use it's first available day\n        models.currentEvent.currentDay = models.currentEvent.matchDays[0];\n      }\n      // Current day selected -> manually find and copy the real day from models (ng-options creates a new object)\n      else{\n        for (var i = 0; i < models.currentEvent.matchDays.length; i++) {\n          if(models.currentEvent.matchDays[i].matcDayId === vm.models.currentEvent.currentDay.matcDayId){\n            vm.models.currentEvent.currentDay = models.currentEvent.matchDays[i];\n            break;\n          }\n        }\n      }\n\n      return vm\n        .setLoading()\n        .then(matches.list)\n        .finally(vm.unsetLoading);\n    }\n\n    vm.setLoading = function (res) {\n      vm.loading = true;\n      return $q.resolve(res);\n    }\n\n    vm.unsetLoading = function (res) {\n      vm.loading = false;\n      return $q.resolve(res);\n    }\n\n    vm.createNewMatch = function () {\n      $uibModal.open({\n          templateUrl: 'app/pages/calendar/create/create.html',\n          controller: 'MatchCreateController',\n          controllerAs: 'matchCreate',\n          windowClass: 'modal-success'\n        }).result\n        .then(function (res) {\n          if(angular.isDefined(res)){\n            vm.setLoading(res)\n              .then(matches.form2Match)\n              .then(matches.create)\n              .then(matches.list)\n              .finally(vm.unsetLoading);\n          }\n        })\n    }\n\n    vm.createNewDay = function () {\n      $uibModal.open({\n          templateUrl: 'app/pages/calendar/createDay/create.html',\n          controller: 'DayCreateController',\n          controllerAs: 'dayCreate',\n          windowClass: 'modal-success'\n        }).result\n        .then(function (res) {\n          if(angular.isDefined(res)){\n            vm.setLoading(res)\n              .then(matches.form2Day)\n              .then(matches.createDay)\n              .then(function (res) {\n                models.currentEvent.currentDay = res;\n                return res;\n              })\n              .then(vm.updateMatchDay)\n              .finally(vm.unsetLoading);\n          }\n        })\n    }\n\n    // API call to retrieve all the events\n    events\n      .list()\n      .then(vm.updateCurrentEvent);\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('DisciplinaryController', DisciplinaryController);\n\n  /** @ngInject */\n  function DisciplinaryController(models, events, $q) {\n    var vm = this;\n    vm.models = models;\n\n    // Update the current event (it's been selected now)\n    vm.updateCurrentEvent = function () {\n      // No current event selected -> noop\n      if(!models.currentEvent) return;\n\n      // Current event selected -> manually find and copy the real event from models (ng-options creates a new object)\n      for (var i = 0; i < models.events.length; i++) {\n        if(models.events[i].evenId === models.currentEvent.evenId){\n          models.events[i] = models.currentEvent;\n          break;\n        }\n      }\n\n      return vm\n        .setLoading(models.currentEvent.evenId) // Set a spinning loader on the page\n        .then(function (eventId) { // List disciplinary stuff\n          return $q.all([\n            events.listYellows(eventId),\n            events.listDiffides(eventId),\n            events.listSqualifications(eventId)\n          ]);\n        })\n        .finally(vm.unsetLoading)               // Remove the loader from the page\n    }\n\n    vm.setLoading = function (res) {\n      vm.loading = true;\n      return $q.resolve(res);\n    }\n\n    vm.unsetLoading = function (res) {\n      vm.loading = false;\n      return $q.resolve(res);\n    }\n\n\n    vm.cardConfigs = [\n      {\n        header: 'Ammonizioni',\n        boxClass: 'box-success',\n        emptyMessage: 'Non ci sono ammonizioni in questo evento',\n        cardsKey: 'yellows',\n        cardMatchKey: 'matcYellowCards',\n        fields: [\n          {\n            name: 'Nome giocatore',\n            key: 'playName'\n          },\n          {\n            name: 'Cognome giocatore',\n            key: 'playSurname'\n          },\n          {\n            name: 'Squadra',\n            key: 'teamName'\n          },\n          {\n            name: 'Numero ammonizioni',\n            key: 'nroYellowCards'\n          }\n        ],\n        controls: {\n          show: true,\n          edit: true,\n          delete: false,\n          editDetail: false,\n          deleteDetail: true\n        }\n      },\n      {\n        header: 'Diffide',\n        boxClass: 'box-warning',\n        emptyMessage: 'Non ci sono diffide in questo evento',\n        cardsKey: 'diffides',\n        cardMatchKey: 'matcYellowCards',\n        fields: [\n          {\n            name: 'Nome giocatore',\n            key: 'playName'\n          },\n          {\n            name: 'Cognome giocatore',\n            key: 'playSurname'\n          },\n          {\n            name: 'Squadra',\n            key: 'teamName'\n          },\n          {\n            name: 'Numero ammonizioni',\n            key: 'nroYellowCards'\n          }\n        ],\n        controls: {\n          show: true,\n          edit: false,\n          delete: false,\n          editDetail: false,\n          deleteDetail: false\n        }\n      },\n      {\n        header: 'Squalifiche',\n        boxClass: 'box-danger',\n        emptyMessage: 'Non ci sono squalifiche in questo evento',\n        cardsKey: 'squalifications',\n        cardMatchKey: 'matcRedCards',\n        fields: [\n          {\n            name: 'Nome giocatore',\n            key: 'playName'\n          },\n          {\n            name: 'Cognome giocatore',\n            key: 'playSurname'\n          },\n          {\n            name: 'Squadra',\n            key: 'teamName'\n          },\n          {\n            name: 'Numero squalifiche',\n            key: 'nroRedCards'\n          }\n        ],\n        detailFields: [\n          {\n            name: 'Tipo di squalifica',\n            key: 'typeSqualificationsPretty'\n          },\n          {\n            name: 'Giornate di squalifica',\n            key: 'daySqualifications'\n          },\n          {\n            name: 'Stato',\n            key: 'squalificationStatus'\n          },\n          {\n            name: 'Note',\n            key: 'note'\n          }\n        ],\n        controls: {\n          show: true,\n          edit: true,\n          delete: false,\n          editDetail: {\n            daySqualifications: {\n              type: 'select',\n              options: [{name:'1',value:1},{name:'2',value:2},{name:'3',value:3},{name:'4',value:4},{name:'5',value:5},{name:'6',value:6},{name:'7',value:7},{name:'8',value:8},{name:'9',value:9},{name:'10',value:10},{name:'11',value:11},{name:'12',value:12},{name:'13',value:13},{name:'14',value:14},{name:'15',value:15},{name:'16',value:16},{name:'17',value:17},{name:'18',value:18},{name:'19',value:19},{name:'20',value:20}]\n            },\n            squalificationStatus: {\n              type: 'select',\n              options: [{name:'Non scontata',value:0},{name:'Scontata',value:1}]\n            },\n            note: {\n              type: 'text'\n            }\n          },\n          deleteDetail: true\n        }\n      }\n    ];\n\n    // API call to retrieve all the events\n    events\n      .list()\n      .then(vm.updateCurrentEvent);\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('CreateEventController', CreateEventController);\n\n  /** @ngInject */\n  function CreateEventController(Wizard, events, resPipe, toastr, teams, matches, $log, $state, models, utils) {\n    var vm = this;\n\n    vm.models = models;\n    // Initialize the wizard object\n    vm.wizard = new Wizard({totalSteps: 3, startFromStep: 1});\n\n    // If true, the user have to manually insert the rounds.\n    // If false, the user can choose between \"Inserimento gironi manuale\" and \"Inserimento gironi automatico\".\n    vm.forceManualRounds = true;\n\n    vm.roundNames = utils.alphabetChars();\n\n    vm.initDefaultTeams = function () {\n      if(!vm.step2.teams){\n        vm.step2.teams = [];\n        vm.addTeam();\n        vm.addTeam();\n      }\n    }\n\n    vm.addTeam = function () {\n      if(vm.step2 && vm.step2.roundType === 1){\n        vm.step2.teams.push({name: ''});\n      }\n      else{\n        vm.step2.teams.push({name: '', round: ''});\n      }\n    };\n\n    vm.removeTeam = function (index) {\n      if(vm.step2.teams.length <= 2){\n        toastr.error('E\\' obbligatorio inserire almeno 2 squadre', 'Impossibile rimuovere la squadra');\n      }\n      else{\n        vm.step2.teams.splice(index,1);\n      }\n    }\n\n    vm.step1Done = function () {\n      if(!vm.step2) vm.step2 = {}; // Initialize step2 if needed\n\n      // If not \"Torneo a gironi\"\n      if(vm.step1.type != 1){\n        vm.step2.roundType = '1';\n        vm.initDefaultTeams();\n      }\n\n      // If \"torneo a gironi\" and user can't choose manual or automatic round type\n      else if(vm.forceManualRounds){\n        vm.step2.roundType = '0'; // Manual rounds\n        vm.initDefaultTeams();\n      }\n\n      vm.wizard.next();\n    }\n\n    vm.submitStep1 = function () {\n      $log.info('creando l\\'evento..');\n      return events\n        .form2Event(vm.step1)\n        .then(events.create);\n    }\n\n    vm.step2Done = function () {\n      vm.wizard.next();\n    }\n\n    vm.submitStep2 = function () {\n      $log.info('creando le squadre..');\n      return teams\n        .form2Teams(vm.step2)\n        .then(teams.addGroup);\n    }\n\n    vm.step3Done = function () {\n      vm.submitWizard();\n    }\n\n    vm.submitStep3 = function () {\n      $log.info('creando il calendario..');\n      return matches.createCalendar(models.currentEvent.evenId);\n    }\n\n    vm.submitWizard = function () {\n      vm.wizard.loading = true;\n      vm.submitStep1()\n        .then(vm.submitStep2)\n        .then(vm.submitStep3)\n        .then(function () {\n          $state.go('main.admin.events');\n        })\n        .finally(function () {\n          vm.wizard.loading = false;\n        });\n    }\n\n    vm.manualSubmit = function () {\n      vm.wizard.loading = true;\n      vm.submitStep1()\n        .then(vm.submitStep2)\n        .then(function () {\n          $state.go('main.admin.events');\n        })\n        .finally(function () {\n          vm.wizard.loading = false;\n        })\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .controller('AccessController', AccessController);\n\n  /** @ngInject */\n  function AccessController(models, users) {\n    // User cached\n    if(models.currentUser && models.currentUser.userToken) {\n      users\n        .onLoggedIn(models.currentUser) // Treat the user as logged in\n        .catch(users.onLoggedOut);      // In case of error -> logout\n    }\n\n    // User not logged in and not cached\n    else {\n      users.onLoggedOut();\n    }\n  }\n})();\n\n'use strict';\n\nangular.module('frispo')\n  /**\n   * User models manager\n   */\n   .factory('users', function (frispoApi, errorManager, models, longTermMemory, resPipe, $state, $q, ezfb, $log, uiState, $timeout) {\n\n      var users = {\n        /**\n         * Register a new user\n         * @param  {Object} userData an object containing 'email' and 'password'\n         * @return {Promise}         a promise with the authentication data for the user\n         */\n        register: function (userData) {\n          return frispoApi\n            .register(userData)\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(function (res) {\n              res.email = userData.email;\n              return res;\n            })\n            .then(resPipe.camelize)\n            .then(resPipe.injectUserDefaults)\n            .then(resPipe.updateCurrentUser)\n            .then(resPipe.memorizeCurrentUser)\n            .catch(errorManager);\n        },\n\n        /**\n         * Login a user\n         * @param  {Object} userData an object containing 'email' and 'password'\n         * @return {Promise}         a promise with the authentication data for the user\n         */\n        login: function (userData) {\n          return frispoApi\n            .login(userData)\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(function (res) {\n              res.email = userData.email; // Add the email from the input as it's missing from the response\n              return res;\n            })\n            .then(resPipe.camelize)\n            .then(resPipe.injectUserDefaults)\n            .then(resPipe.updateCurrentUser)\n            .then(resPipe.memorizeCurrentUser)\n            .then(users.onLoggedIn)\n            .catch(errorManager);\n        },\n\n        /**\n         * Logout a user\n         * @param  {Object} userData an object containing the user data\n         * @return {Promise}          a promise that will be fullfilled after the logout\n         */\n        logout: function () {\n          if(models.currentUser && models.currentUser.userToken){\n            return frispoApi\n              .logout()\n              .then(function (res) {\n                $log.info('Frispo logout');\n                return res;\n              })\n              .catch(errorManager)\n              .finally(users.onLoggedOut)\n              .then(function () {\n                ezfb.logout();\n              });\n          }\n          return $q.resolve();\n        },\n\n        /**\n         * Login a user to frispo's server using the facebook login() response data\n         * @param  {Object} facebookData The object returned by the Facebook SDK after a succesful login\n         * @return {Promise}             A promise fulfilled with the authentication data for the user,\n         */\n        loginFacebook: function (facebookData) {\n          return frispoApi\n            .loginFacebook(facebookData)\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(resPipe.camelize)\n            .then(resPipe.injectUserDefaults)\n            .then(resPipe.updateCurrentUser)\n            .then(resPipe.memorizeCurrentUser)\n            .then(users.onLoggedIn)\n            .catch(errorManager);\n        },\n\n        /**\n         * Fetch all user info\n         */\n        info: function () {\n          var infoCalls = [\n            users.showPreferences(),\n            users.show()\n          ];\n          return $q.all(infoCalls);\n        },\n\n        /**\n         * Show basic  user info\n         */\n        show: function () {\n          return frispoApi\n            .showUser()\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(resPipe.camelize)\n            .then(resPipe.updateMergeCurrentUser)\n            .then(resPipe.memorizeCurrentUser)\n            .catch(errorManager);\n        },\n\n        /**\n         * Edit basic user info\n         */\n        update: function (userData) {\n          return frispoApi\n            .updateUser(userData)\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(resPipe.camelize)\n            .then(resPipe.updateMergeCurrentUser)\n            .then(resPipe.memorizeCurrentUser)\n            .catch(errorManager);\n        },\n\n        /**\n         * Get the preferences of the user\n         */\n        showPreferences: function () {\n          return frispoApi\n            .showPreferences()\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(resPipe.camelize)\n            .then(resPipe.updatePreferences)\n            .then(resPipe.memorizeCurrentUser)\n            .catch(errorManager);\n        },\n\n        /**\n         * This function is used as a callback whenever a user has been succesfully logged in\n         * @param  {Object} userData The object containing the user data\n         * @return {Object}          The same userData, useful for promise chaining\n         */\n        onLoggedIn: function (userData) {\n          if($state.current.name === 'main.access'){\n            $state.go('main.admin.events');\n          }\n          $log.info('Frispo login');\n          users.info();\n          uiState.loggedIn = true;\n          return $q.resolve(userData);\n        },\n\n        /**\n         * This function is used as a callback whenever a user has been succesfully logged out\n         */\n        onLoggedOut: function() {\n          models.reset();\n          longTermMemory.oblivion();\n          uiState.loggedIn = false;\n          if($state.current.name !== 'main.login' && $state.current.name !== 'main.register'){\n            $timeout(function () {\n              $state.go('main.login');\n            })\n          }\n        },\n\n        /**\n         * Backup user data and setup the anonymous user for testing purposes\n         */\n        setAnonymousUser: function (res) {\n          models.bkp =  {\n            uuid: models.currentUser.uuid,\n            accessToken: models.currentUser.accessToken\n          }\n          models.currentUser.uuid = 'anonimo';\n          models.currentUser.accessToken = '4e66c966e021918f0b088ddc929847f7'\n          return $q.resolve(res);\n        },\n\n        /**\n         * Restore user backup\n         */\n        unsetAnonymousUser: function (res) {\n          models.currentUser.uuid = models.bkp.uuid;\n          models.currentUser.accessToken = models.bkp.accessToken;\n          delete models.bkp;\n          return $q.resolve(res);\n        },\n\n        checkFacebookLogin: function () {\n          return ezfb\n            .getLoginStatus()\n            .then(function (res) {\n              if(res.status === 'connected'){\n                return res;\n              }\n              else{\n                return $q.reject(res);\n              }\n            });\n        },\n\n        /**\n         * Configure the facebook login and events\n         */\n        configureFacebookCallbacks: function (res) {\n          // Subscribe to FB login\n          ezfb.Event.subscribe('auth.login', function (response) {\n            $log.info('Facebook login');\n            users\n              .loginFacebook(response)\n              .then(function () {\n                $state.go('main.access');\n              });\n          });\n\n          // Subscribe to FB logout\n          ezfb.Event.subscribe('auth.logout', function () {\n            $log.info('Facebook logout');\n            if(uiState.loggedIn){\n              users.logout();\n            }\n          });\n\n\n          return res;\n        },\n\n        form2Team: function (formData) {\n          var userData = {};\n          if(angular.isDefined(formData.type)) userData.type = formData.type;\n          if(angular.isDefined(formData.subscription)) userData.subscription = formData.subscription;\n          return $q.resolve(userData);\n        }\n      };\n\n      return users;\n   });\n\n'use strict';\n\nangular.module('frispo')\n  /**\n   * Event models manager\n   */\n   .factory('teams', function (frispoApi, errorManager, resPipe, $q, models, utils) {\n\n      var teams = {\n        /**\n         * List the teams of the current event\n         */\n        list: function () {\n          return frispoApi\n            .listTeams(models.currentEvent.evenId)\n            .then(resPipe.parseResponse)\n            .then(resPipe.camelize)\n            .then(resPipe.updateTeams)\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager)\n        },\n\n        show: function (teamId) {\n          return frispoApi\n            .showTeam(models.currentEvent.evenId, teamId)\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(resPipe.camelize)\n            .then(resPipe.updateTeam)\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        create: function (team) {\n          return frispoApi\n            .createTeam(models.currentEvent.evenId, team)\n            .then(resPipe.parseResponse)\n            .catch(errorManager);\n        },\n\n        update: function (teamId, team) {\n          return frispoApi\n            .updateTeam(models.currentEvent.evenId, teamId, team)\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(resPipe.camelize)\n            .then(resPipe.updateTeam)\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        destroy: function (team) {\n          return frispoApi\n            .destroyTeam(models.currentEvent.evenId, team.teamId)\n            .then(resPipe.parseResponse)\n            .then(function () {\n              return team;\n            })\n            .then(resPipe.removeTeam)\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        /**\n         * Create a group of teams and add it to an event\n         */\n        addGroup: function (teamsData) {\n          return frispoApi\n            .addGroupTeams(models.currentEvent.evenId, teamsData)\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(resPipe.camelize)\n            .catch(errorManager);\n        },\n\n        listPlayers: function (teamId) {\n          return frispoApi\n            .listPlayers(teamId || models.currentEvent.currentTeam.teamId)\n            .then(resPipe.parseResponse)\n            .then(resPipe.camelize)\n            .then(resPipe.updatePlayers)\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        updatePlayer: function (playerId, playerData) {\n          return frispoApi\n            .updatePlayer(models.currentEvent.currentTeam.teamId, playerId, playerData)\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(resPipe.camelize)\n            .then(resPipe.updatePlayer)\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        createPlayer: function (playerData) {\n          return frispoApi\n            .createPlayer(models.currentEvent.currentTeam.teamId, playerData)\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(resPipe.camelize)\n            .then(resPipe.insertPlayer)\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        /**\n         * Translate data from a team form into an teamsData object\n         * @param  {Object} formData The form input\n         * @return {Promise}         A promise fulfilled with the teamsData object\n         */\n        form2Teams: function (formData) {\n          var teamsData = { extra: [] };\n          angular.forEach(formData.teams, function (team) {\n            teamsData.extra.push(teams.form2Team(team));\n          });\n          return $q.resolve(teamsData);\n        },\n\n        form2Team: function (formData) {\n          var teamData = {};\n          var teamTime = utils.str2Time(formData.time);\n          if(angular.isDefined(formData.captain)) teamData.team_captain = formData.captain;\n          if(angular.isDefined(teamTime)) teamData.team_time = teamTime;\n          if(angular.isDefined(formData.name)) teamData.team_name = formData.name;\n          if(angular.isDefined(formData.phone)) teamData.team_mobile_phone = formData.phone;\n          if(angular.isDefined(formData.place)) teamData.team_place = formData.place;\n          if(angular.isDefined(formData.round)) teamData.team_groups = formData.round;\n          if(angular.isDefined(formData.desc)) teamData.team_description = formData.desc;\n          return teamData;\n        },\n\n        form2Player: function (formData) {\n          var playerData = {};\n          if(angular.isDefined(formData.name)) playerData.player_name = formData.name;\n          if(angular.isDefined(formData.surname)) playerData.player_surname = formData.surname;\n          return $q.resolve(playerData);\n        }\n      };\n\n      return teams;\n   });\n\n'use strict';\n\nangular.module('frispo')\n  /**\n   * Event models manager\n   */\n   .factory('press', function (frispoApi, errorManager, resPipe, $q, models) {\n\n      var press = {\n        /**\n         * List the press of the current event\n         */\n        list: function () {\n          return frispoApi\n            .listPress(models.currentEvent.evenId)\n            .then(resPipe.parseResponse)\n            .then(resPipe.camelize)\n            .then(resPipe.injectPressDefaults)\n            .then(resPipe.updatePress)\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager)\n        },\n\n        show: function (pressId) {\n          return frispoApi\n            .showPress(models.currentEvent.evenId, pressId)\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(resPipe.camelize)\n            .then(resPipe.injectPressDefaults)\n            .then(resPipe.updatePress)\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        create: function (press) {\n          return frispoApi\n            .createPress(press)\n            .then(resPipe.parseResponse)\n            .catch(errorManager);\n        },\n        //\n        // update: function (pressId, press) {\n        //   return frispoApi\n        //     .updatePress(models.currentEvent.evenId, pressId, press)\n        //     .then(resPipe.parseResponse)\n        //     .then(resPipe.unwrapArray)\n        //     .then(resPipe.camelize)\n        //     .then(resPipe.updatePress)\n        //     .then(resPipe.memorizeCurrentEvent)\n        //     .then(resPipe.memorizeEvents)\n        //     .catch(errorManager);\n        // },\n\n        destroy: function (press) {\n          return frispoApi\n            .destroyPress(models.currentEvent.evenId, press.presId)\n            .then(resPipe.parseResponse)\n            .then(function () {\n              return press;\n            })\n            .then(resPipe.removePress)\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        form2Press: function (formData) {\n          var pressData = {};\n          if(angular.isDefined(formData.name)) pressData.press_name = formData.name;\n          if(angular.isDefined(formData.ranking)) pressData.press_ranking = formData.ranking.id;\n          if(angular.isDefined(formData.matches)) pressData.press_matches = formData.matches.id;\n          if(angular.isDefined(formData.scorers)) pressData.press_scorers = formData.scorers.id;\n          if(angular.isDefined(formData.yellowcards)) pressData.press_yellowcards = formData.yellowcards.id;\n          if(angular.isDefined(formData.diffide)) pressData.press_diffide = formData.diffide.id;\n          if(angular.isDefined(formData.squalifications)) pressData.press_squalifications = formData.squalifications.id;\n          if(angular.isDefined(formData.amends)) pressData.press_amends = formData.amends.id;\n          if(angular.isArray(formData.events)){\n            pressData.press_events = [];\n            angular.forEach(formData.events, function (event) {\n              pressData.press_events.push({\n                pres_even_id: ''+event.evenId\n              });\n            });\n          }\n          return pressData;\n        }\n      };\n\n      return press;\n   });\n\n'use strict';\n\nangular.module('frispo')\n  /**\n  * Models cache\n  */\n  .factory('models', function (longTermMemory) {\n\n    var models = {\n       reset: function () {\n         models.events = longTermMemory.remember('events') || [];\n         models.regions = longTermMemory.remember('regions') || [];\n         models.currentUser = longTermMemory.remember('currentUser') || {};\n         models.currentEvent = models.events.length>0 && longTermMemory.remember('currentEvent') || undefined;\n       }\n    };\n\n    models.reset();\n\n    return models;\n  });\n\n'use strict';\n\nangular.module('frispo')\n  /**\n   * Matches models manager\n   */\n   .factory('matches', function (frispoApi, errorManager, resPipe, models, utils, $q) {\n\n      var matches = {\n\n        /**\n         * Create a matches calendar for an event\n         */\n        createCalendar: function (eventId) {\n          return frispoApi\n            .createMatchesCalendar(eventId)\n            .catch(errorManager);\n        },\n\n        /**\n         * List the matches for a day of an event\n         */\n        list: function () {\n          return frispoApi\n            .listMatches(models.currentEvent.evenId, models.currentEvent.currentDay.matcDayId)\n            .then(resPipe.parseResponse)\n            .then(resPipe.camelize)\n            .then(resPipe.injectMatchDefaults)\n            .then(resPipe.updateMatches)\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        /**\n         * List the scorers of a match\n         */\n        listScorers: function (matchId) {\n          return frispoApi\n            .listMatchScorers(models.currentEvent.evenId, matchId)\n            .then(resPipe.parseResponse)\n            .then(resPipe.camelize)\n            .then(function (res) {\n              return resPipe.updateMatchScorers(matchId, res);\n            })\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        /**\n         * Create a scorer\n         */\n        createScorer: function (matchId, scorerData, scorersKey) {\n          return frispoApi\n            .createScorer(models.currentEvent.evenId, matchId, scorerData)\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(resPipe.camelize)\n            .then(function (res) {\n              resPipe.insertScorer(matchId, res, scorersKey);\n              return res;\n            })\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        /**\n         * Create a card\n         */\n        createCard: function (matchId, cardData, cardsKey) {\n          return frispoApi\n            .createCard(models.currentEvent.evenId, matchId, cardData)\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(resPipe.camelize)\n            .then(resPipe.injectCardsDefaults)\n            .then(function (res) {\n              resPipe.insertCard(matchId, res, cardsKey);\n              return res;\n            })\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        /**\n         * Destroy a scorer\n         */\n        destroyScorer: function (matchId, playerId, scorersKey) {\n          return frispoApi.destroyScorerMatch(models.currentEvent.evenId, playerId, matchId)\n            .then(resPipe.parseResponse)\n            .then(function () {\n              return resPipe.removeScorer(matchId, playerId, scorersKey);\n            })\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        /**\n         * Destroy a card\n         */\n        destroyMatchCard: function (matchId, cardId, cardsKey) {\n          return frispoApi.destroyCard(models.currentEvent.evenId, matchId, cardId)\n            .then(resPipe.parseResponse)\n            .then(function () {\n              return resPipe.removeMatchCard(matchId, cardId, cardsKey);\n            })\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        /**\n         * Destroy a card\n         */\n        destroyEventCard: function (matchId, playerId, cardId, cardsKey, cardMatchKey) {\n          return frispoApi\n            .destroyCard(models.currentEvent.evenId, matchId, cardId)\n            .then(resPipe.parseResponse)\n            .then(function () {\n              return resPipe.removeEventCard(matchId, playerId, cardId, cardsKey, cardMatchKey);\n            })\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        /**\n         * Update a card\n         */\n        updateEventCard: function (matchId, playerId, cardId, cardsKey, cardMatchKey, cardData) {\n          return frispoApi\n            .updateCard(models.currentEvent.evenId, matchId, cardId, cardData)\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(resPipe.camelize)\n            .then(resPipe.injectCardsDefaults)\n            .then(function (res) {\n              return resPipe.updateEventCard(matchId, playerId, cardId, cardsKey, cardMatchKey, res);\n            })\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        /**\n         * Update a match\n         */\n        update: function (matchDayId, matchData) {\n          return frispoApi\n            .updateMatch(models.currentEvent.evenId, matchData)\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(resPipe.camelize)\n            .then(resPipe.injectMatchDefaults)\n            .then(function (res) {\n              res.matcDayId = matchDayId; // Inject the match day ID, as the server returns 0\n              return res;\n            })\n            .then(resPipe.updateMatch)\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        /**\n         * Create a match\n         */\n        create: function (matchData) {\n          return frispoApi\n            .createMatch(models.currentEvent.evenId, models.currentEvent.currentDay.matcDayId, matchData)\n            .then(resPipe.parseResponse)\n            .then(resPipe.log)\n            .catch(errorManager);\n        },\n\n        /**\n         * Create a match day\n         */\n        createDay: function (dayData) {\n          return frispoApi\n            .createDay(models.currentEvent.evenId, dayData)\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(resPipe.camelize)\n            .then(resPipe.insertMatchDay)\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        /**\n         * Destroy a match\n         */\n        destroy: function (matchData) {\n          return frispoApi\n            .destroyMatch(models.currentEvent.evenId, models.currentEvent.currentDay.matcDayId, matchData.matcId)\n            .then(resPipe.parseResponse)\n            .then(function () {\n              return matchData;\n            })\n            .then(resPipe.removeMatch)\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        /**\n         * Show a match\n         */\n         show: function (matchId) {\n           return frispoApi\n            .showMatch(models.currentEvent.evenId, matchId)\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(resPipe.camelize)\n            .then(resPipe.updateMatch)\n            .then(resPipe.injectMatchDefaults)\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n         },\n\n         /**\n          * Translate data from a match form into a matchData object\n          * @param  {Object} formData The form input\n          * @return {Promise}         A promise fulfilled with the matchData object\n          */\n         form2Match: function (formData) {\n           var matchData = {};\n           var matchTime = utils.str2Time(formData.time);\n           var matchDate = utils.str2Date(formData.date);\n           if(angular.isDefined(formData.matchId)) matchData.matc_id = formData.matchId;\n           if(formData.teamA && angular.isDefined(formData.teamA.teamId)) matchData.matc_team_id_a = formData.teamA.teamId;\n           if(formData.teamB && angular.isDefined(formData.teamB.teamId)) matchData.matc_team_id_b = formData.teamB.teamId;\n           if(angular.isDefined(formData.scoreA)) matchData.matc_goal_team_a = formData.scoreA;\n           if(angular.isDefined(formData.scoreB)) matchData.matc_goal_team_b = formData.scoreB;\n           if(angular.isString(formData.dateExpected)) matchData.matc_date_expected = formData.dateExpected;\n           if(angular.isString(matchDate)) matchData.matc_date_match = matchDate;\n           if(angular.isString(matchTime)) matchData.matc_time = matchTime;\n           if(angular.isString(formData.address)) matchData.matc_address = formData.address;\n           if(angular.isString(formData.round)) matchData.matc_name_groups = formData.round;\n           if(formData.played && angular.isDefined(formData.played.value)) matchData.matc_flg_play = formData.played.value;\n           if(angular.isDefined(formData.shootoutA)) matchData.matc_shootout_team_a = formData.shootoutA;\n           if(angular.isDefined(formData.shootoutB)) matchData.matc_shootout_team_b = formData.shootoutB;\n           if(angular.isString(formData.place)) matchData.matc_place = formData.place;\n           return $q.resolve(matchData);\n         },\n\n         /**\n          * Translate data from a scorer form into a scorerData object\n          * @param  {Object} formData The form input\n          * @return {Promise}         A promise fulfilled with the scorerData object\n          */\n         form2Scorer: function (formData) {\n           var scorerData = {};\n           if(angular.isDefined(formData.teamId)) scorerData.team_id = ''+formData.teamId;\n           if(angular.isDefined(formData.playId)) scorerData.play_id = ''+formData.playId;\n           else scorerData.play_id = '0';\n           if(angular.isDefined(formData.goals)) scorerData.goal = formData.goals;\n           if(angular.isDefined(formData.name)) scorerData.play_name = formData.name;\n           if(angular.isDefined(formData.surname)) scorerData.play_surname = formData.surname;\n           return $q.resolve(scorerData);\n         },\n\n         /**\n          * Translate data from a card form into a card object\n          * @param  {Object} formData The form input\n          * @return {Promise}         A promise fulfilled with the cardData object\n          */\n         form2CardMatch: function (formData) {\n           var cardData = {};\n           if(angular.isDefined(formData.playId)) cardData.play_id = formData.playId;\n           if(angular.isDefined(formData.typeSqualifications)) cardData.flg_cards = formData.typeSqualifications.value;\n           if(angular.isDefined(formData.daySqualifications)) cardData.day_squalification = formData.daySqualifications.value;\n           if(angular.isDefined(formData.note)) cardData.note = formData.note;\n           if(angular.isDefined(formData.squalificationStatus)) cardData.squalification_status = formData.squalificationStatus.value;\n           return $q.resolve(cardData);\n         },\n\n         /**\n          * Translate data from a card form into a cardData object\n          * @param  {Object} formData The form input\n          * @return {Promise}         A promise fulfilled with the cardData object\n          */\n         form2Card: function (formData) {\n           var cardData = {};\n           if(angular.isDefined(formData.teamId)) cardData.team_id = ''+formData.teamId;\n           if(angular.isDefined(formData.playId)) cardData.play_id = ''+formData.playId;\n           else cardData.play_id = '0';\n           if(angular.isDefined(formData.cardType) && angular.isDefined(formData.cardType.id)) cardData.flg_cards = ''+formData.cardType.id;\n           if(angular.isDefined(formData.disqualificationDays)) cardData.day_squalification = ''+formData.disqualificationDays;\n           if(angular.isDefined(formData.note)) cardData.note = ''+formData.note;\n           if(angular.isDefined(formData.name)) cardData.play_name = ''+formData.name;\n           if(angular.isDefined(formData.surname)) cardData.play_surname = ''+formData.surname;\n           return $q.resolve(cardData);\n         },\n\n         /**\n          * Translate data from a Day form into an dayData object\n          * @param  {Object} formData The form input\n          * @return {Promise}         A promise fulfilled with the dayData object\n          */\n          form2Day: function (formData) {\n           var dayData = {};\n           if(angular.isDefined(formData.name)) dayData.mada_name = formData.name;\n           if(angular.isDefined(formData.desc)) dayData.mada_description = formData.desc;\n           return $q.resolve(dayData);\n         }\n      };\n\n      return matches;\n   });\n\n'use strict';\n\nangular.module('frispo')\n  /**\n   * Event models manager\n   */\n   .factory('invitations', function (frispoApi, errorManager, resPipe, models) {\n\n      var invitations = {\n        /**\n         * List the invitations sent by current user\n         */\n        listSent: function () {\n          return frispoApi\n            .listSentInvitations()\n            .then(resPipe.parseResponse)\n            .then(resPipe.camelize)\n            .then(resPipe.injectInvitationsDefaults)\n            .then(resPipe.updateSentInvitations)\n            .then(resPipe.memorizeCurrentUser)\n            .catch(errorManager);\n        },\n\n        /**\n         * List the invitations sent by current user\n         */\n        listReceived: function () {\n          return frispoApi\n            .listReceivedInvitations()\n            .then(resPipe.parseResponse)\n            .then(resPipe.camelize)\n            .then(resPipe.injectInvitationsDefaults)\n            .then(resPipe.updateReceivedInvitations)\n            .then(resPipe.memorizeCurrentUser)\n            .catch(errorManager);\n        },\n\n        create: function (invitationData) {\n          return frispoApi\n            .createInvitation(invitationData)\n            .then(resPipe.parseResponse)\n            .catch(errorManager);\n        },\n\n        destroy: function (invitationData) {\n          var invModel = {\n            invitation_id: '' + invitationData.invitationId,\n            mail_guest: invitationData.mailGuest,\n            even_id: invitationData.evenId,\n            status: '3' // status: 3 -> cancellato\n          }\n          return frispoApi\n            .updateInvitation(invModel)\n            .then(resPipe.parseResponse)\n            .catch(errorManager);\n        },\n\n        accept: function (invitationData) {\n          var invModel = {\n            invitation_id: '' + invitationData.invitationId,\n            mail_guest: invitationData.mailGuest,\n            even_id: invitationData.evenId,\n            status: '1' // status: 1 -> accettato\n          }\n          return frispoApi\n            .updateInvitation(invModel)\n            .then(resPipe.parseResponse)\n            .catch(errorManager);\n        },\n\n        decline: function (invitationData) {\n          var invModel = {\n            invitation_id: '' + invitationData.invitationId,\n            mail_guest: invitationData.mailGuest,\n            even_id: invitationData.evenId,\n            status: '2' // status: 2 -> rifiutato\n          }\n          return frispoApi\n            .updateInvitation(invModel)\n            .then(resPipe.parseResponse)\n            .catch(errorManager);\n        },\n\n        form2Invitation: function (formData) {\n          var invitationData = {};\n          if(angular.isArray(formData.events) && angular.isDefined(formData.guestEmail)){\n            invitationData.extra = [];\n            angular.forEach(formData.events, function (event) {\n              invitationData.extra.push({\n                mail_invitingmember: models.currentUser.email,\n                mail_guest: formData.guestEmail,\n                even_id: event.evenId\n              })\n            });\n          }\n          return invitationData;\n        }\n\n        // show: function (invitationId) {\n        //   return frispoApi\n        //     .showTeam(models.currentEvent.evenId, invitationId)\n        //     .then(resPipe.parseResponse)\n        //     .then(resPipe.unwrapArray)\n        //     .then(resPipe.camelize)\n        //     .then(resPipe.updateTeam)\n        //     .then(resPipe.memorizeCurrentEvent)\n        //     .then(resPipe.memorizeEvents)\n        //     .catch(errorManager);\n        // },\n        //\n        // create: function (invitation) {\n        //   return frispoApi\n        //     .createTeam(models.currentEvent.evenId, invitation)\n        //     .then(resPipe.parseResponse)\n        //     .catch(errorManager);\n        // },\n        //\n        // update: function (invitationId, invitation) {\n        //   return frispoApi\n        //     .updateTeam(models.currentEvent.evenId, invitationId, invitation)\n        //     .then(resPipe.parseResponse)\n        //     .then(resPipe.unwrapArray)\n        //     .then(resPipe.camelize)\n        //     .then(resPipe.updateTeam)\n        //     .then(resPipe.memorizeCurrentEvent)\n        //     .then(resPipe.memorizeEvents)\n        //     .catch(errorManager);\n        // },\n        //\n        // destroy: function (invitation) {\n        //   return frispoApi\n        //     .destroyTeam(models.currentEvent.evenId, invitation.invitationId)\n        //     .then(resPipe.parseResponse)\n        //     .then(function () {\n        //       return invitation;\n        //     })\n        //     .then(resPipe.removeTeam)\n        //     .then(resPipe.memorizeCurrentEvent)\n        //     .then(resPipe.memorizeEvents)\n        //     .catch(errorManager);\n        // },\n        //\n        // /**\n        //  * Create a group of invitations and add it to an event\n        //  */\n        // addGroup: function (invitationsData) {\n        //   return frispoApi\n        //     .addGroupTeams(models.currentEvent.evenId, invitationsData)\n        //     .then(resPipe.parseResponse)\n        //     .then(resPipe.unwrapArray)\n        //     .then(resPipe.camelize)\n        //     .catch(errorManager);\n        // },\n        //\n        // listPlayers: function (invitationId) {\n        //   return frispoApi\n        //     .listPlayers(invitationId || models.currentEvent.currentTeam.invitationId)\n        //     .then(resPipe.parseResponse)\n        //     .then(resPipe.camelize)\n        //     .then(resPipe.updatePlayers)\n        //     .then(resPipe.memorizeCurrentEvent)\n        //     .then(resPipe.memorizeEvents)\n        //     .catch(errorManager);\n        // },\n        //\n        // updatePlayer: function (playerId, playerData) {\n        //   return frispoApi\n        //     .updatePlayer(models.currentEvent.currentTeam.invitationId, playerId, playerData)\n        //     .then(resPipe.parseResponse)\n        //     .then(resPipe.unwrapArray)\n        //     .then(resPipe.camelize)\n        //     .then(resPipe.updatePlayer)\n        //     .then(resPipe.memorizeCurrentEvent)\n        //     .then(resPipe.memorizeEvents)\n        //     .catch(errorManager);\n        // },\n        //\n        // createPlayer: function (playerData) {\n        //   return frispoApi\n        //     .createPlayer(models.currentEvent.currentTeam.invitationId, playerData)\n        //     .then(resPipe.parseResponse)\n        //     .then(resPipe.unwrapArray)\n        //     .then(resPipe.camelize)\n        //     .then(resPipe.insertPlayer)\n        //     .then(resPipe.memorizeCurrentEvent)\n        //     .then(resPipe.memorizeEvents)\n        //     .catch(errorManager);\n        // },\n        //\n        // /**\n        //  * Translate data from a invitation form into an invitationsData object\n        //  * @param  {Object} formData The form input\n        //  * @return {Promise}         A promise fulfilled with the invitationsData object\n        //  */\n        // form2Teams: function (formData) {\n        //   var invitationsData = { extra: [] };\n        //   angular.forEach(formData.invitations, function (invitation) {\n        //     invitationsData.extra.push(invitations.form2Team(invitation));\n        //   });\n        //   return $q.resolve(invitationsData);\n        // },\n        //\n        // form2Team: function (formData) {\n        //   var invitationData = {};\n        //   var invitationTime = utils.str2Time(formData.time);\n        //   if(angular.isDefined(formData.captain)) invitationData.invitation_captain = formData.captain;\n        //   if(angular.isDefined(invitationTime)) invitationData.invitation_time = invitationTime;\n        //   if(angular.isDefined(formData.name)) invitationData.invitation_name = formData.name;\n        //   if(angular.isDefined(formData.phone)) invitationData.invitation_mobile_phone = formData.phone;\n        //   if(angular.isDefined(formData.place)) invitationData.invitation_place = formData.place;\n        //   if(angular.isDefined(formData.round)) invitationData.invitation_groups = formData.round;\n        //   if(angular.isDefined(formData.desc)) invitationData.invitation_description = formData.desc;\n        //   return invitationData;\n        // },\n        //\n        // form2Player: function (formData) {\n        //   var playerData = {};\n        //   if(angular.isDefined(formData.name)) playerData.player_name = formData.name;\n        //   if(angular.isDefined(formData.surname)) playerData.player_surname = formData.surname;\n        //   return $q.resolve(playerData);\n        // }\n      };\n\n      return invitations;\n   });\n\n'use strict';\n\nangular.module('frispo')\n  /**\n   * Event models manager\n   */\n   .factory('events', function (frispoApi, errorManager, resPipe, $q, utils) {\n\n      var events = {\n        /**\n         * Show all events\n         */\n         list: function () {\n          return frispoApi\n            .listEvents()\n            .then(resPipe.parseResponse)\n            .then(resPipe.camelize)\n            .then(resPipe.injectEventsDefaults)\n            .then(resPipe.updateEvents)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        /**\n         * Show all events managed by a user\n         */\n        listManaged: function () {\n          return frispoApi\n            .listManagedEvents()\n            .then(resPipe.parseResponse)\n            .then(resPipe.camelize)\n            .then(resPipe.injectEventsDefaults)\n            .then(resPipe.updateManagedEvents)\n            .then(resPipe.memorizeCurrentUser)\n            .catch(errorManager);\n        },\n\n        /**\n         * Create a new event\n         */\n        create: function (eventData) {\n          return frispoApi\n            .createEvent(eventData)\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(resPipe.camelize)\n            .then(resPipe.injectEventsDefaults)\n            .then(resPipe.updateCurrentEvent)\n            .then(resPipe.memorizeCurrentEvent)\n            .catch(errorManager);\n        },\n\n        /**\n         * Show an event\n         */\n        show: function (eventId) {\n          return frispoApi\n            .showEvent(eventId)\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(resPipe.camelize)\n            .then(resPipe.injectEventsDefaults)\n            .then(resPipe.updateCurrentEvent)\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        /**\n         * Show the scoreboard of an event\n         */\n        showScoreboard: function (event) {\n          var apiCall;\n          // Torneo a gironi\n          if(event.evenType === 1){\n            apiCall = frispoApi.showTournamentScoreboard(event.evenId);\n          }\n          else{\n            apiCall = frispoApi.showEventScoreboard(event.evenId);\n          }\n          return apiCall\n            .then(resPipe.parseResponse)\n            .then(resPipe.camelize)\n            .then(resPipe.updateScoreboard)\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        /**\n         * Show the scorers of an event\n         */\n        showScorers: function (eventId) {\n          return frispoApi.showScorers(eventId)\n            .then(resPipe.parseResponse)\n            .then(resPipe.camelize)\n            .then(resPipe.updateScorers)\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        destroyScorerMatch: function (eventId, playerId, scorerMatch) {\n          return frispoApi.destroyScorerMatch(eventId, playerId, scorerMatch.matcId)\n            .then(resPipe.parseResponse)\n            .then(function () {\n              return resPipe.removeScorerMatch(playerId, scorerMatch);\n            })\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        updateScorerMatch: function (eventId, matchId, scorerMatchData) {\n          return frispoApi.updateScorerMatch(eventId, matchId, scorerMatchData)\n            .then(resPipe.parseResponse)\n            .then(function () { // Mock a response\n              return {\n                matcId: matchId,\n                matcScorerGoal: scorerMatchData.scor_goal\n              };\n            })\n            .then(function (res) {\n              return resPipe.updateScorerMatch(scorerMatchData.scor_play_id, res);\n            })\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        /**\n         * Destroy an event\n         */\n        destroy: function (event) {\n          return frispoApi\n            .destroyEvent(event)\n            .then(resPipe.parseResponse)\n            .then(function () {\n              return event;\n            })\n            .then(resPipe.removeEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager)\n        },\n\n        /**\n         * Update an event\n         */\n        update: function (eventId, eventData) {\n          return frispoApi\n            .updateEvent(eventId, eventData)\n            .then(resPipe.parseResponse)\n            .then(resPipe.unwrapArray)\n            .then(resPipe.camelize)\n            .then(resPipe.injectEventsDefaults)\n            .then(resPipe.updateCurrentEvent)\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .catch(errorManager);\n        },\n\n        /**\n        * List the active regions\n        */\n        listRegions: function () {\n          return frispoApi\n            .listRegions()\n            .then(resPipe.parseResponse)\n            .then(resPipe.camelize)\n            .then(resPipe.updateRegions)\n            .then(resPipe.memorizeRegions)\n            .catch(errorManager);\n        },\n\n        /**\n         * List the yellow cards for the event\n         */\n        listYellows: function (eventId) {\n          return frispoApi\n            .listYellowCards(eventId)\n            .then(resPipe.parseResponse)\n            .then(resPipe.camelize)\n            .then(resPipe.injectEventCardsDefaults)\n            .then(resPipe.updateYellows)\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .then(resPipe.log)\n            .catch(errorManager)\n        },\n\n        /**\n         * List the diffides for the event\n         */\n        listDiffides: function (eventId) {\n          return frispoApi\n            .listDiffides(eventId)\n            .then(resPipe.parseResponse)\n            .then(resPipe.camelize)\n            .then(resPipe.injectEventCardsDefaults)\n            .then(resPipe.updateDiffides)\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .then(resPipe.log)\n            .catch(errorManager)\n        },\n\n        /**\n         * List the squalifications for the event\n         */\n        listSqualifications: function (eventId) {\n          return frispoApi\n            .listSqualifications(eventId)\n            .then(resPipe.parseResponse)\n            .then(resPipe.camelize)\n            .then(resPipe.injectEventCardsDefaults)\n            .then(resPipe.updateSqualifications)\n            .then(resPipe.memorizeCurrentEvent)\n            .then(resPipe.memorizeEvents)\n            .then(resPipe.log)\n            .catch(errorManager)\n        },\n\n        /**\n         * Translate data from an event form into an eventData object\n         * @param  {Object} formData The form input\n         * @return {Promise}         A promise fulfilled with the eventData object\n         */\n        form2Event: function (formData) {\n          var eventData = {};\n          var dateRange = utils.str2Date(formData.dates);\n          if(angular.isDefined(formData.name)) eventData.even_name = formData.name;\n          if(angular.isDefined(formData.desc)) eventData.even_description = formData.desc;\n          if(angular.isDefined(formData.email)) eventData.even_email = formData.email;\n          if(angular.isDefined(formData.address)) eventData.even_address = formData.address;\n          if(angular.isDefined(formData.type)) eventData.even_type = '' + formData.type;\n          if(angular.isDefined(formData.organizer)) eventData.even_organize_by = formData.organizer;\n          if(angular.isDefined(formData.formula)) eventData.even_formula = '' + formData.formula;\n          if(angular.isDefined(formData.telephone)) eventData.even_mobile_phone = formData.telephone;\n          if(angular.isDefined(formData.yellowPoints)) eventData.even_yellow_points = formData.yellowPoints;\n          if(angular.isDefined(formData.redPoints)) eventData.even_red_points = formData.redPoints;\n          if(angular.isDefined(formData.yellowDiffide)) eventData.even_yellow_diffide = formData.yellowDiffide;\n          if(angular.isDefined(formData.yellowDiffide2)) eventData.even_yellow_diffide2 = formData.yellowDiffide2;\n          if(angular.isArray(dateRange) && dateRange.length > 0 && dateRange[0]) eventData.even_date_start = dateRange[0];\n          if(angular.isArray(dateRange) && dateRange.length > 1 && dateRange[1]) eventData.even_date_end = dateRange[1];\n          if(formData.region && formData.region.regiId) eventData.regi_id = formData.region.regiId;\n          // TODO: remove this line: it's a mock\n          else eventData.regi_id = 1;\n          if(formData.currentDay && formData.currentDay.matcDayId) eventData.even_day_active = formData.currentDay.matcDayId;\n          return $q.resolve(eventData);\n        }\n\n      };\n\n      return events;\n   });\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .run(runBlock);\n\n  /** @ngInject */\n  function runBlock(\n    $rootScope,\n    uiState,\n    defaultBodyClasses,\n    models,\n    users\n  ) {\n      // Bind the uiState to $rootScope as it's used in index.html\n      $rootScope.uiState = uiState;\n\n      // On state change\n      var stateChangeSuccess = $rootScope.$on('$stateChangeSuccess', function (event, toState) {\n        var pms = toState.params || {};\n        uiState.bodyClasses = pms.bodyClasses || defaultBodyClasses;\n      });\n\n      // Update user info (if logged in)\n      if(models.currentUser && models.currentUser.userToken){\n        users.info();\n      }\n\n      // Destroy watchers\n      $rootScope.$on('$destroy', function() {\n        stateChangeSuccess();\n      });\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .config(routerConfig);\n\n  /** @ngInject */\n  function routerConfig($stateProvider, $urlRouterProvider) {\n    var requireLoggedIn = function ($timeout, $state, models) {\n      if(!models.currentUser || !models.currentUser.userToken){\n        $timeout(function() {\n          $state.go('main.access');\n        });\n      }\n    };\n\n    $stateProvider\n      .state('main', {\n        abstract: true,\n        templateUrl: 'app/pages/main/main.html'\n      })\n      .state('main.admin', {\n        abstract: true,\n        templateUrl: 'app/pages/admin/admin.html',\n        onEnter: requireLoggedIn\n      })\n      .state('main.access', {\n        url: '/',\n        templateUrl: 'app/pages/access/access.html',\n        controller: 'AccessController',\n        controllerAs: 'vm'\n      })\n      .state('main.admin.profile', {\n        url: '/profile',\n        templateUrl: 'app/pages/profile/profile.html',\n        controller: 'ProfileController',\n        controllerAs: 'vm',\n        onEnter: requireLoggedIn\n      })\n      .state('main.admin.createEvent', {\n        url: '/create-event',\n        templateUrl: 'app/pages/createEvent/createEvent.html',\n        controller: 'CreateEventController',\n        controllerAs: 'vm',\n        onEnter: requireLoggedIn\n      })\n      .state('main.admin.events', {\n        url: '/events',\n        templateUrl: 'app/pages/events/events.html',\n        controller: 'EventsController',\n        controllerAs: 'vm',\n        onEnter: requireLoggedIn\n      })\n      .state('main.admin.teams', {\n        url: '/teams',\n        templateUrl: 'app/pages/teams/teams.html',\n        controller: 'TeamsController',\n        controllerAs: 'vm',\n        onEnter: requireLoggedIn\n      })\n      .state('main.admin.players', {\n        url: '/players',\n        templateUrl: 'app/pages/players/players.html',\n        controller: 'PlayersController',\n        controllerAs: 'vm',\n        onEnter: requireLoggedIn\n      })\n      .state('main.admin.calendar', {\n        url: '/calendar',\n        templateUrl: 'app/pages/calendar/calendar.html',\n        controller: 'CalendarController',\n        controllerAs: 'vm',\n        onEnter: requireLoggedIn\n      })\n      .state('main.admin.scoreboard', {\n        url: '/scoreboard',\n        templateUrl: 'app/pages/scoreboard/scoreboard.html',\n        controller: 'ScoreboardController',\n        controllerAs: 'vm',\n        onEnter: requireLoggedIn\n      })\n      .state('main.admin.scorers', {\n        url: '/scorers',\n        templateUrl: 'app/pages/scorers/scorers.html',\n        controller: 'ScorersController',\n        controllerAs: 'vm',\n        onEnter: requireLoggedIn\n      })\n      .state('main.admin.press', {\n        url: '/press',\n        templateUrl: 'app/pages/press/press.html',\n        controller: 'PressController',\n        controllerAs: 'vm',\n        onEnter: requireLoggedIn\n      })\n      .state('main.admin.invitations', {\n        url: '/invitations',\n        templateUrl: 'app/pages/invitations/invitations.html',\n        controller: 'InvitationsController',\n        controllerAs: 'vm',\n        onEnter: requireLoggedIn\n      })\n      .state('main.admin.disciplinary', {\n        url: '/disciplinary',\n        templateUrl: 'app/pages/disciplinary/disciplinary.html',\n        controller: 'DisciplinaryController',\n        controllerAs: 'vm',\n        onEnter: requireLoggedIn\n      })\n      .state('main.admin.managerEvents', {\n        url: '/manager-events',\n        templateUrl: 'app/pages/managerEvents/managerEvents.html',\n        controller: 'ManagerEventsController',\n        controllerAs: 'vm',\n        onEnter: requireLoggedIn\n      })\n      .state('main.admin.managerMatches', {\n        url: '/manager-matches',\n        templateUrl: 'app/pages/managerMatches/managerMatches.html',\n        controller: 'ManagerMatchesController',\n        controllerAs: 'vm',\n        onEnter: requireLoggedIn\n      })\n      .state('main.login', {\n        url: '/login',\n        templateUrl: 'app/pages/login/login.html',\n        controller: 'LoginController',\n        controllerAs: 'vm',\n        params: {\n          bodyClasses: 'hold-transition login-page'\n        },\n        onEnter: function ($timeout, $state, uiState) {\n          if(uiState.loggedIn){\n            $timeout(function () {\n              $state.go('main.access');\n            })\n          }\n        }\n      })\n      .state('main.register', {\n        url: '/register',\n        templateUrl: 'app/pages/register/register.html',\n        controller: 'RegisterController',\n        controllerAs: 'vm',\n        params: {\n          bodyClasses: 'hold-transition register-page'\n        },\n        onEnter: function ($timeout, $state, uiState) {\n          if(uiState.loggedIn){\n            $timeout(function () {\n              $state.go('main.access');\n            })\n          }\n        }\n      })\n      .state('main.logout', {\n        url: '/logout',\n        onEnter: function($timeout, users) {\n          $timeout(function () {\n            users.logout();\n          })\n        }\n      });\n    $urlRouterProvider.otherwise('/');\n  }\n\n})();\n\n/* global malarkey:false, moment:false */\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .constant('malarkey', malarkey)\n    .constant('moment', moment)\n    .constant('defaultBodyClasses', 'skin-green fixed sidebar-mini')\n    .constant('provisioningApiUrl', 'https://api.frispo.it/api/provisioning/1.0.0/frispo/base/0/users')\n    .constant('eventsApiUrl', 'https://api.frispo.it/api/events/1.0.0/frispo/base/0')\n    .constant('teamsApiUrl', 'https://api.frispo.it/api/teams/1.0.0/football/base/0')\n    .constant('pressApiUrl', 'https://api.frispo.it/api/press/1.0.0/frispo/base/0')\n    .constant('matchesApiUrl', 'https://api.frispo.it/api/matches/1.0.0/football/base/0')\n    .constant('cardsApiUrl', 'https://api.frispo.it/api/cards/1.0.0/football/base/0')\n    .constant('scorersApiUrl', 'https://api.frispo.it/api/scorers/1.0.0/football/base/0')\n    .constant('rankingApiUrl', 'https://api.frispo.it/api/ranking/1.0.0/football/base/0')\n    .constant('userApiUrl', 'https://api.frispo.it/api/users/1.0.0/frispo/base/0')\n    .constant('authorization', 'Bearer 384d9a07-2c10-3999-9053-74778a0102dd')\n    .constant('anonymousToken', 'CE6B7FD1B38E8395A382A715A6162web');\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('frispo')\n    .config(config);\n\n  /** @ngInject */\n  function config($logProvider, toastrConfig, $animateProvider, $locationProvider, ezfbProvider) {\n    // Enable log\n    $logProvider.debugEnabled(true);\n\n    // Animate only elements with class \"animate\"\n    $animateProvider.classNameFilter(/animate/);\n\n    // Set options for toastr\n    toastrConfig.allowHtml = true;\n    toastrConfig.timeOut = 10000;\n    toastrConfig.positionClass = 'toast-top-center';\n    toastrConfig.preventDuplicates = true;\n    toastrConfig.progressBar = false;\n\n    //Removes '#' from the URL\n    $locationProvider.html5Mode(true);\n    $locationProvider.hashPrefix('!');\n\n    // Configure facebook\n    ezfbProvider.setLocale('it_IT');\n    ezfbProvider.setInitParams({\n      appId: '1025958327498737'\n    });\n  }\n\n})();\n\nangular.module(\"frispo\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/components/frispoFooter/frispoFooter.html\",\"<footer class=main-footer><div class=\\\"pull-right hidden-xs\\\"><b>Version</b> 1.0.0</div><strong>Copyright © 2014-2016 <a href=http://andreaciaccia.it>Andrea Ciaccia</a>.</strong> All rights reserved.</footer>\");\n$templateCache.put(\"app/components/frispoHeader/frispoHeader.html\",\"<header class=\\\"main-header frispo-header\\\"><a ui-sref=main.admin.events class=logo><!-- mini logo for sidebar mini 50x50 pixels --> <span class=logo-mini><img src=/assets/images/logo-64.png></span><!-- logo for regular state and mobile devices --> <span class=logo-lg><img src=/assets/images/logo-title-64.png></span></a><nav class=\\\"navbar navbar-static-top\\\" role=navigation><!-- Sidebar toggle button--> <a href=# class=sidebar-toggle data-toggle=offcanvas role=button><span class=sr-only>Toggle navigation</span> </a><!-- Navbar Right Menu --><div class=navbar-custom-menu><ul class=\\\"nav navbar-nav\\\"><li class=\\\"dropdown user user-menu\\\"><a href=# class=dropdown-toggle data-toggle=dropdown aria-expanded=false><span class=hidden-xs>{{ header.models.currentUser.displayName }}</span></a><ul class=dropdown-menu><!-- User image --><li class=user-header><img src=\\\"{{ header.models.currentUser.image || \\'/assets/images/logo-64.png\\' }}\\\" ng-class=\\\"{\\'default-user-img\\': !header.models.currentUser.image}\\\" class=img-circle alt=\\\"User Image\\\"><p>{{ header.models.currentUser.displayName }}</p></li><!-- Menu Footer--><li class=user-footer><div class=pull-left><a ui-sref=main.admin.profile class=\\\"btn btn-default btn-flat\\\">Profile</a></div><div class=pull-right><a ui-sref=main.logout class=\\\"btn btn-default btn-flat\\\">Sign out</a></div></li></ul></li></ul></div></nav></header>\");\n$templateCache.put(\"app/components/frispoSidebar/frispoSidebar.html\",\"<div class=main-sidebar><!-- Inner sidebar --><div class=sidebar><!-- Sidebar Menu --><ul class=sidebar-menu><!-- SECTION Main Menu --><li class=header>Main Menu</li><!-- Eventi --><li class=treeview><a href=#><i class=\\\"fa fa-star\\\"></i> <span>Eventi</span> <i class=\\\"fa fa-angle-left pull-right\\\"></i></a><ul class=\\\"treeview-menu menu-open\\\" style=\\\"display: block\\\"><!-- Crea Evento --><li ng-class=\\\"{active: sidebar.state.current.name === \\'main.admin.createEvent\\'}\\\"><a ui-sref=main.admin.createEvent><i class=\\\"fa fa-circle-o\\\"></i> Crea evento</a></li><!-- Visualizza Eventi --><li ng-class=\\\"{active: sidebar.state.current.name === \\'main.admin.events\\'}\\\"><a ui-sref=main.admin.events><i class=\\\"fa fa-circle-o\\\"></i> Visualizza eventi</a></li></ul></li><!-- !Eventi --><!-- Squadre & Giocatori --><li class=treeview><a href=#><i class=\\\"fa fa-futbol-o\\\" aria-hidden=true></i> <span>Squadre &amp; Giocatori</span> <i class=\\\"fa fa-angle-left pull-right\\\"></i></a><ul class=\\\"treeview-menu menu-open\\\" style=\\\"display: block\\\"><!-- Squadre --><li ng-class=\\\"{active: sidebar.state.current.name === \\'main.admin.teams\\'}\\\"><a ui-sref=main.admin.teams><i class=\\\"fa fa-circle-o\\\"></i> Squadre</a></li><!-- Giocatori --><li ng-class=\\\"{active: sidebar.state.current.name === \\'main.admin.players\\'}\\\"><a ui-sref=main.admin.players><i class=\\\"fa fa-circle-o\\\"></i> Giocatori</a></li></ul></li><!-- !Squadre & Giocatori --><!-- Calendario & Partite --><li class=treeview ng-class=\\\"{active: sidebar.state.current.name === \\'main.admin.calendar\\'}\\\"><a ui-sref=main.admin.calendar><i class=\\\"fa fa-calendar\\\" aria-hidden=true></i> <span>Calendario &amp; Partite</span></a></li><!-- !Calendario & Partite --><!-- Classifica --><li class=treeview ng-class=\\\"{active: sidebar.state.current.name === \\'main.admin.scoreboard\\'}\\\"><a ui-sref=main.admin.scoreboard><i class=\\\"fa fa-trophy\\\" aria-hidden=true></i> <span>Classifica</span></a></li><!-- !Classifica --><!-- Marcatori --><li class=treeview ng-class=\\\"{active: sidebar.state.current.name === \\'main.admin.scorers\\'}\\\" can=scorers><a ui-sref=main.admin.scorers><i class=\\\"fa fa-trophy\\\" aria-hidden=true></i> <span>Marcatori</span></a></li><!-- !Marcatori --><!-- !SECTION Main Menu --><!-- SECTION Dirigente --><li class=header can=guest>Dirigente</li><!-- Eventi dirigente --><li class=treeview ng-class=\\\"{active: sidebar.state.current.name === \\'main.admin.manager_events\\'}\\\" can=guest><a ui-sref=main.admin.managerEvents><i class=\\\"fa fa-newspaper-o\\\"></i> <span>Eventi</span></a></li><!-- !Eventi dirigente --><!-- Partite --><li class=treeview ng-class=\\\"{active: sidebar.state.current.name === \\'main.admin.manager_matches\\'}\\\" can=guest><a ui-sref=main.admin.managerMatches><i class=\\\"fa fa-bolt\\\"></i> <span>Partite</span></a></li><!-- !Partite --><!-- SECTION Amministra --><li class=header can=useradmin>Amministra</li><!-- Dirigenti --><li class=treeview ng-class=\\\"{active: sidebar.state.current.name === \\'main.admin.invitations\\'}\\\" can=useradmin><a ui-sref=main.admin.invitations><i class=\\\"fa fa-newspaper-o\\\"></i> <span>Dirigenti</span></a></li><!-- !Dirigenti --><!-- !SECTION Amministra --><!-- SECTION Utili --><li class=header can=discipline>Utili</li><!-- Disciplinare --><li class=treeview ng-class=\\\"{active: sidebar.state.current.name === \\'main.admin.disciplinary\\'}\\\" can=discipline><a ui-sref=main.admin.disciplinary><i class=\\\"fa fa-bolt\\\"></i> <span>Disciplinare</span></a></li><!-- !Disciplinare --><!-- Comunicati --><li class=treeview ng-class=\\\"{active: sidebar.state.current.name === \\'main.admin.press\\'}\\\" can=press><a ui-sref=main.admin.press><i class=\\\"fa fa-newspaper-o\\\"></i> <span>Comunicati</span></a></li><!-- !Comunicati --><!-- !SECTION Utili --><!-- SECTION Support --><li class=header>Support</li><!-- Documentation --><li class=treeview ng-class=\\\"{active: sidebar.state.current.name === \\'main.admin.documentation\\'}\\\"><a href=http://frispo.it/manager/documentation/index.html target=_blank><i class=\\\"fa fa-info\\\" aria-hidden=true></i> <span>Documentation</span></a></li><!-- !Documentation --><!-- Contact Us --><li class=treeview ng-class=\\\"{active: sidebar.state.current.name === \\'main.admin.contact\\'}\\\"><a href=mailto:info@frispo.it><i class=\\\"fa fa-envelope\\\" aria-hidden=true></i> <span>Contact Us</span></a></li><!-- !Contact Us --><!-- !SECTION Support --></ul><!-- /.sidebar-menu --></div><!-- /.sidebar --></div><!-- /.main-sidebar -->\");\n$templateCache.put(\"app/pages/access/access.html\",\"<div class=access><div class=spinner-wrapper><i class=\\\"spinner fa fa-sun-o fa-spin\\\"></i></div></div>\");\n$templateCache.put(\"app/pages/admin/admin.html\",\"<div class=wrapper><frispo-header></frispo-header><frispo-sidebar></frispo-sidebar><div class=content-wrapper><div ui-view></div></div><frispo-footer></frispo-footer></div>\");\n$templateCache.put(\"app/pages/calendar/calendar.html\",\"<div class=calendar><section class=content-header><h1>Calendario <small>incontri</small></h1></section><section class=content><div class=row><div class=col-xs-12><div class=\\\"box box-success\\\"><div class=box-header><div class=row><div class=\\\"col-sm-4 col-md-3 col-lg-2\\\"><div class=form-group><label for=selectEvent>Seleziona l\\'evento</label><select id=selectEvent ng-model=vm.models.currentEvent name=event class=form-control ng-options=\\\"event as event.evenName for event in vm.models.events track by event.evenId\\\" ng-change=vm.updateCurrentEvent()></select></div></div><div class=\\\"col-sm-4 col-md-3 col-lg-2\\\"><div class=form-group><label for=selectDay>Seleziona la giornata</label><select id=selectDay ng-model=vm.models.currentEvent.currentDay name=day class=form-control ng-options=\\\"day as (day.matcDayName) for day in (vm.models.currentEvent.matchDays) track by day.matcDayId\\\" ng-change=vm.updateMatchDay()></select></div></div><div class=\\\"col-sm-4 col-md-6 col-lg-8\\\"><div class=pull-right><a role=button class=\\\"btn btn-success form-control-button\\\" ng-click=vm.createNewDay()>Crea nuova giornata</a> <a role=button class=\\\"btn btn-success form-control-button\\\" ng-click=vm.createNewMatch()>Crea nuova partita</a></div></div></div></div><div class=\\\"box-body table-responsive relative\\\" ng-show=vm.models.currentEvent.currentDay.matches><table class=table><tr><th>Squadra Casa</th><th>Squadra Ospite</th><th>Goal Casa</th><th>Goal Ospiti</th><th>Data Partita</th><th>Ora</th><th>Indirizzo</th><th ng-if=\\\"vm.models.currentEvent.evenType == 1\\\">Girone</th><th>Giocata</th><th></th></tr><tr ng-repeat-start=\\\"match in vm.models.currentEvent.currentDay.matches\\\" match-show=match></tr><tr ng-repeat-end match-edit=match></tr></table><div ng-show=vm.loading class=\\\"overlay absolute fill\\\"><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></div></div></div></div></section></div>\");\n$templateCache.put(\"app/pages/createEvent/createEvent.html\",\"<section class=create-event><section class=content-header><h1>Crea un evento <small>&nbsp;{{ vm.wizard | wizardTextProgress }}</small></h1><wizard-progress wizard=vm.wizard></wizard-progress></section><section class=content><wizard-step-box step=1 wizard=vm.wizard title=\\\"Impostazioni evento\\\"><form id=formStep1 name=formStep1 ng-submit=vm.step1Done()><div class=row><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep1.name.$dirty && formStep1.name.$invalid}\\\"><label for=formStep1-name>Nome</label><input id=formStep1-name ng-model=vm.step1.name name=name type=text class=form-control placeholder=\\\"Inserisci il nome dell\\'evento\\\" required> <span ng-show=formStep1.name.$dirty ng-messages=formStep1.name.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep1.desc.$dirty && formStep1.desc.$invalid}\\\"><label for=formStep1-desc>Descrizione</label><textarea id=formStep1-desc rows=5 ng-model=vm.step1.desc name=desc class=form-control placeholder=\\\"Inserisci una descrizione dell\\'evento\\\"></textarea><span ng-show=formStep1.desc.$dirty ng-messages=formStep1.desc.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep1.address.$dirty && formStep1.address.$invalid}\\\"><label for=formStep1-address>Indirizzo</label><input id=formStep1-address ng-model=vm.step1.address name=address type=text class=form-control placeholder=\\\"Inserisci l\\'indirizzo principale dell\\'evento\\\" required> <span ng-show=formStep1.address.$dirty ng-messages=formStep1.address.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep1.type.$dirty && formStep1.type.$invalid}\\\"><label for=formStep1-type>Tipologia</label><select id=formStep1-type ng-init=\\\"vm.step1.type = 0\\\" ng-model=vm.step1.type name=type class=form-control><option ng-selected=\\\"vm.step1.type === 0\\\" value=0>Campionato italiana</option><option ng-selected=\\\"vm.step1.type === 1\\\" value=1>Torneo a gironi</option></select><span ng-show=formStep1.type.$dirty ng-messages=formStep1.type.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep1.organizer.$dirty && formStep1.organizer.$invalid}\\\"><label for=formStep1-organizer>Organizzatore</label><input id=formStep1-organizer ng-model=vm.step1.organizer name=organizer type=text class=form-control placeholder=\\\"Inserisci il nome dell\\'organizzatore\\\" required> <span ng-show=formStep1.organizer.$dirty ng-messages=formStep1.organizer.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep1.telephone.$dirty && formStep1.telephone.$invalid}\\\"><label for=formStep1-telephone>Telefono organizzatore</label><input id=formStep1-telephone ng-model=vm.step1.telephone name=telephone type=text class=form-control placeholder=\\\"Inserisci il numero di telefono dell\\'organizzatore\\\" required> <span ng-show=formStep1.telephone.$dirty ng-messages=formStep1.telephone.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep1.email.$dirty && formStep1.email.$invalid}\\\"><label for=formStep1-email>E-mail organizzatore</label><input id=formStep1-email ng-model=vm.step1.email name=email type=email class=form-control placeholder=\\\"Inserisci l\\'indirizzo e-mail dell\\'organizzatore\\\" required> <span ng-show=formStep1.email.$dirty ng-messages=formStep1.email.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span> <span ng-message=email>Inserire un indirizzo email valido</span></span></div><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep1.dates.$dirty && formStep1.dates.$invalid}\\\"><label for=formStep1-dates>Periodo</label><div class=input-group><div class=input-group-addon><i class=\\\"fa fa-calendar\\\"></i></div><input id=formStep1-dates ng-model=vm.step1.dates model=vm.step1.dates name=dates type=text class=form-control placeholder=\\\"Inserisci la data di inizio e la data di fine\\\" datepicker=range required></div><!-- /.input group --> <span ng-show=formStep1.dates.$dirty ng-messages=formStep1.dates.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep1.formula.$dirty && formStep1.formula.$invalid}\\\"><label for=formStep1-formula>Formula</label><select id=formStep1-formula ng-init=\\\"vm.step1.formula = 0\\\" ng-model=vm.step1.formula name=formula class=form-control placeholder=\\\"Inserisci la formula desiderata\\\"><option ng-selected=\\\"vm.step1.formula === 0\\\" value=0>Anadata e ritorno</option><option ng-selected=\\\"vm.step1.formula === 1\\\" value=1>Solo andata</option></select><span ng-show=formStep1.formula.$dirty ng-messages=formStep1.formula.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><!-- /.col --></div><!-- /.row --><div class=pull-right><input type=submit class=\\\"btn btn-success\\\" value=Continua></div></form></wizard-step-box><wizard-step-box step=2 wizard=vm.wizard title=\\\"Aggiungi squadre\\\"><form id=formStep2 name=formStep2 ng-submit=vm.step2Done()><div class=row><div ng-if=\\\"vm.step1.type == \\'1\\' && !vm.forceManualRounds\\\"><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep2.roundType.$dirty && formStep2.roundType.$invalid}\\\"><label for=formStep2-roundType>Inserimento Gironi</label><select id=formStep2-roundType ng-init=\\\"vm.step2.roundType = 0\\\" ng-model=vm.step2.roundType name=roundType class=form-control ng-change=vm.initDefaultTeams()><option value=0>Manuale</option><option value=1>Automatico</option></select><span ng-show=formStep2.roundType.$dirty ng-messages=formStep2.roundType.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=col-sm-6 ng-if=\\\"vm.step2.roundType == 1\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep2.roundNumber.$dirty && formStep2.roundNumber.$invalid}\\\"><label for=formStep2-roundNumber>Numero di gironi</label><input id=formStep2-roundNumber ng-model=team.roundNumber name=roundNumber type=text class=form-control placeholder=\\\"Inserisci il numero di gironi dell\\'evento\\\" required> <span ng-show=formStep2.roundNumber.$dirty ng-messages=formStep2.roundNumber.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div></div><div class=clearfix></div><div class=col-sm-6 ng-repeat=\\\"team in vm.step2.teams\\\"><div class=\\\"panel panel-default\\\"><div class=panel-heading>Squadra {{ $index+1 }} <button tabindex=-1 type=button class=close ng-click=vm.removeTeam($index)><span>&times;</span></button></div><div class=panel-body><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep2[\\'name\\' + ($index+1)].$dirty && formStep2[\\'name\\' + ($index+1)].$invalid}\\\"><label for=formStep2-name{{$index+1}}>Nome</label><input id=formStep2-name{{$index+1}} ng-model=team.name name=name{{$index+1}} type=text class=form-control placeholder=\\\"Inserisci il nome della squadra\\\" required> <span ng-show=\\\"formStep2[\\'name\\' + ($index+1)].$dirty\\\" ng-messages=\\\"formStep2[\\'name\\' + ($index+1)].$error\\\" class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep2[\\'captain\\' + ($index+1)].$dirty && formStep2[\\'captain\\' + ($index+1)].$invalid}\\\"><label for=formStep2-captain{{$index+1}}>Capitano</label><input id=formStep2-captain{{$index+1}} ng-model=team.captain name=captain{{$index+1}} type=text class=form-control placeholder=\\\"Inserisci il nome del capitano della squadra\\\"> <span ng-show=\\\"formStep2[\\'captain\\' + ($index+1)].$dirty\\\" ng-messages=\\\"formStep2[\\'captain\\' + ($index+1)].$error\\\" class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep2[\\'phone\\' + ($index+1)].$dirty && formStep2[\\'phone\\' + ($index+1)].$invalid}\\\"><label for=formStep2-phone{{$index+1}}>Telefono</label><input id=formStep2-phone{{$index+1}} ng-model=team.phone name=phone{{$index+1}} type=text class=form-control placeholder=\\\"Inserisci il numero di telefono della squadra\\\"> <span ng-show=\\\"formStep2[\\'phone\\' + ($index+1)].$dirty\\\" ng-messages=\\\"formStep2[\\'phone\\' + ($index+1)].$error\\\" class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep2[\\'time\\' + ($index+1)].$dirty && formStep2[\\'time\\' + ($index+1)].$invalid}\\\"><label for=formStep2-time{{$index+1}}>Orario preferito</label><div class=input-group><div class=input-group-addon><i class=\\\"fa fa-clock-o\\\"></i></div><input id=formStep2-time{{$index+1}} ng-model=team.time name=time{{$index+1}} type=text class=form-control timepicker placeholder=\\\"Inserisci l\\'orario preferito della squadra per le partite\\\"></div><span ng-show=\\\"formStep2[\\'time\\' + ($index+1)].$dirty\\\" ng-messages=\\\"formStep2[\\'time\\' + ($index+1)].$error\\\" class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep2[\\'place\\' + ($index+1)].$dirty && formStep2[\\'place\\' + ($index+1)].$invalid}\\\"><label for=formStep2-place{{$index+1}}>Luogo preferito</label><input id=formStep2-place{{$index+1}} ng-model=team.place name=place{{$index+1}} type=text class=form-control placeholder=\\\"Inserisci il luogo preferito della squadra per le partite\\\"> <span ng-show=\\\"formStep2[\\'place\\' + ($index+1)].$dirty\\\" ng-messages=\\\"formStep2[\\'place\\' + ($index+1)].$error\\\" class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div><div ng-if=\\\"vm.step2.roundType == 0\\\" class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': formStep2[\\'round\\' + ($index+1)].$dirty && formStep2[\\'round\\' + ($index+1)].$invalid}\\\"><label for=formStep2-round{{$index+1}}>Girone</label><select id=formStep2-round{{$index+1}} ng-init=\\\"team.round = \\'A\\'\\\" ng-model=team.round name=round{{$index+1}} class=form-control ng-options=\\\"roundName as roundName for roundName in vm.roundNames track by roundName\\\" required></select><span ng-show=\\\"formStep2[\\'round\\' + ($index+1)].$dirty\\\" ng-messages=\\\"formStep2[\\'round\\' + ($index+1)].$error\\\" class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div></div></div><div class=clearfix></div><div class=col-md-6><a role=button ng-click=vm.addTeam() class=\\\"btn btn-default btn-block\\\" ng-show=vm.step2.roundType>Aggiungi Squadra</a></div></div><div class=pull-right><a role=button class=\\\"btn btn-default\\\" ng-click=vm.wizard.prev()>Indietro</a> <input type=submit class=\\\"btn btn-success\\\" value=Continua></div></form></wizard-step-box><wizard-step-box step=3 wizard=vm.wizard title=Riepilogo><form id=formStep3 name=formStep3 ng-submit=vm.submitWizard()><div class=row><div class=col-md-6><div class=form-group><label>Nome</label><p class=form-control-static>{{ vm.step1.name }}</p></div><div class=form-group><label>Descrizione</label><p class=form-control-static>{{ vm.step1.desc }}</p></div><div class=form-group><label>Indirizzo</label><p class=form-control-static>{{ vm.step1.address }}</p></div><div class=form-group><label>Tipologia</label><p class=form-control-static>{{ vm.step1.type == \\'1\\' ? \\'Torneo a gironi\\' : \\'Campionato Italiana\\' }}</p></div><div class=form-group><label>Numero di squadre</label><p class=form-control-static>{{ vm.step2.teams.length }}</p></div></div><div class=col-md-6><div class=form-group><label>Organizzatore</label><p class=form-control-static>{{ vm.step1.organizer }}</p></div><div class=form-group><label>Telefono organizzatore</label><p class=form-control-static>{{ vm.step1.telephone }}</p></div><div class=form-group><label>E-mail organizzatore</label><p class=form-control-static>{{ vm.step1.email }}</p></div><div class=form-group><label>Perioto</label><p class=form-control-static>{{ vm.step1.dates }}</p></div><div class=form-group><label>Formula</label><p class=form-control-static>{{ vm.step1.formula == \\'1\\' ? \\'Solo andata\\' : \\'Andata e Ritorno\\' }}</p></div></div></div><div class=pull-right><a role=button class=\\\"btn btn-default\\\" ng-click=vm.wizard.prev()>Indietro</a> <input type=submit class=\\\"btn btn-success\\\" value=\\\"Crea partita automaticamente\\\"><a role=button class=\\\"btn btn-success\\\" ng-click=vm.manualSubmit()>Crea partita manualmente</a></div></form></wizard-step-box></section></section>\");\n$templateCache.put(\"app/pages/disciplinary/disciplinary.html\",\"<div class=disciplinary><section class=content-header><div class=row><div class=\\\"col-sm-4 col-md-3 col-lg-2 content-header\\\"><h1>Disciplinare</h1></div><div class=\\\"col-sm-4 col-md-6 col-lg-8\\\"></div><div class=\\\"col-sm-4 col-md-3 col-lg-2\\\"><div class=form-group><label for=selectEvent>Seleziona l\\'evento</label><select id=selectEvent ng-model=vm.models.currentEvent name=event class=form-control ng-options=\\\"event as event.evenName for event in vm.models.events track by event.evenId\\\" ng-change=vm.updateCurrentEvent()></select></div></div></div></section><section class=content><div class=row><div class=col-xs-12><div ng-repeat=\\\"cardConfig in vm.cardConfigs\\\" class=\\\"box {{ cardConfig.boxClass }}\\\"><div class=box-header><h4 class=box-title>{{ cardConfig.header }}</h4><div class=\\\"box-tools pull-right\\\"><button type=button class=\\\"btn btn-box-tool\\\" data-widget=collapse><i class=\\\"fa fa-minus\\\"></i></button></div></div><div class=\\\"box-body table-responsive relative\\\" ng-show=\\\"!vm.models.currentEvent[cardConfig.cardsKey] || vm.models.currentEvent[cardConfig.cardsKey].length === 0\\\"><strong>{{ cardConfig.emptyMessage }}</strong></div><div class=\\\"box-body table-responsive relative\\\" ng-show=\\\"vm.models.currentEvent[cardConfig.cardsKey].length > 0\\\"><table class=table><tr><th ng-repeat=\\\"field in cardConfig.fields\\\">{{ field.name }}</th><th></th></tr><tr ng-repeat-start=\\\"card in vm.models.currentEvent[cardConfig.cardsKey]\\\" card-show=card config=cardConfig></tr><tr ng-repeat-end card-edit=card config=cardConfig ng-if=cardConfig.controls.edit></tr></table><div ng-show=vm.loading class=\\\"overlay absolute fill\\\"><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></div></div></div></div></section></div>\");\n$templateCache.put(\"app/pages/events/events.html\",\"<div class=\\\"content events\\\"><div class=row><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\" ng-repeat=\\\"invitation in vm.models.currentUser.receivedInvitations\\\"><div class=\\\"box box-success box-solid\\\"><div class=box-header><div class=box-title>Invito ricevuto</div><div class=\\\"box-tools pull-right\\\"><button type=button class=\\\"btn btn-box-tool\\\" data-widget=remove><i class=\\\"fa fa-times\\\"></i></button></div></div><div class=box-body><p><strong>{{ invitation.mailInvitingmember }}</strong> ti ha invitato a gestire come <strong>Dirigente</strong> il suo evento &quot;<strong>{{ invitation.evenName }}</strong>&quot;</p><div class=pull-right><a role=button class=\\\"btn btn-danger\\\" ng-click=vm.declineInvitation(invitation)>Rifiuta</a> <a role=button class=\\\"btn btn-success\\\" ng-click=vm.acceptInvitation(invitation)>Accetta</a></div></div></div></div><div class=col-xs-12><div class=\\\"box box-default\\\" ng-show=\\\"vm.models.events.length === 0\\\"><div class=box-header><div class=box-title>Eventi</div></div><div class=box-body>Non sono stati trovati eventi. <a ui-sref=main.admin.createEvent>Creane uno ora</a>.</div></div><div class=\\\"box {{ tableFilter.boxClass }}\\\" ng-repeat=\\\"tableFilter in vm.tableFilters\\\" ng-show=\\\"(vm.models.events | filter:tableFilter.eventFilter).length > 0\\\"><div class=box-header><h3 class=box-title>{{ tableFilter.title }}</h3><div class=box-tools><div class=\\\"input-group input-group-sm\\\" style=\\\"width: 150px\\\"><input ng-model=tableFilter.searchFilter.search type=text name=table_search class=\\\"form-control pull-right\\\" placeholder=Search><div class=input-group-btn><button type=submit class=\\\"btn btn-default\\\"><i class=\\\"fa fa-search\\\"></i></button></div></div></div></div><!-- /.box-header --><div class=\\\"box-body table-responsive\\\"><table class=table ng-init=\\\"vm.formScopes = []\\\"><tbody><tr><th>Nome</th><th>Evento</th><th>Formula</th><th>Regione</th><th>Giornata corrente</th><th></th></tr><tr ng-repeat-start=\\\"event in vm.models.events | filter:tableFilter.eventFilter | filter:tableFilter.searchFilter\\\" event-show=event></tr><tr ng-repeat-end event-edit=event></tr></tbody></table></div><!-- /.box-body --></div><!-- /.box --></div></div></div>\");\n$templateCache.put(\"app/pages/invitations/invitations.html\",\"<div class=invitations><section class=content><div class=row><div class=col-xs-12><div class=\\\"box box-success\\\"><div class=box-header><div class=row><div class=\\\"col-sm-4 col-md-3 col-lg-2\\\"><h3>Dirigenti <small>invitati</small></h3></div><div class=\\\"col-sm-8 col-md-9 col-lg-10\\\"><a role=button class=\\\"btn btn-success form-control-button pull-right\\\" ng-click=vm.createNewInvitation()>Manda un nuovo invito</a></div></div></div><div class=\\\"box-body table-responsive relative\\\" ng-show=vm.models.currentUser.sentInvitations><table class=table><tr><th>E-mail dirigente</th><th>Evento</th><th>Data invito</th><th>Stato invito</th><th></th></tr><tr ng-repeat=\\\"invitation in vm.models.currentUser.sentInvitations\\\" invitation-show=invitation></tr></table><div ng-show=vm.loading class=\\\"overlay absolute fill\\\"><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></div></div></div></div></section></div>\");\n$templateCache.put(\"app/pages/login/login.html\",\"<div class=\\\"login login-box\\\"><div class=login-logo><img src=/assets/images/logo-title-64.png alt=Frispo></div><!-- /.login-logo --><div class=login-box-body><p class=login-box-msg>Sign in to start your session</p><form id=loginForm name=loginForm ng-submit=vm.login()><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': loginForm.email.$dirty && loginForm.email.$invalid}\\\"><input ng-model=vm.user.email name=email type=email class=form-control placeholder=Email required> <span class=\\\"glyphicon glyphicon-envelope form-control-feedback\\\"></span> <span ng-show=loginForm.email.$dirty ng-messages=loginForm.email.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span> <span ng-message=email>Inserire un indirizzo email valido</span></span></div><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': loginForm.password.$dirty && loginForm.password.$invalid}\\\"><input ng-model=vm.user.password name=password type=password class=form-control placeholder=Password required> <span class=\\\"glyphicon glyphicon-lock form-control-feedback\\\"></span> <span ng-show=loginForm.password.$dirty ng-messages=loginForm.password.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div><div class=row><!-- /.col --><div class=col-xs-12><button ng-disabled=loginForm.$invalid type=submit class=\\\"btn btn-primary btn-block btn-flat\\\">Sign In</button></div><!-- /.col --></div></form><div class=\\\"social-auth-links text-center\\\"><p>- OR -</p><a ng-click=vm.loginFacebook() class=\\\"btn btn-block btn-social btn-facebook btn-flat\\\"><i class=\\\"fa fa-facebook\\\"></i> Sign in using Facebook</a></div><!-- /.social-auth-links --> <a ui-sref=main.register class=text-center>Register a new membership</a></div><!-- /.login-box-body --></div>\");\n$templateCache.put(\"app/pages/main/main.html\",\"<div class=animate ui-view></div>\");\n$templateCache.put(\"app/pages/managerEvents/managerEvents.html\",\"<div class=\\\"content events\\\"><div class=row><div class=col-xs-12><div class=\\\"box box-default\\\" ng-show=\\\"vm.models.currentUser.managedEvents.length === 0\\\"><div class=box-header><div class=box-title>Eventi gestiti come dirigente</div></div><div class=box-body>Non gestisci alcun evento.</div></div><div class=\\\"box box-success\\\" ng-show=\\\"vm.models.currentUser.managedEvents.length > 0\\\"><div class=box-header><h3 class=box-title>Eventi gestiti come dirigente</h3><div class=box-tools><div class=\\\"input-group input-group-sm\\\" style=\\\"width: 150px\\\"><input ng-model=tableFilter.searchFilter.search type=text name=table_search class=\\\"form-control pull-right\\\" placeholder=Search><div class=input-group-btn><button type=submit class=\\\"btn btn-default\\\"><i class=\\\"fa fa-search\\\"></i></button></div></div></div></div><!-- /.box-header --><div class=\\\"box-body table-responsive\\\"><table class=table ng-init=\\\"vm.formScopes = []\\\"><tbody><tr><th>Nome</th><th>Evento</th><th>Formula</th><th>Regione</th><th>Giornata corrente</th><th></th></tr><tr ng-repeat=\\\"event in vm.models.currentUser.managedEvents\\\" event-show=event hide-controls=true></tr></tbody></table></div><!-- /.box-body --></div><!-- /.box --></div></div></div>\");\n$templateCache.put(\"app/pages/managerMatches/managerMatches.html\",\"<div class=calendar><section class=content-header><h1>Calendario <small>incontri</small></h1></section><section class=content><div class=row><div class=col-xs-12><div class=\\\"box box-success\\\"><div class=box-header><div class=row><div class=\\\"col-sm-4 col-md-3 col-lg-2\\\"><div class=form-group><label for=selectEvent>Seleziona l\\'evento</label><select id=selectEvent ng-model=vm.models.currentEvent name=event class=form-control ng-options=\\\"event as event.evenName for event in vm.models.currentUser.managedEvents track by event.evenId\\\" ng-change=vm.updateCurrentEvent()></select></div></div><div class=\\\"col-sm-4 col-md-3 col-lg-2\\\"><div class=form-group><label for=selectDay>Seleziona la giornata</label><select id=selectDay ng-model=vm.models.currentEvent.currentDay name=day class=form-control ng-options=\\\"day as (day.matcDayName) for day in (vm.models.currentEvent.matchDays) track by day.matcDayId\\\" ng-change=vm.updateMatchDay()></select></div></div></div></div><div class=\\\"box-body table-responsive relative\\\" ng-show=vm.models.currentEvent.currentDay.matches><table class=table><tr><th>Squadra Casa</th><th>Squadra Ospite</th><th>Goal Casa</th><th>Goal Ospiti</th><th>Data Partita</th><th>Ora</th><th>Indirizzo</th><th ng-if=\\\"vm.models.currentEvent.evenType == 1\\\">Girone</th><th>Giocata</th><th></th></tr><tr ng-repeat-start=\\\"match in vm.models.currentEvent.currentDay.matches\\\" manager-match-show=match></tr><tr ng-repeat-end manager-match-edit=match></tr></table><div ng-show=vm.loading class=\\\"overlay absolute fill\\\"><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></div></div></div></div></section></div>\");\n$templateCache.put(\"app/pages/players/players.html\",\"<div class=calendar><section class=content-header><h1>Giocatori</h1></section><section class=content><div class=row><div class=col-xs-12><div class=\\\"box box-success\\\"><div class=box-header><div class=row><div class=\\\"col-sm-4 col-md-3 col-lg-2\\\"><div class=form-group><label for=selectEvent>Seleziona l\\'evento</label><select id=selectEvent ng-model=vm.models.currentEvent name=event class=form-control ng-options=\\\"event as event.evenName for event in vm.models.events track by event.evenId\\\" ng-change=vm.updateCurrentEvent()></select></div></div><div class=\\\"col-sm-4 col-md-3 col-lg-2\\\"><div class=form-group><label for=selectDay>Seleziona la squadra</label><select id=selectDay ng-model=vm.models.currentEvent.currentTeam name=team class=form-control ng-options=\\\"team as (team.teamName) for team in (vm.models.currentEvent.teams) track by team.teamId\\\" ng-change=vm.updateTeam()></select></div></div><div class=\\\"col-sm-4 col-md-6 col-lg-8\\\"><div class=pull-right><a role=button class=\\\"btn btn-success form-control-button\\\" ng-click=vm.createNewPlayer()>Crea nuovo giocatore</a></div></div></div></div><div class=\\\"box-body table-responsive relative\\\" ng-show=vm.models.currentEvent.currentTeam.players><table class=table><tr><th>Nome</th><th>Cognome</th><th></th></tr><tr ng-repeat-start=\\\"player in vm.models.currentEvent.currentTeam.players\\\" player-show=player></tr><tr ng-repeat-end player-edit=player></tr></table><div ng-show=vm.loading class=\\\"overlay absolute fill\\\"><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></div></div></div></div></section></div>\");\n$templateCache.put(\"app/pages/press/press.html\",\"<div class=press><section class=content-header><h1>Comunicati</h1></section><section class=content><div class=row><div class=col-xs-12><div class=\\\"box box-success\\\"><div class=box-header><div class=row><div class=\\\"col-sm-4 col-md-3 col-lg-2\\\"><div class=form-group><label for=selectEvent>Seleziona l\\'evento</label><select id=selectEvent ng-model=vm.models.currentEvent name=event class=form-control ng-options=\\\"event as event.evenName for event in vm.models.events track by event.evenId\\\" ng-change=vm.updateCurrentEvent()></select></div></div><div class=\\\"col-sm-8 col-md-9 col-lg-10\\\"><a role=button class=\\\"btn btn-success form-control-button pull-right\\\" ng-click=vm.createNewPress()>Crea nuovo comunicato</a></div></div></div><div class=\\\"box-body table-responsive relative\\\" ng-show=vm.models.currentEvent.press><table class=table><tr><th>Nome</th><th>Stato</th><th>PDF</th><th>Data</th><th></th></tr><tr ng-repeat-start=\\\"press in vm.models.currentEvent.press\\\" press-show=press></tr><tr ng-repeat-end press-edit=press></tr></table><div ng-show=vm.loading class=\\\"overlay absolute fill\\\"><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></div></div></div></div></section></div>\");\n$templateCache.put(\"app/pages/profile/profile.html\",\"<div class=profile><section class=content-header><h1>Gestione Profilo</h1></section><section class=content><div class=row><div class=col-xs-12><div class=\\\"box box-success\\\"><div class=box-body><form name=user-edit ng-submit=vm.submit()><div class=row><div class=\\\"col-sm-5 col-md-4 col-lg-3\\\"><div class=form-group><label for=user-edit-type>Tipologia utente</label><select id=user-edit-type name=type ng-model=vm.form.type class=form-control ng-options=\\\"type.num as type.name for type in vm.userTypes\\\" required></select></div></div><div class=\\\"col-sm-5 col-md-4 col-lg-3\\\"><div class=form-group><label for=user-edit-subscription>Abbonamento</label><select id=user-edit-subscription name=subscription ng-model=vm.form.subscription class=form-control ng-options=\\\"subscription.num as subscription.name for subscription in vm.userSubscriptions\\\" required></select></div></div><div class=\\\"col-sm-2 col-md-2 col-lg-1\\\"><div class=form-group><label>&nbsp;</label><input type=submit value=Salva class=\\\"btn btn-success form-control\\\"></div></div></div></form><div ng-show=vm.loading class=\\\"overlay absolute fill\\\"><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></div></div></div></div></section></div>\");\n$templateCache.put(\"app/pages/register/register.html\",\"<div class=register-box><div class=register-logo><img src=/assets/images/logo-title-64.png alt=Frispo></div><div class=register-box-body><p class=login-box-msg>Register a new membership</p><form id=registerForm name=registerForm ng-submit=vm.register()><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': registerForm.email.$dirty && registerForm.email.$invalid}\\\"><input ng-model=vm.user.email name=email type=email class=form-control placeholder=Email required> <span class=\\\"glyphicon glyphicon-envelope form-control-feedback\\\"></span> <span ng-show=registerForm.email.$dirty ng-messages=registerForm.email.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span> <span ng-message=email>Inserire un indirizzo email valido</span></span></div><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': registerForm.password.$dirty && registerForm.password.$invalid}\\\"><input ng-model=vm.user.password name=password type=password class=form-control placeholder=Password required minlength=8> <span class=\\\"glyphicon glyphicon-lock form-control-feedback\\\"></span> <span ng-show=registerForm.password.$dirty ng-messages=registerForm.password.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span> <span ng-message=minlength>La password deve essere lunga almeno 8 caratteri</span></span></div><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': registerForm.retypePassword.$dirty && registerForm.retypePassword.$invalid}\\\"><input ng-model=vm.user.retypePassword name=retypePassword type=password class=form-control placeholder=\\\"Retype password\\\" required compare-to=vm.user.password> <span class=\\\"glyphicon glyphicon-log-in form-control-feedback\\\"></span> <span ng-show=registerForm.retypePassword.$dirty ng-messages=registerForm.retypePassword.$error class=help-block role=alert><span ng-message=compareTo>Le due password non coincidono</span></span></div><!-- <div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': registerForm.termsAgreement.$dirty && registerForm.termsAgreement.$invalid}\\\">\\n        <div class=\\\"checkbox icheck\\\">\\n          <label for=\\\"termsAgreement\\\">\\n            I agree to the <a href=\\\"#\\\">terms</a>\\n          </label>\\n          <div class=\\\"icheckbox_square-blue pull-right\\\" aria-checked=\\\"false\\\" aria-disabled=\\\"false\\\">\\n            <input id=\\\"termsAgreement\\\" ng-model=\\\"vm.user.termsAgreement\\\" name=\\\"termsAgreement\\\" type=\\\"checkbox\\\" required>\\n          </div>\\n        </div>\\n        <span ng-show=\\\"registerForm.termsAgreement.$dirty\\\" ng-messages=\\\"registerForm.termsAgreement.$error\\\" class=\\\"help-block\\\" role=\\\"alert\\\">\\n          <span ng-message=\\\"required\\\">E\\' obbligatorio accettare i termini</span>\\n        </span>\\n      </div> --><div class=row><!-- /.col --><div class=col-xs-12><button ng-disabled=registerForm.$invalid type=submit class=\\\"btn btn-primary btn-block btn-flat\\\">Register</button></div><!-- /.col --></div></form><div class=\\\"social-auth-links text-center\\\"><p>- OR -</p><a href=# class=\\\"btn btn-block btn-social btn-facebook btn-flat\\\"><i class=\\\"fa fa-facebook\\\"></i> Sign up using Facebook</a></div><a ui-sref=main.login class=text-center>I already have a membership</a></div><!-- /.form-box --></div><!-- /.register-box -->\");\n$templateCache.put(\"app/pages/scoreboard/scoreboard.html\",\"<div class=calendar><section class=content-header><h1>Classifica</h1></section><section class=content><div class=row><div class=col-xs-12><div class=\\\"box box-success\\\"><div class=box-header><div class=row><div class=\\\"col-sm-4 col-md-3 col-lg-2\\\"><div class=form-group><label for=selectEvent>Seleziona l\\'evento</label><select id=selectEvent ng-model=vm.models.currentEvent name=event class=form-control ng-options=\\\"event as event.evenName for event in vm.models.events track by event.evenId\\\" ng-change=vm.updateCurrentEvent()></select></div></div></div></div><div class=\\\"box-body table-responsive relative\\\" ng-if=\\\"vm.models.currentEvent.evenType === 0\\\"><table class=table><tr><th>Squadra</th><th>Punti</th><th>Partite giocate</th><th>Vittorie</th><th>Pareggi</th><th>Sconfitte</th><th>Goal fatti</th><th>Goal subiti</th><th>Disciplina</th></tr><tr ng-repeat=\\\"score in vm.models.currentEvent.scoreboard\\\"><td>{{ score.rankTeamName }}</td><td>{{ score.rankPoints }}</td><td>{{ score.rankNumberPlayed }}</td><td>{{ score.rankWon }}</td><td>{{ score.rankSame }}</td><td>{{ score.rankLose }}</td><td>{{ score.rankGoalScored }}</td><td>{{ score.rankGoalConceded}}</td><td>{{ score.rankFoul }}</td></tr></table><div ng-show=vm.loading class=\\\"overlay absolute fill\\\"><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></div><div class=\\\"box-body table-responsive relative\\\" ng-if=\\\"vm.models.currentEvent.evenType === 1\\\"><div ng-repeat=\\\"scoreboard in vm.models.currentEvent.scoreboard\\\"><h4>Girone {{ scoreboard.tournament[0].rankNameGroups }}</h4><table class=table><tr><th>Squadra</th><th>Punti</th><th>Partite giocate</th><th>Vittorie</th><th>Pareggi</th><th>Sconfitte</th><th>Goal fatti</th><th>Goal subiti</th><th>Disciplina</th></tr><tr ng-repeat=\\\"score in scoreboard.tournament\\\"><td>{{ score.rankTeamName }}</td><td>{{ score.rankNumberPlayed }}</td><td>{{ score.rankPoints }}</td><td>{{ score.rankWon }}</td><td>{{ score.rankSame }}</td><td>{{ score.rankLose }}</td><td>{{ score.rankGoalScored }}</td><td>{{ score.rankGoalConceded}}</td><td>{{ score.rankFoul }}</td></tr></table><div ng-show=vm.loading class=\\\"overlay absolute fill\\\"><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></div></div></div></div></div></section></div>\");\n$templateCache.put(\"app/pages/scorers/scorers.html\",\"<div class=scorers><section class=content-header><h1>Classifica marcatori</h1></section><section class=content><div class=row><div class=col-xs-12><div class=\\\"box box-success\\\"><div class=box-header><div class=row><div class=\\\"col-sm-4 col-md-3 col-lg-2\\\"><div class=form-group><label for=selectEvent>Seleziona l\\'evento</label><select id=selectEvent ng-model=vm.models.currentEvent name=event class=form-control ng-options=\\\"event as event.evenName for event in vm.models.events track by event.evenId\\\" ng-change=vm.updateCurrentEvent()></select></div></div></div></div><div class=\\\"box-body table-responsive relative\\\" ng-show=vm.models.currentEvent.scorers><table class=table><tr><th>Nome</th><th>Cognome</th><th>Squadra</th><th>Goal</th><th></th></tr><tr ng-repeat-start=\\\"scorer in vm.models.currentEvent.scorers\\\" scorer-show=scorer></tr><tr ng-repeat-end scorer-edit=scorer></tr></table><div ng-show=vm.loading class=\\\"overlay absolute fill\\\"><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></div></div></div></div></section></div>\");\n$templateCache.put(\"app/pages/teams/teams.html\",\"<div class=teams><section class=content-header><h1>Squadre <small>partecipanti</small></h1></section><section class=content><div class=row><div class=col-xs-12><div class=\\\"box box-success\\\"><div class=box-header><div class=row><div class=\\\"col-sm-4 col-md-3 col-lg-2\\\"><div class=form-group><label for=selectEvent>Seleziona l\\'evento</label><select id=selectEvent ng-model=vm.models.currentEvent name=event class=form-control ng-options=\\\"event as event.evenName for event in vm.models.events track by event.evenId\\\" ng-change=vm.updateCurrentEvent()></select></div></div><div class=\\\"col-sm-8 col-md-9 col-lg-10\\\"><a role=button class=\\\"btn btn-success form-control-button pull-right\\\" ng-click=vm.createNewTeam()>Crea nuova squadra</a></div></div></div><div class=\\\"box-body table-responsive relative\\\" ng-show=vm.models.currentEvent.teams><table class=table><tr><th>Nome</th><th>Capitano</th><th>Telefono</th><th>Orario Preferito</th><th>Luogo Preferito</th><th ng-if=\\\"vm.models.currentEvent.evenType == 1\\\">Girone</th><th></th></tr><tr ng-repeat-start=\\\"team in vm.models.currentEvent.teams\\\" team-show=team></tr><tr ng-repeat-end team-edit=team></tr></table><div ng-show=vm.loading class=\\\"overlay absolute fill\\\"><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></div></div></div></div></section></div>\");\n$templateCache.put(\"app/components/wizard/wizardProgress/wizardProgress.html\",\"<div class=wizard-progress><i ng-repeat=\\\"i in wizardProgress.range(wizardProgress.wizard.totalSteps) track by $index\\\" class=fa ng-class=\\\"{\\n      \\'fa-circle\\': $index+1 === wizardProgress.wizard.currentStep,\\n      \\'fa-circle-thin\\': $index+1 !== wizardProgress.wizard.currentStep\\n    }\\\">&nbsp;</i></div>\");\n$templateCache.put(\"app/components/wizard/wizardStepBox/wizardStepBox.html\",\"<div class=\\\"wizard-step-box box\\\" ng-class=\\\"{\\'box-success\\': wizardStepBox.active, \\'box-default\\': !wizardStepBox.active}\\\"><div class=\\\"box-header with-border\\\"><h3 class=box-title>{{ wizardStepBox.title }}</h3><div class=\\\"box-tools pull-right hidden\\\"><button class=\\\"btn btn-box-tool\\\" data-widget=collapse><i class=\\\"fa fa-minus\\\"></i></button></div></div><!-- /.box-header --><div class=box-body><ng-transclude></ng-transclude></div><!-- /.box-body --><div ng-show=\\\"wizardStepBox.active && wizardStepBox.wizard.loading\\\" class=overlay><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></div><!-- /.box -->\");\n$templateCache.put(\"app/pages/calendar/create/create.html\",\"<form id=matchCreateForm class=\\\"match-create-form relative\\\" name=matchCreateForm ng-submit=matchCreate.ok()><div class=modal-header><a role=button class=close ng-click=matchCreate.cancel()><span aria-hidden=true>×</span></a><h3 class=modal-title>Crea nuova partita</h3></div><div class=modal-body><div class=row><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchCreateForm.teamA.$dirty && matchCreateForm.teamA.$invalid}\\\"><label for=matchCreateForm-teamA>Squadra Casa</label><select id=matchCreateForm-teamA ng-model=matchCreate.form.teamA name=teamA class=form-control ng-options=\\\"team as team.teamName for team in matchCreate.models.currentEvent.teams track by team.teamId\\\" required></select><span ng-show=matchCreateForm.teamA.$dirty ng-messages=matchCreateForm.teamA.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchCreateForm.teamB.$dirty && matchCreateForm.teamB.$invalid}\\\"><label for=matchCreateForm-teamB>Squadra Ospite</label><select id=matchCreateForm-teamB ng-model=matchCreate.form.teamB name=teamB class=form-control ng-options=\\\"team as team.teamName for team in matchCreate.models.currentEvent.teams track by team.teamId\\\" required></select><span ng-show=matchCreateForm.teamB.$dirty ng-messages=matchCreateForm.teamB.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchCreateForm.scoreA.$dirty && matchCreateForm.scoreA.$invalid}\\\"><label for=matchCreateForm-scoreA>Goal Casa</label><select id=matchCreateForm-scoreA ng-model=matchCreate.form.scoreA name=scoreA class=form-control ng-options=\\\"score as score for score in matchCreate.scores track by score\\\" required></select><span ng-show=matchCreateForm.scoreA.$dirty ng-messages=matchCreateForm.scoreA.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchCreateForm.scoreB.$dirty && matchCreateForm.scoreB.$invalid}\\\"><label for=matchCreateForm-scoreB>Goal Ospiti</label><select id=matchCreateForm-scoreB ng-model=matchCreate.form.scoreB name=scoreB class=form-control ng-options=\\\"score as score for score in matchCreate.scores track by score\\\" required></select><span ng-show=matchCreateForm.scoreB.$dirty ng-messages=matchCreateForm.scoreB.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchCreateForm.date.$dirty && matchCreateForm.date.$invalid}\\\"><label for=matchCreateForm-date>Data Partita</label><div class=input-group><div class=input-group-addon><i class=\\\"fa fa-calendar\\\"></i></div><input id=matchCreateForm-date ng-model=matchCreate.form.date model=matchCreate.form.date name=date type=text class=form-control datepicker></div></div></div><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchCreateForm.time.$dirty && matchCreateForm.time.$invalid}\\\"><label for=matchCreateForm-time>Ora</label><div class=input-group><div class=input-group-addon><i class=\\\"fa fa-clock-o\\\"></i></div><input id=matchCreateForm-time ng-model=matchCreate.form.time name=time type=text class=form-control timepicker></div></div></div><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchCreateForm.address.$dirty && matchCreateForm.address.$invalid}\\\"><label for=matchCreateForm-address>Indirizzo</label><input id=matchCreateForm-address ng-model=matchCreate.form.address name=address type=text class=form-control></div></div><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchCreateForm.played.$dirty && matchCreateForm.played.$invalid}\\\"><label for=matchCreateForm-played>Giocata</label><select id=matchCreateForm-played ng-model=matchCreate.form.played name=played class=form-control ng-options=\\\"played as played.label for played in [{value: 0, label: \\'no\\'}, {value: 1, label: \\'si\\'}] track by played.value\\\" required></select><span ng-show=matchCreateForm.played.$dirty ng-messages=matchCreateForm.played.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div></div><div ng-show=matchCreate.loading class=\\\"overlay absolute fill\\\"><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></div><div class=modal-footer><a role=button class=\\\"btn btn-outline pull-left\\\" ng-click=matchCreate.cancel()>Annulla</a> <input type=submit class=\\\"btn btn-outline\\\" value=\\\"Crea partita\\\"></div></form>\");\n$templateCache.put(\"app/pages/calendar/createDay/create.html\",\"<form id=dayCreateForm class=\\\"match-create-form relative\\\" name=dayCreateForm ng-submit=dayCreate.ok()><div class=modal-header><a role=button class=close ng-click=dayCreate.cancel()><span aria-hidden=true>×</span></a><h3 class=modal-title>Crea nuova giornata</h3></div><div class=modal-body><div class=row><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': dayCreateForm.name.$dirty && dayCreateForm.name.$invalid}\\\"><label for=dayCreateForm-name>Nome giornata</label><input id=dayCreateForm-name ng-model=dayCreate.form.name name=name type=text class=form-control required> <span ng-show=dayCreateForm.name.$dirty ng-messages=dayCreateForm.name.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': dayCreateForm.desc.$dirty && dayCreateForm.desc.$invalid}\\\"><label for=dayCreateForm-desc>Descrizione</label><input id=dayCreateForm-desc ng-model=dayCreate.form.desc name=desc type=text class=form-control> <span ng-show=dayCreateForm.desc.$dirty ng-messages=dayCreateForm.desc.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div></div><div ng-show=dayCreate.loading class=\\\"overlay absolute fill\\\"><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></div><div class=modal-footer><a role=button class=\\\"btn btn-outline pull-left\\\" ng-click=dayCreate.cancel()>Annulla</a> <input type=submit class=\\\"btn btn-outline\\\" value=\\\"Crea giornata\\\"></div></form>\");\n$templateCache.put(\"app/pages/calendar/destroy/destroy.html\",\"<div class=modal-header><a role=button class=close ng-click=matchDestroy.cancel()><span aria-hidden=true>×</span></a><h3 class=modal-title>Sei sicuro?</h3></div><div class=modal-body>Questa operazione <strong>non è reversibile</strong>.</div><div class=modal-footer><a role=button class=\\\"btn btn-outline pull-left\\\" ng-click=matchDestroy.cancel()>Annulla</a> <a role=button class=\\\"btn btn-outline\\\" ng-click=matchDestroy.ok()>Elimina partita</a></div>\");\n$templateCache.put(\"app/pages/calendar/edit/edit.html\",\"<tr><td colspan=10 class=\\\"hidden-row active\\\"><div id=match-edit-form-{{matchEdit.match.matcId}} class=\\\"accordion-body collapse match-edit-form-{{matchEdit.match.matcId}}\\\"><form class=\\\"match-edit-form relative\\\" name=matchEditForm ng-submit=matchEdit.submit()><div class=row><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchEditForm.teamA.$dirty && matchEditForm.teamA.$invalid}\\\"><label for=matchEditForm{{matchEdit.match.matcId}}-teamA>Modifica Squadra Casa</label><select id=matchEditForm{{matchEdit.match.matcId}}-teamA ng-model=matchEdit.form.teamA ng-init=\\\"matchEdit.form.teamA = { teamId: matchEdit.match.matcTeamIdA }\\\" name=teamA class=form-control ng-options=\\\"team as team.teamName for team in matchEdit.models.currentEvent.teams track by team.teamId\\\" required></select><span ng-show=matchEditForm.teamA.$dirty ng-messages=matchEditForm.teamA.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchEditForm.teamB.$dirty && matchEditForm.teamB.$invalid}\\\"><label for=matchEditForm{{matchEdit.match.matcId}}-teamB>Modifica Squadra Ospite</label><select id=matchEditForm{{matchEdit.match.matcId}}-teamB ng-model=matchEdit.form.teamB ng-init=\\\"matchEdit.form.teamB = { teamId: matchEdit.match.matcTeamIdB }\\\" name=teamB class=form-control ng-options=\\\"team as team.teamName for team in matchEdit.models.currentEvent.teams track by team.teamId\\\" required></select><span ng-show=matchEditForm.teamB.$dirty ng-messages=matchEditForm.teamB.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchEditForm.scoreA.$dirty && matchEditForm.scoreA.$invalid}\\\"><label for=matchEditForm{{matchEdit.match.matcId}}-scoreA>Modifica Goal Casa</label><select id=matchEditForm{{matchEdit.match.matcId}}-scoreA ng-model=matchEdit.form.scoreA ng-init=\\\"matchEdit.form.scoreA = matchEdit.match.matcScoreTeamA\\\" name=scoreA class=form-control ng-options=\\\"score as score for score in matchEdit.scores track by score\\\" required></select><span ng-show=matchEditForm.scoreA.$dirty ng-messages=matchEditForm.scoreA.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchEditForm.scoreB.$dirty && matchEditForm.scoreB.$invalid}\\\"><label for=matchEditForm{{matchEdit.match.matcId}}-scoreB>Modifica Goal Ospiti</label><select id=matchEditForm{{matchEdit.match.matcId}}-scoreB ng-model=matchEdit.form.scoreB ng-init=\\\"matchEdit.form.scoreB = matchEdit.match.matcScoreTeamB\\\" name=scoreB class=form-control ng-options=\\\"score as score for score in matchEdit.scores track by score\\\" required></select><span ng-show=matchEditForm.scoreB.$dirty ng-messages=matchEditForm.scoreB.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchEditForm.date.$dirty && matchEditForm.date.$invalid}\\\"><label for=matchEditForm{{matchEdit.match.matcId}}-date>Modifica Data Partita</label><div class=input-group><div class=input-group-addon><i class=\\\"fa fa-calendar\\\"></i></div><input id=matchEditForm{{matchEdit.match.matcId}}-date ng-model=matchEdit.form.date model=matchEdit.form.date ng-init=\\\"matchEdit.form.date = matchEdit.match.matcDateMatch\\\" name=date type=text class=form-control datepicker></div></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchEditForm.time.$dirty && matchEditForm.time.$invalid}\\\"><label for=matchEditForm{{matchEdit.match.matcId}}-time>Modifica Ora</label><div class=input-group><div class=input-group-addon><i class=\\\"fa fa-clock-o\\\"></i></div><input id=matchEditForm{{matchEdit.match.matcId}}-time ng-model=matchEdit.form.time ng-init=\\\"matchEdit.form.time = matchEdit.match.matcTime\\\" name=time type=text class=form-control timepicker></div></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchEditForm.address.$dirty && matchEditForm.address.$invalid}\\\"><label for=matchEditForm{{matchEdit.match.matcId}}-address>Modifica Indirizzo</label><input id=matchEditForm{{matchEdit.match.matcId}}-address ng-model=matchEdit.form.address ng-init=\\\"matchEdit.form.address = matchEdit.match.matcAddress\\\" name=address type=text class=form-control></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchEditForm.played.$dirty && matchEditForm.played.$invalid}\\\"><label for=matchEditForm{{matchEdit.match.matcId}}-played>Modifica Giocata</label><select id=matchEditForm{{matchEdit.match.matcId}}-played ng-model=matchEdit.form.played ng-init=\\\"matchEdit.form.played = {value: matchEdit.match.matcFlgPlay}\\\" name=played class=form-control ng-options=\\\"played as played.label for played in [{value: 0, label: \\'no\\'}, {value: 1, label: \\'si\\'}] track by played.value\\\" required></select><span ng-show=matchEditForm.played.$dirty ng-messages=matchEditForm.played.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div></div><div class=row><div class=col-xs-12><div class=pull-right><a role=button class=\\\"btn btn-default\\\" ng-click=matchEdit.cancel()>Annulla</a> <input type=submit value=Salva class=\\\"btn btn-success\\\"></div></div></div><div ng-show=matchEdit.loading class=\\\"overlay absolute fill\\\"><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></form></div></td></tr>\");\n$templateCache.put(\"app/pages/calendar/advancedEdit/advancedEdit.html\",\"<div class=modal-header><a role=button class=close ng-click=matchAdvEdit.cancel()><span aria-hidden=true>×</span></a><h3 class=text-center>{{matchAdvEdit.match.matcTeamA}} vs {{matchAdvEdit.match.matcTeamB}}</h3></div><div class=\\\"modal-body match-advanced-edit\\\"><form class=\\\"match-adv-edit-form relative\\\" name=matchAdvEditForm ng-submit=matchAdvEdit.submit()><div class=row><div class=\\\"col-xs-6 input-small-right\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchAdvEditForm.scoreA.$dirty && matchAdvEditForm.scoreA.$invalid}\\\"><label for=matchAdvEditForm-scoreA>Goal {{matchAdvEdit.match.matcTeamA}}</label><select id=matchAdvEditForm-scoreA ng-model=matchAdvEdit.form.scoreA ng-init=\\\"matchAdvEdit.form.scoreA = matchAdvEdit.match.matcScoreTeamA\\\" name=scoreA class=form-control ng-options=\\\"score as score for score in matchAdvEdit.scores track by score\\\" ng-change=matchAdvEdit.submit() required></select><span ng-show=matchAdvEditForm.scoreA.$dirty ng-messages=matchAdvEditForm.scoreA.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-xs-6 input-small-left\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchAdvEditForm.scoreB.$dirty && matchAdvEditForm.scoreB.$invalid}\\\"><label for=matchAdvEditForm-scoreB>Goal {{matchAdvEdit.match.matcTeamB}}</label><select id=matchAdvEditForm-scoreB ng-model=matchAdvEdit.form.scoreB ng-init=\\\"matchAdvEdit.form.scoreB = matchAdvEdit.match.matcScoreTeamB\\\" name=scoreB class=form-control ng-options=\\\"score as score for score in matchAdvEdit.scores track by score\\\" ng-change=matchAdvEdit.submit() required></select><span ng-show=matchAdvEditForm.scoreB.$dirty ng-messages=matchAdvEditForm.scoreB.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-xs-6 input-small-right\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchAdvEditForm.shootoutA.$dirty && matchAdvEditForm.shootoutA.$invalid}\\\"><label for=matchAdvEditForm-shootoutA>Rigori {{matchAdvEdit.match.matcTeamA}}</label><select id=matchAdvEditForm-shootoutA ng-model=matchAdvEdit.form.shootoutA ng-init=\\\"matchAdvEdit.form.shootoutA = matchAdvEdit.match.matcShootoutTeamA\\\" name=shootoutA class=form-control ng-options=\\\"score as score for score in matchAdvEdit.scores track by score\\\" ng-change=matchAdvEdit.submit() required></select><span ng-show=matchAdvEditForm.shootoutA.$dirty ng-messages=matchAdvEditForm.shootoutA.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-xs-6 input-small-left\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': matchAdvEditForm.shootoutB.$dirty && matchAdvEditForm.shootoutB.$invalid}\\\"><label for=matchAdvEditForm-shootoutB>Rigori {{matchAdvEdit.match.matcTeamB}}</label><select id=matchAdvEditForm-shootoutB ng-model=matchAdvEdit.form.shootoutB ng-init=\\\"matchAdvEdit.form.shootoutB = matchAdvEdit.match.matcShootoutTeamB\\\" name=shootoutB class=form-control ng-options=\\\"score as score for score in matchAdvEdit.scores track by score\\\" ng-change=matchAdvEdit.submit() required></select><span ng-show=matchAdvEditForm.shootoutB.$dirty ng-messages=matchAdvEditForm.shootoutB.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div></div></form><div class=row><div class=col-sm-6><scorers-box scorers=matchAdvEdit.match.matchPlayersTeamA team-name=matchAdvEdit.match.matcTeamA team-id=matchAdvEdit.match.matcTeamIdA match-id=matchAdvEdit.match.matcId scorers-key=matchPlayersTeamA autocomplete=matchAdvEdit.autocompleteA></scorers-box></div><div class=col-sm-6><scorers-box scorers=matchAdvEdit.match.matchPlayersTeamB team-name=matchAdvEdit.match.matcTeamB team-id=matchAdvEdit.match.matcTeamIdB match-id=matchAdvEdit.match.matcId scorers-key=matchPlayersTeamB autocomplete=matchAdvEdit.autocompleteB></scorers-box></div></div><div class=row><div class=col-sm-6><cards-box cards=matchAdvEdit.match.matchCardsTeamA team-name=matchAdvEdit.match.matcTeamA team-id=matchAdvEdit.match.matcTeamIdA match-id=matchAdvEdit.match.matcId cards-key=matchCardsTeamA autocomplete=matchAdvEdit.autocompleteA></cards-box></div><div class=col-sm-6><cards-box cards=matchAdvEdit.match.matchCardsTeamB team-name=matchAdvEdit.match.matcTeamB team-id=matchAdvEdit.match.matcTeamIdB match-id=matchAdvEdit.match.matcId cards-key=matchCardsTeamB autocomplete=matchAdvEdit.autocompleteB></cards-box></div></div></div><div class=modal-footer><a role=button class=\\\"btn btn-default pull-left\\\" ng-click=matchAdvEdit.cancel()>Annulla</a> <a role=button class=\\\"btn btn-success\\\" ng-click=matchAdvEdit.ok()>Chiudi</a></div>\");\n$templateCache.put(\"app/pages/calendar/show/show.html\",\"<tr><td>{{ matchShow.match.matcTeamA }}</td><td>{{ matchShow.match.matcTeamB }}</td><td>{{ matchShow.match.matcScoreTeamA }}</td><td>{{ matchShow.match.matcScoreTeamB }}</td><td>{{ matchShow.match.matcDateMatchPretty }}</td><td>{{ matchShow.match.matcTime }}</td><td>{{ matchShow.match.matcAddress }}</td><td ng-if=\\\"matchShow.models.currentEvent.evenType == 1\\\">{{ matchShow.match.matcNameGroups }}</td><td>{{ matchShow.match.matcFlgPlay === 1 ? \\'si\\' : \\'no\\' }}</td><td><div class=\\\"pull-right no-opacity opacity-transition\\\" ng-class=\\\"{ \\'full-opacity\\': matchShow.showControls }\\\"><a role=button class=\\\"btn btn-sm btn-default\\\" ng-click=matchShow.advancedEdit() ng-show=\\\"matchShow.match.matcTeamIdA !== 0 && matchShow.match.matcTeamIdB !== 0\\\" can=updatematchfull><i class=\\\"fa fa-futbol-o\\\"></i> </a><a role=button class=\\\"btn btn-sm btn-default accordion-toggle\\\" data-toggle=collapse data-target=.match-edit-form-{{matchShow.match.matcId}}><i class=\\\"fa fa-pencil\\\"></i> </a><a role=button class=\\\"btn btn-sm btn-danger\\\" ng-click=matchShow.destroy()><i class=\\\"fa fa-trash\\\"></i></a></div></td></tr>\");\n$templateCache.put(\"app/pages/cardMatch/destroy/destroy.html\",\"<div class=modal-header><a role=button class=close ng-click=cardMatchDestroy.cancel()><span aria-hidden=true>×</span></a><h3 class=modal-title>Sei sicuro?</h3></div><div class=modal-body>Questa operazione <strong>non è reversibile</strong>.</div><div class=modal-footer><a role=button class=\\\"btn btn-outline pull-left\\\" ng-click=cardMatchDestroy.cancel()>Annulla</a> <a role=button class=\\\"btn btn-outline\\\" ng-click=cardMatchDestroy.ok()>Elimina</a></div>\");\n$templateCache.put(\"app/pages/cardMatch/show/show.html\",\"<tr><td>{{ cardMatchShow.cardMatch.matcTeamA }} vs {{ cardMatchShow.cardMatch.matcTeamB }}</td><td ng-repeat=\\\"field in cardMatchShow.config.detailFields\\\"><form ng-if=cardMatchShow.config.controls.editDetail[field.key] class=\\\"cardMatch-edit-form relative no-padding\\\" name=cardMatchShowForm ng-submit=\\\"\\\"><select ng-if=\\\"cardMatchShow.config.controls.editDetail[field.key].type === \\'select\\'\\\" ng-model=cardMatchShow.form[field.key] ng-init=\\\"cardMatchShow.form[field.key] = { value: cardMatchShow.cardMatch[field.key] }\\\" name={{field.key}} class=\\\"form-control no-padding\\\" ng-options=\\\"opt as opt.name for opt in cardMatchShow.config.controls.editDetail[field.key].options track by opt.value\\\"><input ng-if=\\\"cardMatchShow.config.controls.editDetail[field.key].type === \\'text\\'\\\" ng-model=cardMatchShow.form[field.key] ng-init=\\\"cardMatchShow.form[field.key] = cardMatchShow.cardMatch[field.key]\\\" name={{field.key}} type=text class=form-control></select></form><span ng-if=!cardMatchShow.config.controls.editDetail[field.key]>{{ cardMatchShow.cardMatch[field.key] }}</span></td><td><div class=\\\"pull-right no-opacity opacity-transition\\\" ng-class=\\\"{ \\'full-opacity\\': cardMatchShow.showControls }\\\"><a ng-show=cardMatchShow.config.controls.editDetail role=button class=\\\"btn btn-sm btn-success\\\" ng-click=cardMatchShow.submit()>Salva </a><a role=button class=\\\"btn btn-sm btn-danger\\\" ng-click=cardMatchShow.destroy() ng-show=cardMatchShow.config.controls.deleteDetail><i class=\\\"fa fa-trash\\\"></i></a></div></td></tr>\");\n$templateCache.put(\"app/pages/disciplinary/edit/edit.html\",\"<tr><td colspan=8 class=\\\"hidden-row active\\\"><div id=card-edit-form-{{cardEdit.card.cardId}} class=\\\"accordion-body collapse card-edit-form-{{cardEdit.card.cardId}}\\\"><table class=table style=\\\"background: transparent\\\"><tr><th>Partita</th><th ng-repeat=\\\"field in cardEdit.config.detailFields\\\">{{ field.name }}</th><th></th></tr><tr ng-repeat=\\\"cardMatch in cardEdit.card[cardEdit.config.cardMatchKey]\\\" card-match-show=cardMatch config=cardEdit.config card-match-player-id=cardEdit.card.playId></tr></table></div></td></tr>\");\n$templateCache.put(\"app/pages/disciplinary/show/show.html\",\"<tr><td ng-repeat=\\\"field in cardShow.config.fields\\\">{{ cardShow.card[field.key] }}</td><td><div class=\\\"pull-right no-opacity opacity-transition\\\" ng-class=\\\"{ \\'full-opacity\\': cardShow.showControls }\\\"><a ng-show=cardShow.config.controls.edit role=button class=\\\"btn btn-sm btn-default accordion-toggle\\\" data-toggle=collapse data-target=.card-edit-form-{{cardShow.card.cardId}}><i class=\\\"fa fa-pencil\\\"></i> </a><a ng-show=cardShow.config.controls.delete role=button class=\\\"btn btn-sm btn-danger\\\" ng-click=cardShow.destroy()><i class=\\\"fa fa-trash\\\"></i></a></div></td></tr>\");\n$templateCache.put(\"app/pages/events/destroy/destroy.html\",\"<div class=modal-header><a role=button class=close ng-click=eventDestroy.cancel()><span aria-hidden=true>×</span></a><h3 class=modal-title>Sei sicuro?</h3></div><div class=modal-body>Se elimini questo evento, verranno eliminati anche tutti dati relativi alle squadre e alle partite associate.<br>Questa operazione <strong>non è reversibile</strong>.</div><div class=modal-footer><a role=button class=\\\"btn btn-outline pull-left\\\" ng-click=eventDestroy.cancel()>Annulla</a> <a role=button class=\\\"btn btn-outline\\\" ng-click=eventDestroy.ok()>Elimina evento</a></div>\");\n$templateCache.put(\"app/pages/events/edit/edit.html\",\"<tr><td colspan=8 class=\\\"hidden-row active\\\"><div id=event-edit-form-{{eventEdit.event.evenId}} class=\\\"accordion-body collapse event-edit-form-{{eventEdit.event.evenId}}\\\"><form class=\\\"event-edit-form relative\\\" name=eventEditForm ng-submit=eventEdit.submit()><div class=row><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': eventEditForm.name.$dirty && eventEditForm.name.$invalid}\\\"><label for=eventEditForm{{eventEdit.event.evenId}}-name>Modifica Nome</label><input id=eventEditForm{{eventEdit.event.evenId}}-name ng-model=eventEdit.form.name ng-init=\\\"eventEdit.form.name = eventEdit.event.evenName\\\" name=name type=text class=form-control placeholder=\\\"Inserisci il nome dell\\'evento\\\" required> <span ng-show=eventEditForm.name.$dirty ng-messages=eventEditForm.name.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': eventEditForm.desc.$dirty && eventEditForm.desc.$invalid}\\\"><label for=eventEditForm{{eventEdit.event.evenId}}-desc>Modifica Descrizione</label><input id=eventEditForm{{eventEdit.event.evenId}}-desc ng-model=eventEdit.form.desc ng-init=\\\"eventEdit.form.desc = eventEdit.event.evenDescription\\\" name=desc type=text class=form-control placeholder=\\\"Inserisci una descrizione dell\\'evento\\\" required> <span ng-show=eventEditForm.desc.$dirty ng-messages=eventEditForm.desc.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': eventEditForm.currentDay.$dirty && eventEditForm.currentDay.$invalid}\\\"><label for=eventEditForm{{eventEdit.event.evenId}}-currentDay>Modifica Giornata Corrente</label><select id=eventEditForm{{eventEdit.event.evenId}}-currentDay ng-model=eventEdit.form.currentDay ng-init=\\\"eventEdit.form.currentDay = eventEdit.event.evenCurrentDay\\\" name=currentDay class=form-control ng-options=\\\"day as day.matcDayName for day in eventEdit.event.matchDays track by day.matcDayId\\\" required></select><span ng-show=eventEditForm.currentDay.$dirty ng-messages=eventEditForm.currentDay.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': eventEditForm.dates.$dirty && eventEditForm.dates.$invalid}\\\"><label for=eventEditForm{{eventEdit.event.evenId}}-dates>Modifica Periodo</label><div class=input-group><div class=input-group-addon><i class=\\\"fa fa-calendar\\\"></i></div><input id=eventEditForm{{eventEdit.event.evenId}}-dates ng-model=eventEdit.form.dates model=eventEdit.form.dates ng-init=\\\"eventEdit.form.dates = eventEdit.event.dates\\\" name=dates type=text class=form-control placeholder=\\\"Inserisci la data di inizio e la data di fine\\\" datepicker=range required></div><span ng-show=eventEditForm.dates.$dirty ng-messages=eventEditForm.dates.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': eventEditForm.address.$dirty && eventEditForm.address.$invalid}\\\"><label for=eventEditForm{{eventEdit.event.evenId}}-address>Modifica Indirizzo</label><input id=eventEditForm{{eventEdit.event.evenId}}-address ng-model=eventEdit.form.address ng-init=\\\"eventEdit.form.address = eventEdit.event.evenAddress\\\" name=address type=text class=form-control placeholder=\\\"Inserisci l\\'indirizzo dell\\'evento\\\" required> <span ng-show=eventEditForm.address.$dirty ng-messages=eventEditForm.address.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': eventEditForm.region.$dirty && eventEditForm.region.$invalid}\\\"><label for=eventEditForm{{eventEdit.event.evenId}}-region>Modifica Regione</label><select id=eventEditForm{{eventEdit.event.evenId}}-region ng-model=eventEdit.form.region ng-init=\\\"eventEdit.form.region = eventEdit.event.regions\\\" name=region class=form-control ng-options=\\\"region as region.regiName for region in eventEdit.models.regions track by region.regiId\\\" required></select><span ng-show=eventEditForm.region.$dirty ng-messages=eventEditForm.region.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': eventEditForm.telephone.$dirty && eventEditForm.telephone.$invalid}\\\"><label for=eventEditForm{{eventEdit.event.evenId}}-telephone>Modifica Telefono Organizzatore</label><input id=eventEditForm{{eventEdit.event.evenId}}-telephone ng-model=eventEdit.form.telephone ng-init=\\\"eventEdit.form.telephone = eventEdit.event.evenMobilePhone\\\" name=telephone type=text class=form-control placeholder=\\\"Inserisci il numero di telefono dell\\'organizzatore dell\\'evento\\\" required> <span ng-show=eventEditForm.telephone.$dirty ng-messages=eventEditForm.telephone.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': eventEditForm.email.$dirty && eventEditForm.email.$invalid}\\\"><label for=eventEditForm{{eventEdit.event.evenId}}-email>Modifica E-mail Organizzatore</label><input id=eventEditForm{{eventEdit.event.evenId}}-email ng-model=eventEdit.form.email ng-init=\\\"eventEdit.form.email = eventEdit.event.evenEmail\\\" name=email type=text class=form-control placeholder=\\\"Inserisci l\\'e-mail dell\\'organizzatore dell\\'evento\\\" required> <span ng-show=eventEditForm.email.$dirty ng-messages=eventEditForm.email.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\" can=discipline><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': eventEditForm.yellowPoints.$dirty && eventEditForm.yellowPoints.$invalid}\\\"><label for=eventEditForm{{eventEdit.event.evenId}}-yellowPoints>Punti disciplina ammonizioni</label><select id=eventEditForm{{eventEdit.event.evenId}}-yellowPoints ng-model=eventEdit.form.yellowPoints ng-init=\\\"eventEdit.form.yellowPoints = eventEdit.event.evenYellowPoints || 0\\\" name=yellowPoints class=form-control ng-options=\\\"yellowPoints as yellowPoints for yellowPoints in eventEdit.pointsOptions track by yellowPoints\\\" required></select><span ng-show=eventEditForm.yellowPoints.$dirty ng-messages=eventEditForm.yellowPoints.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\" can=discipline><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': eventEditForm.redPoints.$dirty && eventEditForm.redPoints.$invalid}\\\"><label for=eventEditForm{{eventEdit.event.evenId}}-redPoints>Punti disciplina espulsioni</label><select id=eventEditForm{{eventEdit.event.evenId}}-redPoints ng-model=eventEdit.form.redPoints ng-init=\\\"eventEdit.form.redPoints = eventEdit.event.evenRedPoints || 0\\\" name=redPoints class=form-control ng-options=\\\"redPoints as redPoints for redPoints in eventEdit.pointsOptions track by redPoints\\\" required></select><span ng-show=eventEditForm.redPoints.$dirty ng-messages=eventEditForm.redPoints.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\" can=discipline><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': eventEditForm.yellowDiffide.$dirty && eventEditForm.yellowDiffide.$invalid}\\\"><label for=eventEditForm{{eventEdit.event.evenId}}-yellowDiffide>Numero ammonizioni diffidato</label><select id=eventEditForm{{eventEdit.event.evenId}}-yellowDiffide ng-model=eventEdit.form.yellowDiffide ng-init=\\\"eventEdit.form.yellowDiffide = eventEdit.event.evenYellowDiffide || 0\\\" name=yellowDiffide class=form-control ng-options=\\\"yellowDiffide as yellowDiffide for yellowDiffide in eventEdit.pointsOptions track by yellowDiffide\\\" required></select><span ng-show=eventEditForm.yellowDiffide.$dirty ng-messages=eventEditForm.yellowDiffide.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\" can=discipline><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': eventEditForm.yellowDiffide2.$dirty && eventEditForm.yellowDiffide2.$invalid}\\\"><label for=eventEditForm{{eventEdit.event.evenId}}-yellowDiffide2>Numero ammonizioni diffidato dopo squalifica</label><select id=eventEditForm{{eventEdit.event.evenId}}-yellowDiffide2 ng-model=eventEdit.form.yellowDiffide2 ng-init=\\\"eventEdit.form.yellowDiffide2 = eventEdit.event.evenYellowDiffide2 || 0\\\" name=yellowDiffide2 class=form-control ng-options=\\\"yellowDiffide2 as yellowDiffide2 for yellowDiffide2 in eventEdit.pointsOptions track by yellowDiffide2\\\" required></select><span ng-show=eventEditForm.yellowDiffide2.$dirty ng-messages=eventEditForm.yellowDiffide2.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div></div><div class=row><div class=col-xs-12><div class=pull-left><a role=button class=\\\"btn btn-primary\\\" ng-click=eventEdit.recreateCalendar()>Ricrea calendario</a> <a role=button class=\\\"btn btn-primary\\\" ng-click=eventEdit.publish() ng-show=\\\"eventEdit.event.evenStatoEvento != 1\\\">Pubblica evento</a> <a role=button class=\\\"btn btn-primary\\\" ng-click=eventEdit.unpublish() ng-show=\\\"eventEdit.event.evenStatoEvento == 1\\\">Imposta come offline</a></div><div class=pull-right><div><a role=button class=\\\"btn btn-default\\\" ng-click=eventEdit.cancel()>Annulla</a> <input type=submit value=Salva class=\\\"btn btn-success\\\"></div></div></div></div><div ng-show=eventEdit.loading class=\\\"overlay absolute fill\\\"><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></form></div></td></tr>\");\n$templateCache.put(\"app/pages/events/edit/recreateCalendar.html\",\"<div class=modal-header><a role=button class=close ng-click=eventRecreateCalendar.cancel()><span aria-hidden=true>×</span></a><h3 class=modal-title>Sei sicuro?</h3></div><div class=modal-body>Tutte le partite e le giornate saranno ricreate. Quelle presenti ora verranno eliminate.</div><div class=modal-footer><a role=button class=\\\"btn btn-outline pull-left\\\" ng-click=eventRecreateCalendar.cancel()>Annulla</a> <a role=button class=\\\"btn btn-outline\\\" ng-click=eventRecreateCalendar.ok()>Ricrea calendario dell\\'evento</a></div>\");\n$templateCache.put(\"app/pages/events/show/show.html\",\"<tr><td>{{ eventShow.event.evenName }}</td><td>{{ eventShow.event.evenTypePretty }}</td><td>{{ eventShow.event.evenFormulaPretty }}</td><td>{{ eventShow.event.regions.regiName }}</td><td>{{ eventShow.event.evenDayActiveName }}</td><td><div class=\\\"pull-right no-opacity opacity-transition\\\" ng-class=\\\"{ \\'full-opacity\\': eventShow.showControls }\\\" ng-show=!eventShow.hideControls><a role=button class=\\\"btn btn-sm btn-default accordion-toggle\\\" data-toggle=collapse data-target=.event-edit-form-{{eventShow.event.evenId}}><i class=\\\"fa fa-pencil\\\"></i> </a><a role=button class=\\\"btn btn-sm btn-danger\\\" ng-click=eventShow.destroy()><i class=\\\"fa fa-trash\\\"></i></a></div></td></tr>\");\n$templateCache.put(\"app/pages/invitations/create/create.html\",\"<form id=invitationCreateForm class=\\\"invitation-create-form relative\\\" name=invitationCreateForm ng-submit=invitationCreate.ok()><div class=modal-header><a role=button class=close ng-click=invitationCreate.cancel()><span aria-hidden=true>×</span></a><h3 class=modal-title>Invita nuovo dirigente</h3></div><div class=modal-body><div class=row><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': invitationCreateForm.guestEmail.$dirty && invitationCreateForm.guestEmail.$invalid}\\\"><label for=invitationCreateForm-guestEmail>E-mail dirigente</label><input id=invitationCreateForm-guestEmail ng-model=invitationCreate.form.guestEmail name=guestEmail type=email class=form-control required> <span ng-show=invitationCreateForm.guestEmail.$dirty ng-messages=invitationCreateForm.guestEmail.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span> <span ng-message=email>Inserire un indirizzo email valido</span></span></div></div><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': invitationCreateForm.events.$dirty && invitationCreateForm.events.$invalid}\\\"><label for=invitationCreateForm-events>Eventi</label><isteven-multi-select id=invitationCreateForm-events name=events input-model=invitationCreate.events output-model=invitationCreate.form.events button-label=evenName item-label=evenName tick-property=ticked output-properties=evenId helper-elements=\\\"all none filter\\\" translation=invitationCreate.multiSelectTranslation></isteven-multi-select><span ng-show=invitationCreateForm.events.$dirty ng-messages=invitationCreateForm.events.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div></div><div ng-show=invitationCreate.loading class=\\\"overlay absolute fill\\\"><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></div><div class=modal-footer><a role=button class=\\\"btn btn-outline pull-left\\\" ng-click=invitationCreate.cancel()>Annulla</a> <input type=submit class=\\\"btn btn-outline\\\" value=\\\"Manda invito\\\"></div></form>\");\n$templateCache.put(\"app/pages/invitations/destroy/destroy.html\",\"<div class=modal-header><a role=button class=close ng-click=invitationDestroy.cancel()><span aria-hidden=true>×</span></a><h3 class=modal-title>Sei sicuro?</h3></div><div class=modal-body>Questa operazione <strong>non è reversibile</strong>.</div><div class=modal-footer><a role=button class=\\\"btn btn-outline pull-left\\\" ng-click=invitationDestroy.cancel()>Annulla</a> <a role=button class=\\\"btn btn-outline\\\" ng-click=invitationDestroy.ok()>Elimina dirigente</a></div>\");\n$templateCache.put(\"app/pages/invitations/show/show.html\",\"<tr><td>{{ invitationShow.invitation.mailGuest }}</td><td>{{ invitationShow.invitation.evenName }}</td><td>{{ invitationShow.invitation.dateInvitationPretty }}</td><td>{{ invitationShow.invitation.statusPretty }}</td><td><div class=\\\"pull-right no-opacity opacity-transition\\\" ng-class=\\\"{ \\'full-opacity\\': invitationShow.showControls }\\\"><a role=button class=\\\"btn btn-sm btn-danger\\\" ng-click=invitationShow.destroy() ng-show=\\\"invitationShow.invitation.status != \\'3\\'\\\"><i class=\\\"fa fa-trash\\\"></i></a></div></td></tr>\");\n$templateCache.put(\"app/pages/managerMatches/edit/edit.html\",\"<tr><td colspan=10 class=\\\"hidden-row active\\\"><div id=manager-match-edit-form-{{managerMatchEdit.match.matcId}} class=\\\"accordion-body collapse manager-match-edit-form-{{managerMatchEdit.match.matcId}}\\\"><form class=\\\"manager-match-edit-form relative\\\" name=managerMatchEditForm ng-submit=managerMatchEdit.submit()><div class=row><input id=managerMatchEditForm{{managerMatchEdit.match.matcId}}-teamA ng-model=managerMatchEdit.form.teamA ng-init=\\\"managerMatchEdit.form.teamA = { teamId: managerMatchEdit.match.matcTeamIdA }\\\" type=hidden name=teamA required> <input id=managerMatchEditForm{{managerMatchEdit.match.matcId}}-teamB ng-model=managerMatchEdit.form.teamB ng-init=\\\"managerMatchEdit.form.teamB = { teamId: managerMatchEdit.match.matcTeamIdB }\\\" type=hidden name=teamB required><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': managerMatchEditForm.scoreA.$dirty && managerMatchEditForm.scoreA.$invalid}\\\"><label for=managerMatchEditForm{{managerMatchEdit.match.matcId}}-scoreA>Modifica Goal Casa</label><select id=managerMatchEditForm{{managerMatchEdit.match.matcId}}-scoreA ng-model=managerMatchEdit.form.scoreA ng-init=\\\"managerMatchEdit.form.scoreA = managerMatchEdit.match.matcScoreTeamA\\\" name=scoreA class=form-control ng-options=\\\"score as score for score in managerMatchEdit.scores track by score\\\" required></select><span ng-show=managerMatchEditForm.scoreA.$dirty ng-messages=managerMatchEditForm.scoreA.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': managerMatchEditForm.scoreB.$dirty && managerMatchEditForm.scoreB.$invalid}\\\"><label for=managerMatchEditForm{{managerMatchEdit.match.matcId}}-scoreB>Modifica Goal Ospiti</label><select id=managerMatchEditForm{{managerMatchEdit.match.matcId}}-scoreB ng-model=managerMatchEdit.form.scoreB ng-init=\\\"managerMatchEdit.form.scoreB = managerMatchEdit.match.matcScoreTeamB\\\" name=scoreB class=form-control ng-options=\\\"score as score for score in managerMatchEdit.scores track by score\\\" required></select><span ng-show=managerMatchEditForm.scoreB.$dirty ng-messages=managerMatchEditForm.scoreB.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': managerMatchEditForm.date.$dirty && managerMatchEditForm.date.$invalid}\\\"><label for=managerMatchEditForm{{managerMatchEdit.match.matcId}}-date>Modifica Data Partita</label><div class=input-group><div class=input-group-addon><i class=\\\"fa fa-calendar\\\"></i></div><input id=managerMatchEditForm{{managerMatchEdit.match.matcId}}-date ng-model=managerMatchEdit.form.date model=managerMatchEdit.form.date ng-init=\\\"managerMatchEdit.form.date = managerMatchEdit.match.matcDateMatch\\\" name=date type=text class=form-control datepicker></div></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': managerMatchEditForm.time.$dirty && managerMatchEditForm.time.$invalid}\\\"><label for=managerMatchEditForm{{managerMatchEdit.match.matcId}}-time>Modifica Ora</label><div class=input-group><div class=input-group-addon><i class=\\\"fa fa-clock-o\\\"></i></div><input id=managerMatchEditForm{{managerMatchEdit.match.matcId}}-time ng-model=managerMatchEdit.form.time ng-init=\\\"managerMatchEdit.form.time = managerMatchEdit.match.matcTime\\\" name=time type=text class=form-control timepicker></div></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': managerMatchEditForm.address.$dirty && managerMatchEditForm.address.$invalid}\\\"><label for=managerMatchEditForm{{managerMatchEdit.match.matcId}}-address>Modifica Indirizzo</label><input id=managerMatchEditForm{{managerMatchEdit.match.matcId}}-address ng-model=managerMatchEdit.form.address ng-init=\\\"managerMatchEdit.form.address = managerMatchEdit.match.matcAddress\\\" name=address type=text class=form-control></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': managerMatchEditForm.played.$dirty && managerMatchEditForm.played.$invalid}\\\"><label for=managerMatchEditForm{{managerMatchEdit.match.matcId}}-played>Modifica Giocata</label><select id=managerMatchEditForm{{managerMatchEdit.match.matcId}}-played ng-model=managerMatchEdit.form.played ng-init=\\\"managerMatchEdit.form.played = {value: managerMatchEdit.match.matcFlgPlay}\\\" name=played class=form-control ng-options=\\\"played as played.label for played in [{value: 0, label: \\'no\\'}, {value: 1, label: \\'si\\'}] track by played.value\\\" required></select><span ng-show=managerMatchEditForm.played.$dirty ng-messages=managerMatchEditForm.played.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div></div><div class=row><div class=col-xs-12><div class=pull-right><a role=button class=\\\"btn btn-default\\\" ng-click=managerMatchEdit.cancel()>Annulla</a> <input type=submit value=Salva class=\\\"btn btn-success\\\"></div></div></div><div ng-show=managerMatchEdit.loading class=\\\"overlay absolute fill\\\"><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></form></div></td></tr>\");\n$templateCache.put(\"app/pages/managerMatches/show/show.html\",\"<tr><td>{{ managerMatchShow.match.matcTeamA }}</td><td>{{ managerMatchShow.match.matcTeamB }}</td><td>{{ managerMatchShow.match.matcScoreTeamA }}</td><td>{{ managerMatchShow.match.matcScoreTeamB }}</td><td>{{ managerMatchShow.match.matcDateMatchPretty }}</td><td>{{ managerMatchShow.match.matcTime }}</td><td>{{ managerMatchShow.match.matcAddress }}</td><td ng-if=\\\"managerMatchShow.models.currentEvent.evenType == 1\\\">{{ managerMatchShow.match.matcNameGroups }}</td><td>{{ managerMatchShow.match.matcFlgPlay === 1 ? \\'si\\' : \\'no\\' }}</td><td><div class=\\\"pull-right no-opacity opacity-transition\\\" ng-class=\\\"{ \\'full-opacity\\': managerMatchShow.showControls }\\\"><a role=button class=\\\"btn btn-sm btn-default accordion-toggle\\\" data-toggle=collapse data-target=.manager-match-edit-form-{{managerMatchShow.match.matcId}}><i class=\\\"fa fa-pencil\\\"></i></a></div></td></tr>\");\n$templateCache.put(\"app/pages/players/create/create.html\",\"<form id=playerCreateForm class=\\\"player-create-form relative\\\" name=playerCreateForm ng-submit=playerCreate.ok()><div class=modal-header><a role=button class=close ng-click=playerCreate.cancel()><span aria-hidden=true>×</span></a><h3 class=modal-title>Crea nuovo giocatore</h3></div><div class=modal-body><div class=row><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': playerCreateForm.name.$dirty && playerCreateForm.name.$invalid}\\\"><label for=playerCreateForm-name>Nome</label><input id=playerCreateForm-name ng-model=playerCreate.form.name name=name type=text class=form-control></div><span ng-show=playerCreateForm.name.$dirty ng-messages=playerCreateForm.name.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': playerCreateForm.surname.$dirty && playerCreateForm.surname.$invalid}\\\"><label for=playerCreateForm-surname>Cognome</label><input id=playerCreateForm-surname ng-model=playerCreate.form.surname name=surname type=text class=form-control></div><span ng-show=playerCreateForm.surname.$dirty ng-messages=playerCreateForm.surname.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div ng-show=playerCreate.loading class=\\\"overlay absolute fill\\\"><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></div><div class=modal-footer><a role=button class=\\\"btn btn-outline pull-left\\\" ng-click=playerCreate.cancel()>Annulla</a> <input type=submit class=\\\"btn btn-outline\\\" value=\\\"Crea giocatore\\\"></div></form>\");\n$templateCache.put(\"app/pages/players/destroy/destroy.html\",\"<div class=modal-header><a role=button class=close ng-click=matchDestroy.cancel()><span aria-hidden=true>×</span></a><h3 class=modal-title>Sei sicuro?</h3></div><div class=modal-body>Questa operazione <strong>non è reversibile</strong>.</div><div class=modal-footer><a role=button class=\\\"btn btn-outline pull-left\\\" ng-click=matchDestroy.cancel()>Annulla</a> <a role=button class=\\\"btn btn-outline\\\" ng-click=matchDestroy.ok()>Elimina partita</a></div>\");\n$templateCache.put(\"app/pages/players/edit/edit.html\",\"<tr><td colspan=10 class=\\\"hidden-row active\\\"><div id=player-edit-form-{{playerEdit.player.playId}} class=\\\"accordion-body collapse player-edit-form-{{playerEdit.player.playId}}\\\"><form class=\\\"player-edit-form relative\\\" name=playerEditForm ng-submit=playerEdit.submit()><div class=row><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': playerEditForm.name.$dirty && playerEditForm.name.$invalid}\\\"><label for=playerEditForm{{playerEdit.player.playId}}-name>Modifica Nome</label><input id=playerEditForm{{playerEdit.player.playId}}-name ng-model=playerEdit.form.name ng-init=\\\"playerEdit.form.name = playerEdit.player.playFirstname\\\" name=name type=text class=form-control required></div><span ng-show=playerEditForm.name.$dirty ng-messages=playerEditForm.name.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': playerEditForm.surname.$dirty && playerEditForm.surname.$invalid}\\\"><label for=playerEditForm{{playerEdit.player.playId}}-surname>Modifica Cognome</label><input id=playerEditForm{{playerEdit.player.playId}}-surname ng-model=playerEdit.form.surname ng-init=\\\"playerEdit.form.surname = playerEdit.player.playSurname\\\" name=surname type=text class=form-control required></div><span ng-show=playerEditForm.surname.$dirty ng-messages=playerEditForm.surname.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=row><div class=col-xs-12><div class=pull-right><a role=button class=\\\"btn btn-default\\\" ng-click=playerEdit.cancel()>Annulla</a> <input type=submit value=Salva class=\\\"btn btn-success\\\"></div></div></div><div ng-show=playerEdit.loading class=\\\"overlay absolute fill\\\"><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></form></div></td></tr>\");\n$templateCache.put(\"app/pages/players/show/show.html\",\"<tr><td>{{ playerShow.player.playFirstname }}</td><td>{{ playerShow.player.playSurname }}</td><td><div class=\\\"pull-right no-opacity opacity-transition\\\" ng-class=\\\"{ \\'full-opacity\\': playerShow.showControls }\\\"><a role=button class=\\\"btn btn-sm btn-default accordion-toggle\\\" data-toggle=collapse data-target=.player-edit-form-{{playerShow.player.playId}}><i class=\\\"fa fa-pencil\\\"></i> </a><a role=button class=\\\"btn btn-sm btn-danger\\\" ng-click=playerShow.destroy()><i class=\\\"fa fa-trash\\\"></i></a></div></td></tr>\");\n$templateCache.put(\"app/pages/press/create/create.html\",\"<form id=pressCreateForm class=\\\"press-create-form relative\\\" name=pressCreateForm ng-submit=pressCreate.ok()><div class=modal-header><a role=button class=close ng-click=pressCreate.cancel()><span aria-hidden=true>×</span></a><h3 class=modal-title>Crea nuovo comunicato</h3></div><div class=modal-body><div class=row><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': pressCreateForm.name.$dirty && pressCreateForm.name.$invalid}\\\"><label for=pressCreateForm-name>Nome comunicato</label><input id=pressCreateForm-name ng-model=pressCreate.form.name name=name type=text class=form-control required> <span ng-show=pressCreateForm.name.$dirty ng-messages=pressCreateForm.name.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=col-sm-6 ng-repeat=\\\"field in pressCreate.selectFields\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': pressCreateForm[field.key].$dirty && pressCreateForm[field.key].$invalid}\\\"><label for=pressCreateForm-round>{{ field.name }}</label><select id=pressCreateForm-round ng-init=\\\"pressCreate.form[field.key] = { id: 1 }\\\" ng-model=pressCreate.form[field.key] name={{field.key}} class=form-control ng-options=\\\"opt as opt.name for opt in field.options track by opt.id\\\"></select><span ng-show=pressCreateForm.round.$dirty ng-messages=pressCreateForm.round.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=col-sm-12><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': pressCreateForm.events.$dirty && pressCreateForm.events.$invalid}\\\"><label for=pressCreateForm-events>Eventi inclusi nel comunicato</label><isteven-multi-select id=pressCreateForm-events name=events input-model=pressCreate.events output-model=pressCreate.form.events button-label=evenName item-label=evenName tick-property=ticked output-properties=evenId helper-elements=\\\"all none filter\\\" translation=pressCreate.multiSelectTranslation></isteven-multi-select><span ng-show=pressCreateForm.events.$dirty ng-messages=pressCreateForm.events.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div></div><div ng-show=pressCreate.loading class=\\\"overlay absolute fill\\\"><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></div><div class=modal-footer><a role=button class=\\\"btn btn-outline pull-left\\\" ng-click=pressCreate.cancel()>Annulla</a> <input type=submit class=\\\"btn btn-outline\\\" value=\\\"Crea squadra\\\"></div></form>\");\n$templateCache.put(\"app/pages/press/destroy/destroy.html\",\"<div class=modal-header><a role=button class=close ng-click=pressDestroy.cancel()><span aria-hidden=true>×</span></a><h3 class=modal-title>Sei sicuro?</h3></div><div class=modal-body>Questa operazione <strong>non è reversibile</strong>.</div><div class=modal-footer><a role=button class=\\\"btn btn-outline pull-left\\\" ng-click=pressDestroy.cancel()>Annulla</a> <a role=button class=\\\"btn btn-outline\\\" ng-click=pressDestroy.ok()>Elimina comunicato</a></div>\");\n$templateCache.put(\"app/pages/press/show/show.html\",\"<tr><td>{{ pressShow.press.pressName }}</td><td>{{ pressShow.press.pressStatoPretty }}</td><td><a href={{pressShow.press.pressUrl}} target=_blank>Scarica il PDF</a></td><td>{{ pressShow.press.pressDatePretty }}</td><td><div class=\\\"pull-right no-opacity opacity-transition\\\" ng-class=\\\"{ \\'full-opacity\\': pressShow.showControls }\\\"><a role=button class=\\\"btn btn-sm btn-default accordion-toggle\\\" data-toggle=collapse data-target=.press-edit-form-{{pressShow.press.pressId}}><i class=\\\"fa fa-pencil\\\"></i> </a><a role=button class=\\\"btn btn-sm btn-danger\\\" ng-click=pressShow.destroy()><i class=\\\"fa fa-trash\\\"></i></a></div></td></tr>\");\n$templateCache.put(\"app/pages/scorerMatch/destroy/destroy.html\",\"<div class=modal-header><a role=button class=close ng-click=scorerMatchDestroy.cancel()><span aria-hidden=true>×</span></a><h3 class=modal-title>Sei sicuro?</h3></div><div class=modal-body>Questa operazione <strong>non è reversibile</strong>.</div><div class=modal-footer><a role=button class=\\\"btn btn-outline pull-left\\\" ng-click=scorerMatchDestroy.cancel()>Annulla</a> <a role=button class=\\\"btn btn-outline\\\" ng-click=scorerMatchDestroy.ok()>Elimina punteggio</a></div>\");\n$templateCache.put(\"app/pages/scorerMatch/show/show.html\",\"<tr><td>{{ scorerMatchShow.scorerMatch.matcTeamA }} vs {{ scorerMatchShow.scorerMatch.matcTeamB }}</td><td><form class=\\\"scorerMatch-edit-form relative no-padding\\\" name=scorerMatchShowForm ng-submit=scorerMatchShow.submit()><select ng-model=scorerMatchShow.form.goal ng-init=\\\"scorerMatchShow.form.goal = scorerMatchShow.scorerMatch.matcScorerGoal\\\" name=goal type=text class=\\\"form-control no-padding\\\" style=\\\"max-width: 80px\\\" ng-options=\\\"goal as goal for goal in scorerMatchShow.scores track by goal\\\" ng-change=scorerMatchShow.submitGoal()></select></form></td><td><div class=\\\"pull-right no-opacity opacity-transition\\\" ng-class=\\\"{ \\'full-opacity\\': scorerMatchShow.showControls }\\\"><a role=button class=\\\"btn btn-sm btn-danger\\\" ng-click=scorerMatchShow.destroy()><i class=\\\"fa fa-trash\\\"></i></a></div></td></tr>\");\n$templateCache.put(\"app/pages/scorers/edit/edit.html\",\"<tr><td colspan=8 class=\\\"hidden-row active\\\"><div id=scorer-edit-form-{{scorerEdit.scorer.scorId}} class=\\\"accordion-body collapse scorer-edit-form-{{scorerEdit.scorer.scorId}}\\\"><table class=table style=\\\"background: transparent\\\"><tr><th>Partita</th><th>Goal</th><th></th></tr><tr ng-repeat=\\\"scorerMatch in scorerEdit.scorer.matcScorers\\\" scorer-match-show=scorerMatch scorer-match-player-id=scorerEdit.scorer.scorPlayId></tr></table></div></td></tr>\");\n$templateCache.put(\"app/pages/teams/create/create.html\",\"<form id=teamCreateForm class=\\\"team-create-form relative\\\" name=teamCreateForm ng-submit=teamCreate.ok()><div class=modal-header><a role=button class=close ng-click=teamCreate.cancel()><span aria-hidden=true>×</span></a><h3 class=modal-title>Crea nuova squadra</h3></div><div class=modal-body><div class=row><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': teamCreateForm.name.$dirty && teamCreateForm.name.$invalid}\\\"><label for=teamCreateForm-name>Nome</label><input id=teamCreateForm-name ng-model=teamCreate.form.name name=name type=text class=form-control required> <span ng-show=teamCreateForm.name.$dirty ng-messages=teamCreateForm.name.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': teamCreateForm.captain.$dirty && teamCreateForm.captain.$invalid}\\\"><label for=teamCreateForm-captain>Capitano</label><input id=teamCreateForm-captain ng-model=teamCreate.form.captain name=captain type=text class=form-control> <span ng-show=teamCreateForm.captain.$dirty ng-messages=teamCreateForm.captain.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': teamCreateForm.phone.$dirty && teamCreateForm.phone.$invalid}\\\"><label for=teamCreateForm-phone>Telefono</label><input id=teamCreateForm-phone ng-model=teamCreate.form.phone name=phone type=text class=form-control> <span ng-show=teamCreateForm.phone.$dirty ng-messages=teamCreateForm.phone.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': teamCreateForm.time.$dirty && teamCreateForm.time.$invalid}\\\"><label for=teamCreateForm-time>Orario Preferito</label><div class=input-group><div class=input-group-addon><i class=\\\"fa fa-clock-o\\\"></i></div><input id=teamCreateForm-time ng-model=teamCreate.form.time name=time type=text class=form-control timepicker></div><span ng-show=teamCreateForm.time.$dirty ng-messages=teamCreateForm.time.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=col-sm-6><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': teamCreateForm.place.$dirty && teamCreateForm.place.$invalid}\\\"><label for=teamCreateForm-place>Luogo Preferito</label><input id=teamCreateForm-place ng-model=teamCreate.form.place name=place type=text class=form-control> <span ng-show=teamCreateForm.place.$dirty ng-messages=teamCreateForm.place.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=col-sm-6 ng-show=\\\"teamCreate.models.currentEvent.evenType == 1\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': teamCreateForm.round.$dirty && teamCreateForm.round.$invalid}\\\"><label for=teamCreateForm-round>Girone</label><select id=teamCreateForm-round ng-init=\\\"teamCreate.form.round = \\'A\\'\\\" ng-model=teamCreate.form.round name=round class=form-control ng-options=\\\"roundName as roundName for roundName in teamCreate.roundNames track by roundName\\\" required></select><span ng-show=teamCreateForm.round.$dirty ng-messages=teamCreateForm.round.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div></div><div ng-show=teamCreate.loading class=\\\"overlay absolute fill\\\"><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></div><div class=modal-footer><a role=button class=\\\"btn btn-outline pull-left\\\" ng-click=teamCreate.cancel()>Annulla</a> <input type=submit class=\\\"btn btn-outline\\\" value=\\\"Crea squadra\\\"></div></form>\");\n$templateCache.put(\"app/pages/scorers/show/show.html\",\"<tr><td>{{ scorerShow.scorer.scorPlayFirstname }}</td><td>{{ scorerShow.scorer.scorPlaySurname }}</td><td>{{ scorerShow.scorer.scorTeamName }}</td><td>{{ scorerShow.scorer.scorGoal }}</td><td><div class=\\\"pull-right no-opacity opacity-transition\\\" ng-class=\\\"{ \\'full-opacity\\': scorerShow.showControls }\\\"><a role=button class=\\\"btn btn-sm btn-default accordion-toggle\\\" data-toggle=collapse data-target=.scorer-edit-form-{{scorerShow.scorer.scorId}}><i class=\\\"fa fa-pencil\\\"></i></a></div></td></tr>\");\n$templateCache.put(\"app/pages/teams/destroy/destroy.html\",\"<div class=modal-header><a role=button class=close ng-click=teamDestroy.cancel()><span aria-hidden=true>×</span></a><h3 class=modal-title>Sei sicuro?</h3></div><div class=modal-body>Questa operazione <strong>non è reversibile</strong>.</div><div class=modal-footer><a role=button class=\\\"btn btn-outline pull-left\\\" ng-click=teamDestroy.cancel()>Annulla</a> <a role=button class=\\\"btn btn-outline\\\" ng-click=teamDestroy.ok()>Elimina squadra</a></div>\");\n$templateCache.put(\"app/pages/teams/edit/edit.html\",\"<tr><td colspan=8 class=\\\"hidden-row active\\\"><div id=team-edit-form-{{teamEdit.team.teamId}} class=\\\"accordion-body collapse team-edit-form-{{teamEdit.team.teamId}}\\\"><form class=\\\"team-edit-form relative\\\" name=teamEditForm ng-submit=teamEdit.submit()><div class=row><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': teamEditForm.name.$dirty && teamEditForm.name.$invalid}\\\"><label for=teamEditForm{{teamEdit.team.teamId}}-name>Modifica Nome</label><input id=teamEditForm{{teamEdit.team.teamId}}-name ng-model=teamEdit.form.name ng-init=\\\"teamEdit.form.name = teamEdit.team.teamName\\\" name=name type=text class=form-control required> <span ng-show=teamEditForm.name.$dirty ng-messages=teamEditForm.name.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': teamEditForm.captain.$dirty && teamEditForm.captain.$invalid}\\\"><label for=teamEditForm{{teamEdit.team.teamId}}-captain>Modifica Capitano</label><input id=teamEditForm{{teamEdit.team.teamId}}-captain ng-model=teamEdit.form.captain ng-init=\\\"teamEdit.form.captain = teamEdit.team.teamCaptain\\\" name=captain type=text class=form-control required> <span ng-show=teamEditForm.captain.$dirty ng-messages=teamEditForm.captain.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': teamEditForm.phone.$dirty && teamEditForm.phone.$invalid}\\\"><label for=teamEditForm{{teamEdit.team.teamId}}-phone>Modifica Telefono</label><input id=teamEditForm{{teamEdit.team.teamId}}-phone ng-model=teamEdit.form.phone ng-init=\\\"teamEdit.form.phone = teamEdit.team.teamMobilePhone\\\" name=phone type=text class=form-control required> <span ng-show=teamEditForm.phone.$dirty ng-messages=teamEditForm.phone.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': teamEditForm.time.$dirty && teamEditForm.time.$invalid}\\\"><label for=teamEditForm{{teamEdit.team.teamId}}-time>Modifica Orario Preferito</label><div class=input-group><div class=input-group-addon><i class=\\\"fa fa-clock-o\\\"></i></div><input id=teamEditForm{{teamEdit.team.teamId}}-time ng-model=teamEdit.form.time ng-init=\\\"teamEdit.form.time = teamEdit.team.teamTime\\\" name=time type=text class=form-control timepicker required></div><span ng-show=teamEditForm.time.$dirty ng-messages=teamEditForm.time.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-6 col-md-4 col-lg-3\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': teamEditForm.place.$dirty && teamEditForm.place.$invalid}\\\"><label for=teamEditForm{{teamEdit.team.teamId}}-place>Modifica Luogo Preferito</label><input id=teamEditForm{{teamEdit.team.teamId}}-place ng-model=teamEdit.form.place ng-init=\\\"teamEdit.form.place = teamEdit.team.teamPlace\\\" name=place type=text class=form-control required> <span ng-show=teamEditForm.place.$dirty ng-messages=teamEditForm.place.$error class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div></div><div class=row><div class=col-xs-12><div class=pull-right><a role=button class=\\\"btn btn-default\\\" ng-click=teamEdit.cancel()>Annulla</a> <input type=submit value=Salva class=\\\"btn btn-success\\\"></div></div></div><div ng-show=teamEdit.loading class=\\\"overlay absolute fill\\\"><i class=\\\"fa fa-refresh fa-spin\\\"></i></div></form></div></td></tr>\");\n$templateCache.put(\"app/pages/teams/show/show.html\",\"<tr><td>{{ teamShow.team.teamName }}</td><td>{{ teamShow.team.teamCaptain }}</td><td>{{ teamShow.team.teamMobilePhone }}</td><td>{{ teamShow.team.teamTime }}</td><td>{{ teamShow.team.teamPlace }}</td><td ng-if=\\\"teamShow.models.currentEvent.evenType == 1\\\">{{ teamShow.team.teamGroups }}</td><td><div class=\\\"pull-right no-opacity opacity-transition\\\" ng-class=\\\"{ \\'full-opacity\\': teamShow.showControls }\\\"><a role=button class=\\\"btn btn-sm btn-default accordion-toggle\\\" data-toggle=collapse data-target=.team-edit-form-{{teamShow.team.teamId}}><i class=\\\"fa fa-pencil\\\"></i> </a><a role=button class=\\\"btn btn-sm btn-danger\\\" ng-click=teamShow.destroy()><i class=\\\"fa fa-trash\\\"></i></a></div></td></tr>\");\n$templateCache.put(\"app/pages/calendar/advancedEdit/cardsBox/cardsBox.html\",\"<div class=\\\"panel panel-primary\\\"><div class=panel-heading>Cartellini {{ cardsBox.teamName }}</div><div class=panel-body><table class=table ng-show=\\\"cardsBox.cards.length  > 0\\\"><tr><th>Marcatore</th><th>Tipo diffida</th><th></th></tr><tr ng-repeat=\\\"card in cardsBox.cards\\\" show-on-hover=\\\"#removeCardButton{{ card.playId + \\'\\' + card.cardId }}\\\"><td>{{ card.playName }} {{ card.playSurname }}</td><td>{{ card.flgCardsPretty }}</td><td><div class=pull-right id=\\\"removeCardButton{{ card.playId + \\'\\' + card.cardId }}\\\"><a role=button class=\\\"btn btn-sm btn-danger\\\" ng-click=cardsBox.destroyCard(card)><i class=\\\"fa fa-trash\\\"></i></a></div></td></tr></table><form id=\\\"createCardForm{{ cardsBox.teamId }}\\\" name=\\\"createCardForm{{ cardsBox.teamId }}\\\" ng-submit=cardsBox.createCard()><div class=row><div class=\\\"col-sm-7 small-padding-right\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': this[\\'createCardForm\\' + cardsBox.teamId].name.$dirty && this[\\'createCardForm\\' + cardsBox.teamId].name.$invalid}\\\"><label for=\\\"createCardForm{{ cardsBox.teamId }}-name\\\">Nome Marcatore</label><input id=\\\"createCardForm{{ cardsBox.teamId }}-name\\\" type=text ng-model=cardsBox.typeaheadName ng-model-options=\\\"{getterSetter: true}\\\" placeholder=\\\"Nome marcatore\\\" uib-typeahead=\\\"player as (player.name + \\' \\' + player.surname) for player in cardsBox.autocomplete | filter:{name:$viewValue} | limitTo: 6\\\" typeahead-show-hint=true typeahead-min-length=0 autocomplete=off class=form-control name=name> <span ng-show=\\\"this[\\'createCardForm\\' + cardsBox.teamId].name.$dirty\\\" ng-messages=\\\"this[\\'createCardForm\\' + cardsBox.teamId].name.$error\\\" class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-5 small-padding-left\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': this[\\'createCardForm\\' + cardsBox.teamId].cardType.$dirty && this[\\'createCardForm\\' + cardsBox.teamId].cardType.$invalid}\\\"><label for=\\\"createCardForm{{ cardsBox.teamId }}-cardType\\\">Tipo diffida</label><select id=\\\"createCardForm{{ cardsBox.teamId }}-cardType\\\" ng-model=cardsBox.form.cardType ng-init=\\\"cardsBox.form.cardType = cardsBox.cardTypes[0]\\\" name=cardType class=\\\"form-control no-padding-right\\\" ng-options=\\\"cardType as cardType.name for cardType in cardsBox.cardTypes track by cardType.id\\\" required></select></div></div><div class=\\\"col-sm-7 small-padding-right\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': this[\\'createCardForm\\' + cardsBox.teamId].surname.$dirty && this[\\'createCardForm\\' + cardsBox.teamId].surname.$invalid}\\\"><label for=\\\"createCardForm{{ cardsBox.teamId }}-surname\\\">Cognome Marcatore</label><input id=\\\"createCardForm{{ cardsBox.teamId }}-surname\\\" type=text ng-model=cardsBox.typeaheadSurname ng-model-options=\\\"{getterSetter: true}\\\" placeholder=\\\"Cognome marcatore\\\" uib-typeahead=\\\"player as (player.name + \\' \\' + player.surname) for player in cardsBox.autocomplete | filter:{surname:$viewValue} | limitTo: 6\\\" typeahead-show-hint=true typeahead-min-length=0 autocomplete=off class=form-control name=surname> <span ng-show=\\\"this[\\'createCardForm\\' + cardsBox.teamId].surname.$dirty\\\" ng-messages=\\\"this[\\'createCardForm\\' + cardsBox.teamId].surname.$error\\\" class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-5 small-padding-left\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': this[\\'createCardForm\\' + cardsBox.teamId].disqualificationDays.$dirty && this[\\'createCardForm\\' + cardsBox.teamId].disqualificationDays.$invalid}\\\"><label for=\\\"createCardForm{{ cardsBox.teamId }}-disqualificationDays\\\">Giorni di squalifica</label><select id=\\\"createCardForm{{ cardsBox.teamId }}-disqualificationDays\\\" ng-model=cardsBox.form.disqualificationDays ng-init=\\\"cardsBox.form.disqualificationDays = 0\\\" ng-disabled=\\\"cardsBox.form.cardType.id === 0\\\" name=disqualificationDays class=\\\"form-control no-padding-right\\\" ng-options=\\\"day as day for day in cardsBox.disqualificationDays track by day\\\" required></select></div></div><div class=\\\"col-sm-9 small-padding-right\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': this[\\'createCardForm\\' + cardsBox.teamId].note.$dirty && this[\\'createCardForm\\' + cardsBox.teamId].note.$invalid}\\\"><label for=\\\"createCardForm{{ cardsBox.teamId }}-note\\\">Note</label><input id=\\\"createCardForm{{ cardsBox.teamId }}-note\\\" type=text ng-model=cardsBox.form.note placeholder=\\\"Note diffida\\\" class=form-control name=note> <span ng-show=\\\"this[\\'createCardForm\\' + cardsBox.teamId].note.$dirty\\\" ng-messages=\\\"this[\\'createCardForm\\' + cardsBox.teamId].note.$error\\\" class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-3 small-padding-left\\\"><label>&nbsp;</label><input class=\\\"btn btn-primary form-control\\\" type=submit value=Aggiungi></div></div></form></div></div>\");\n$templateCache.put(\"app/pages/calendar/advancedEdit/scorersBox/scorersBox.html\",\"<div class=\\\"panel panel-primary\\\"><div class=panel-heading>Marcatori {{ scorersBox.teamName }}</div><div class=panel-body><table class=table ng-show=\\\"scorersBox.scorers.length  > 0\\\"><tr><th>Marcatore</th><th>Goal</th><th></th></tr><tr ng-repeat=\\\"scorer in scorersBox.scorers\\\" show-on-hover=\\\"#removeScorerButton{{ scorer.playId }}\\\"><td>{{ scorer.playName }} {{ scorer.playSurname }}</td><td>{{ scorer.goal }}</td><td><div class=pull-right id=\\\"removeScorerButton{{ scorer.playId }}\\\"><a role=button class=\\\"btn btn-sm btn-danger\\\" ng-click=scorersBox.destroyScorer(scorer)><i class=\\\"fa fa-trash\\\"></i></a></div></td></tr></table><form id=\\\"createScorerForm{{ scorersBox.teamId }}\\\" name=\\\"createScorerForm{{ scorersBox.teamId }}\\\" ng-submit=scorersBox.createScorer()><div class=row><div class=\\\"col-sm-9 small-padding-right\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': this[\\'createScorerForm\\' + scorersBox.teamId].name.$dirty && this[\\'createScorerForm\\' + scorersBox.teamId].name.$invalid}\\\"><label for=\\\"createScorerForm{{ scorersBox.teamId }}-name\\\">Nome Marcatore</label><input id=\\\"createScorerForm{{ scorersBox.teamId }}-name\\\" type=text ng-model=scorersBox.typeaheadName ng-model-options=\\\"{getterSetter: true}\\\" placeholder=\\\"Nome marcatore\\\" uib-typeahead=\\\"player as (player.name + \\' \\' + player.surname) for player in scorersBox.autocomplete | filter:{name:$viewValue} | limitTo: 6\\\" typeahead-show-hint=true typeahead-min-length=0 autocomplete=off class=form-control name=name> <span ng-show=\\\"this[\\'createScorerForm\\' + scorersBox.teamId].name.$dirty\\\" ng-messages=\\\"this[\\'createScorerForm\\' + scorersBox.teamId].name.$error\\\" class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-3 small-padding-left\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': this[\\'createScorerForm\\' + scorersBox.teamId].goals.$dirty && this[\\'createScorerForm\\' + scorersBox.teamId].goals.$invalid}\\\"><label for=\\\"createScorerForm{{ scorersBox.teamId }}-goals\\\">Goals</label><select id=\\\"createScorerForm{{ scorersBox.teamId }}-goals\\\" ng-model=scorersBox.form.goals name=goals class=\\\"form-control no-padding-right\\\" ng-options=\\\"score as score for score in scorersBox.scores track by score\\\" required></select></div></div><div class=\\\"col-sm-9 small-padding-right\\\"><div class=\\\"form-group has-feedback\\\" ng-class=\\\"{\\'has-error\\': this[\\'createScorerForm\\' + scorersBox.teamId].surname.$dirty && this[\\'createScorerForm\\' + scorersBox.teamId].surname.$invalid}\\\"><label for=\\\"createScorerForm{{ scorersBox.teamId }}-surname\\\">Cognome Marcatore</label><input id=\\\"createScorerForm{{ scorersBox.teamId }}-surname\\\" type=text ng-model=scorersBox.typeaheadSurname ng-model-options=\\\"{getterSetter: true}\\\" placeholder=\\\"Cognome marcatore\\\" uib-typeahead=\\\"player as (player.name + \\' \\' + player.surname) for player in scorersBox.autocomplete | filter:{surname:$viewValue} | limitTo: 6\\\" typeahead-show-hint=true typeahead-min-length=0 autocomplete=off class=form-control name=surname> <span ng-show=\\\"this[\\'createScorerForm\\' + scorersBox.teamId].surname.$dirty\\\" ng-messages=\\\"this[\\'createScorerForm\\' + scorersBox.teamId].surname.$error\\\" class=help-block role=alert><span ng-message=required>Questo campo è obbligatorio</span></span></div></div><div class=\\\"col-sm-3 small-padding-left\\\"><label>&nbsp;</label><input class=\\\"btn btn-primary form-control\\\" type=submit value=Aggiungi></div></div></form></div></div>\");}]);"],"sourceRoot":"/source/"}